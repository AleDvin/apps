{
    "blocks": [],
    "contracts": [
        {
            "Name": "DeleteApplication",
            "Value": "contract DeleteApplication {\n    data {\n        ApplicationId int\n    }\n\n    conditions {\n    }\n\n    action {\n        DBUpdate(\"applications\", $ApplicationId, \"delete\", 1)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "EditAppParameter",
            "Value": "contract EditAppParameter {\n\t\tdata {\n\t\t\tId int\n\t\t\tValue string\n\t\t\tConditions string\n\t\t}\n\t\tconditions {\n\t\t\tRowConditions(\"appparam\", $Id)\n\t\t\tValidateCondition($Conditions, $ecosystem_id)\n\t\t}\n\t\taction {\n\t\t\tDBUpdate(\"appparam\", $Id, \"value,conditions\", $Value, $Conditions )\n\t\t}\n\t}",
            "Conditions": "true"
        },
        {
            "Name": "EditApplication",
            "Value": "contract EditApplication {\n    data {\n        Id int\n        Name string\n        Conditions string\n    }\n\n    conditions {\n        ValidateCondition($Conditions, $ecosystem_id)\n    }\n\n    action {\n        DBUpdate(\"applications\", $Id, \"name,conditions\", $Name, $Conditions)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "EditLang",
            "Value": "contract EditLang {\n\tdata {\n\t\tName  string\n\t\tLocaliz array\n\t\tIdLang array\n\t\t//добавить app_id и в DBUpdate\n\t}\n\tconditions {\n\t\tvar j,len int\n\t\t\n\t\tlen = Len($IdLang)\n\t\twhile j < len {\n\t\t\tif ($IdLang[j] == \"\"){\n\t\t\t\tinfo(\"Locale empty\")\n\t\t\t}\n\t\t\tif ($Localiz[j] == \"\"){\n\t\t\t\tinfo(\"Value empty\")\n\t\t\t}\n\t\t\tj = j + 1\n\t\t}\n\t\tEvalCondition(\"parameters\", \"changing_language\", \"value\")\n\t\t\n\t}\n\taction {\n\t\t\n\t\tvar oldRes string\n\t\toldRes = DBFind(\"languages\").Where(\"name = ?\", $Name).One(\"res\")\n\t\t\n\t\tvar i,langLen int\n\t\tvar res string\n\n\t\tres = Substr(oldRes, 1, Size(oldRes) - 2)\n\t\tres = res + \", \"\n\n\t\tlangLen = Len($IdLang)\n\t\twhile i < langLen {\n\t\t\tif (i + 1 == langLen){\n\t\t\t\tres = res + Sprintf(`%q: %q`,$IdLang[i],$Localiz[i])\n\t\t\t\ti = i + 1\n\t\t\t}\n\t\t\telse {\n\t\t\t\tres = res + Sprintf(`%q: %q, `,$IdLang[i],$Localiz[i])\n\t\t\t\ti = i + 1\n\t\t\t}\n\t\t}\n\n\t\tres = Sprintf(\"{\"+\"%v\"+\"}\", res)\n\t\tDBUpdateExt(\"languages\", \"name\", $Name, \"res\", res )\n\t\tUpdateLang($Name, res)\n\t}\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "NewAppParameter",
            "Value": "contract NewAppParameter {\n\t\tdata {\n\t\t\tName string\n\t\t\tValue string\n\t\t\tConditions string\n\t\t\tApp_id int\n\t\t}\n\t\tconditions {\n\t\t\tValidateCondition($Conditions, $ecosystem_id)\n\n\t\t\tvar row map\n\t\t\trow = DBRow(\"appparam\").Columns(\"id\").Where(\"name = ?\", $Name)\n\n\t\t\tif row {\n\t\t\t\twarning Sprintf( \"Parameter %s already exists\", $Name)\n\t\t\t}\n\t\t}\n\t\taction {\n\t\t\tDBInsert(\"appparam\", \"app_id,name,value,conditions\",$App_id,$Name, $Value, $Conditions )\n\t\t}\n\t}",
            "Conditions": "true"
        },
        {
            "Name": "NewApplication",
            "Value": "contract NewApplication {\n    data {\n        Name string\n        Conditions string\n    }\n\n    conditions {\n        ValidateCondition($Conditions, $ecosystem_id)\n    }\n\n    action {\n        $new_app_id = DBInsert(\"applications\", \"name,condition\", $Name, $Conditions)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "NewBlock",
            "Value": "contract NewBlock {\n\t\tdata {\n\t\t\tName       string\n\t\t\tValue      string\n\t\t\tConditions string\n\t\t\tApplicationId int \"optional\"\n\t\t}\n\t\tconditions {\n\t\t\tValidateCondition($Conditions,$ecosystem_id)\n\n\t\t\tvar row map\n\t\t\trow = DBRow(\"blocks\").Columns(\"id\").Where(\"name = ?\", $Name)\n\n\t\t\tif row {\n\t\t\t\twarning Sprintf( \"Block %s already exists\", $Name)\n\t\t\t}\n\t\t}\n\t\taction {\n\t\t\tDBInsert(\"blocks\", \"name,value,conditions,app_id\", $Name, $Value, $Conditions, $ApplicationId )\n\t\t}\n\t}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "NewColumn",
            "Value": "contract NewColumn {\n\t\tdata {\n\t\t\tTableName   string\n\t\t\tName        string\n\t\t\tType        string\n\t\t\tPermissions string\n\t\t}\n\t\tconditions {\n\t\t\tColumnCondition($TableName, $Name, $Type, $Permissions)\n\t\t}\n\t\taction {\n\t\t\tCreateColumn($TableName, $Name, $Type, $Permissions)\n\t\t}\n\t\tfunc rollback() {\n\t\t\tRollbackColumn($TableName, $Name)\n\t\t}\n\t\tfunc price() int {\n\t\t\treturn  SysParamInt(\"column_price\")\n\t\t}\n\t}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "NewContract",
            "Value": "contract NewContract {\n\t\tdata {\n\t\t\tValue      string\n\t\t\tConditions string\n\t\t\tWallet         string \"optional\"\n\t\t\tTokenEcosystem int \"optional\"\n\t\t\tApplicationId int \"optional\"\n\t\t}\n\t\tconditions {\n\t\t\tValidateCondition($Conditions,$ecosystem_id)\n\t\t\t$walletContract = $key_id\n\t\t\t   if $Wallet {\n\t\t\t\t$walletContract = AddressToId($Wallet)\n\t\t\t\tif $walletContract == 0 {\n\t\t\t\t   error Sprintf(\"wrong wallet %s\", $Wallet)\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar list array\n\t\t\tlist = ContractsList($Value)\n\t\t\t\n\t\t\tif Len(list) == 0 {\n\t\t\t\terror \"must be the name\"\n\t\t\t}\n\n\t\t\tvar i int\n\t\t\twhile i < Len(list) {\n\t\t\t\tif IsObject(list[i], $ecosystem_id) {\n\t\t\t\t\twarning Sprintf(\"Contract or function %s exists\", list[i] )\n\t\t\t\t}\n\t\t\t\ti = i + 1\n\t\t\t}\n\n\t\t\t$contract_name = list[0]\n\t\t\tif !$TokenEcosystem {\n\t\t\t\t$TokenEcosystem = 1\n\t\t\t} else {\n\t\t\t\tif !SysFuel($TokenEcosystem) {\n\t\t\t\t\twarning Sprintf(\"Ecosystem %d is not system\", $TokenEcosystem )\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\taction {\n\t\t\tvar root, id int\n\t\t\troot = CompileContract($Value, $ecosystem_id, $walletContract, $TokenEcosystem)\n\t\t\tid = DBInsert(\"contracts\", \"name,value,conditions, wallet_id, token_id,app_id\", \n\t\t\t\t   $contract_name, $Value, $Conditions, $walletContract, $TokenEcosystem, $ApplicationId)\n\t\t\tFlushContract(root, id, false)\n\t\t\t$result = id\n\t\t}\n\t\tfunc rollback() {\n\t\t\tvar list array\n    \t\tlist = ContractsList($Value)\n\t\t\tvar i int\n\t\t\twhile i < Len(list) {\n\t\t\t\tRollbackContract(list[i])\n\t\t\t\ti = i + 1\n\t\t\t}\n\t\t}\n\t\tfunc price() int {\n\t\t\treturn  SysParamInt(\"contract_price\")\n\t\t}\n\t}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "NewLang",
            "Value": "contract NewLang {\n\tdata {\n\t\tName  string\n\t\tLocaliz array\n\t\tIdLang array\n\t\tApplicationId int \"optional\"\n\t}\n\tconditions {\n\t\tvar j,len int\n\t\tlen = Len($IdLang)\n\t\twhile j < len {\n\t\t\tif ($IdLang[j] == \"\"){\n\t\t\t\tinfo(\"Locale empty\")\n\t\t\t}\n\t\t\tif ($Localiz[j] == \"\"){\n\t\t\t\tinfo(\"Value empty\")\n\t\t\t}\n\t\t\tj = j + 1\n\t\t}\n\t\tEvalCondition(\"parameters\", \"changing_language\", \"value\")\n\n\t\tvar row map\n\t\trow = DBRow(\"languages\").Columns(\"id\").Where(\"name = ?\", $Name)\n\n\t\tif row {\n\t\t\terror Sprintf(\"The language resource %s already exists\", $Name)\n\t\t}\n\t}\n\taction {\n\t\tvar i,len,lenshar int\n\t\tvar res,langarr string\n\t\tlen = Len($IdLang)\n\t\tlenshar = Len($Localiz)\n\t\twhile i < len {\n\t\t\tif (i + 1 == len){\n\t\t\t\tres = res + Sprintf(`%q: %q`,$IdLang[i],$Localiz[i])\n\t\t\t\ti = i + 1\n\t\t\t}\n\t\t\telse {\n\t\t\t\tres = res + Sprintf(`%q: %q, `,$IdLang[i],$Localiz[i])\n\t\t\t\ti = i + 1\n\t\t\t}\n\t\t}\n\t\tlangarr = Sprintf(\"{\"+\"%v\"+\"}\", res)\n\t\tDBInsert(\"languages\", \"name,res,app_id\", $Name, langarr, $ApplicationId )\n\t\tUpdateLang($Name, langarr)\n\t}\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "NewMenu",
            "Value": "contract NewMenu {\n\t\tdata {\n\t\t\tName       string\n\t\t\tValue      string\n\t\t\tTitle      string \"optional\"\n\t\t\tConditions string\n\t\t\tApplicationId int \"optional\"\n\t\t}\n\t\tconditions {\n\t\t\tValidateCondition($Conditions,$ecosystem_id)\n\n\t\t\tvar row map\n\t\t\trow = DBRow(\"menu\").Columns(\"id\").Where(\"name = ?\", $Name)\n\n\t\t\tif row {\n\t\t\t\twarning Sprintf( \"Menu %s already exists\", $Name)\n\t\t\t}\n\t\t}\n\t\taction {\n\t\t\tDBInsert(\"menu\", \"name,value,title,conditions,app_id\", $Name, $Value, $Title, $Conditions, $ApplicationId )\n\t\t}\n\t\tfunc price() int {\n\t\t\treturn  SysParamInt(\"menu_price\")\n\t\t}\n\t}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "NewPage",
            "Value": "contract NewPage {\n\t\tdata {\n\t\t\tName       string\n\t\t\tValue      string\n\t\t\tMenu       string\n\t\t\tConditions string\n\t\t\tValidateCount int \"optional\"\n\t\t\tApplicationId int \"optional\"\n\t\t}\n\t\tfunc preparePageValidateCount(count int) int {\n\t\t\tvar min, max int\n\t\t\tmin = Int(EcosysParam(\"min_page_validate_count\"))\n\t\t\tmax = Int(EcosysParam(\"max_page_validate_count\"))\n\t\n\t\t\tif count < min {\n\t\t\t\tcount = min\n\t\t\t} else {\n\t\t\t\tif count > max {\n\t\t\t\t\tcount = max\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn count\n\t\t}\n\t\tconditions {\n\t\t\tValidateCondition($Conditions,$ecosystem_id)\n\n\t\t\tvar row map\n\t\t\trow = DBRow(\"pages\").Columns(\"id\").Where(\"name = ?\", $Name)\n\n\t\t\tif row {\n\t\t\t\twarning Sprintf( \"Page %s already exists\", $Name)\n\t\t\t}\n\n\t\t\t$ValidateCount = preparePageValidateCount($ValidateCount)\n\t\t}\n\t\taction {\n\t\t\tDBInsert(\"pages\", \"name,value,menu,validate_count,conditions,app_id\", $Name, $Value, $Menu, $ValidateCount, $Conditions, $ApplicationId)\n\t\t}\n\t\tfunc price() int {\n\t\t\treturn  SysParamInt(\"page_price\")\n\t\t}\n\t}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "RestoreApplication",
            "Value": "contract RestoreApplication {\n    data {\n        ApplicationId int\n    }\n\n    conditions {\n    }\n\n    action {\n        DBUpdate(\"applications\", $ApplicationId, \"delete\", 0)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        }
    ],
    "data": [],
    "languages": [
        {
            "Name": "app_params",
            "Conditions": "",
            "Trans": "{\"ru\": \"Параметры Приложения\", \"en\": \"Application Params\"}"
        },
        {
            "Name": "application",
            "Conditions": "",
            "Trans": "{\"ru\":\"Приложение\",\"en\":\"Application\"}"
        },
        {
            "Name": "applications",
            "Conditions": "",
            "Trans": "{\"ru\":\"Приложения\",\"en\":\"Applications\"}"
        },
        {
            "Name": "binary",
            "Conditions": "",
            "Trans": "{\"ru\":\"Двоичные данные\",\"en\":\"Binary Data\"}"
        },
        {
            "Name": "blocks",
            "Conditions": "",
            "Trans": "{\"ru\":\"Блоки\",\"en\":\"Blocks\"}"
        },
        {
            "Name": "deleted_applications",
            "Conditions": "",
            "Trans": "{\"ru\":\"Удалённые приложения\",\"en\":\"Deleted Applications\"}"
        },
        {
            "Name": "langres",
            "Conditions": "",
            "Trans": "{\"ru\": \"Языковые Ресурсы\", \"en\": \"Language Resources\"}"
        },
        {
            "Name": "menus",
            "Conditions": "",
            "Trans": "{\"ru\":\"Меню\",\"en\":\"Menus\"}"
        },
        {
            "Name": "name",
            "Conditions": "",
            "Trans": "{\"ru\":\"Название\",\"en\":\"Name\"}"
        },
        {
            "Name": "pages",
            "Conditions": "",
            "Trans": "{\"ru\":\"Страницы\",\"en\":\"Pages\"}"
        },
        {
            "Name": "params",
            "Conditions": "",
            "Trans": "{\"ru\":\"Параметры\",\"en\":\"Params\", \"en\": \"App Params\", \"ru\": \"Параметры Приложения\", \"en\": \"Params\", \"ru\": \"Параметры\"}"
        },
        {
            "Name": "smart_contracts",
            "Conditions": "",
            "Trans": "{\"ru\":\"Смарт-Контракты\",\"en\":\"Smart Contracts\"}"
        },
        {
            "Name": "tables",
            "Conditions": "",
            "Trans": "{\"ru\": \"Таблицы\", \"en\": \"Tables\"}"
        }
    ],
    "menus": [
        {
            "Name": "admin_menu",
            "Value": "MenuItem(\n    Icon: \"icon-screen-desktop\",\n    Page: \"interface\",\n    Title: \"Interface\"\n)\nMenuItem(\n    Icon: \"icon-docs\",\n    Page: \"tables\",\n    Title: \"Tables\"\n)\nMenuItem(\n    Icon: \"icon-briefcase\",\n    Page: \"contracts\",\n    Title: \"Smart Contracts\"\n)\nMenuItem(\n    Icon: \"icon-settings\",\n    Page: \"Params_list\",\n    Title: \"Ecosystem parameters\"\n)\nMenuItem(\n    Icon: \"icon-cloud-upload\",\n    Page: \"import\",\n    Title: \"Import\"\n)\nMenuItem(\n    Icon: \"icon-cloud-download\",\n    Page: \"export\",\n    Title: \"Export\"\n)\nMenuItem(\n    Icon: \"fa fa-blocks\",\n    Page: \"applications_list\",\n    Title: \"Applications\"\n)",
            "Conditions": "true"
        },
        {
            "Name": "application_menu",
            "Value": "MenuItem(Title:$pages$, Page:application_pages, Params: \"app_id=#app_id#\", Icon:\"icon icon-screen-desktop\")\r\nMenuItem(Title:$blocks$, Page:application_blocks, Params: \"app_id=#app_id#\", Icon:\"fa fa-th\")\r\nMenuItem(Title:$menus$, Page:application_menus, Params: \"app_id=#app_id#\", Icon:\"icon icon-menu\")\r\nMenuItem(Title:$tables$, Page:tables_list, Params: \"app_id=#app_id#\", Icon:\"icon icon-docs\")\r\nMenuItem(Title:$smart_contracts$, Page:application_contracts, Params: \"app_id=#app_id#\", Icon:\"icon icon-briefcase\")\r\nMenuItem(Title:$binary$, Page:application_binary, Params: \"app_id=#app_id#\", Icon:\"fa fa-file\")\r\nMenuItem(Title:$app_params$, Page:application_params, Params: \"app_id=#app_id#\", Icon:\"icon icon-settings\")\r\nMenuItem(Title:$langres$, Page:application_langres, Params: \"app_id=#app_id#\", Icon:\"icon icon-settings\")",
            "Conditions": "ContractConditions(\"MainCondition\")"
        }
    ],
    "pages": [
        {
            "Name": "EditParams",
            "Value": "Div(Class: fullscreen){\r\n    If(#stylesheet# == stylesheet){\r\n        DBFind(parameters, src_params).Where(name='#stylesheet#').Vars(\"param\")\r\n    }.Else{\r\n    DBFind(parameters, src_params).WhereId(#id#).Vars(\"param\")\r\n    }\r\n    SetTitle(Ecosystem parameters)\r\n    Div(Class: breadcrumb){\r\n        LinkPage(Application Parameters, Params_list)\r\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n        Span(Class: text-muted, Body: #param_name#)\r\n    }\r\n    Div(Class: fullscreen-wrapper){\r\n        Form(){\r\n            Div(Class: form-group){\r\n                Label(For: name){\r\n                    Span(Body: Name)\r\n                }\r\n                Input(Name: name, Class: form-control, Value: #param_name#, Disabled: \"true\")\r\n            }\r\n            Div(Class: form-group){\r\n                Input(Type: textarea, Name: value, Value: \"#param_value#\" ).Style(height: 500px !important;)\r\n            }\r\n            Div(Class: mb0 form-group){\r\n                Label(For: conditions){\r\n                    Span(Body: Change Conditions)\r\n                }\r\n                Input(Name: conditions, Class: form-control, Value: #param_conditions#)\r\n            }\r\n            Div(Class: mt-lg){\r\n                Button(Class: btn btn-primary, Body: Save, Contract:EditParameter, Params: \"Id=#param_id#,Value=Val(value),Conditions=Val(conditions)\",Page:Params_list)\r\n            }\r\n        }\r\n    }\r\n}",
            "Conditions": "true",
            "Menu": "default_menu"
        },
        {
            "Name": "NewParams",
            "Value": "Div(Class: fullscreen){\r\n    SetTitle(Ecosystem parameters)\r\n    Div(breadcrumb){\r\n        LinkPage(Ecosystem parameters, Params_list)\r\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n        Span(Class: text-muted, Body: New Ecosystem Parameter)\r\n    }\r\n    Div(Class: fullscreen-wrapper){\r\n        Form(){\r\n            Div(Class: form-group){\r\n                Label(For: name){\r\n                    Span(Body: Name)\r\n                }\r\n                Input(Name: name, Class: form-control)\r\n            }\r\n            Div(Class: form-group){\r\n                Input(Type: textarea, Name: value).Style(height: 500px !important;)\r\n            }\r\n            Div(Class: mb0 form-group){\r\n                Label(For: conditions){\r\n                    Span(Body: Change Conditions)\r\n                }\r\n                Input(Name: conditions, Class: form-control)\r\n            }\r\n            Div(Class: mt-lg){\r\n                Button(Class: btn btn-primary, Body: Save, Contract:NewParameter, Params: \"Name=Val(name),Value=Val(value),Conditions=Val(conditions)\",Page:Params_list)\r\n            }\r\n        }\r\n    }\r\n}",
            "Conditions": "true",
            "Menu": "default_menu"
        },
        {
            "Name": "Params_list",
            "Value": "Div(Class: fullscreen){\r\n    SetTitle(Ecosystem parameters)\r\n\tDiv(breadcrumb){\r\n\t\tSpan(Class: text-muted, Body: This section is used to configure stored reusable parameters. They are used to control basic ecosystem behavior, but you can create your own ones and use them in the template engine or smart-contracts)\r\n\t}\r\n    Div(Class: pull-right){\r\n        LinkPage(Body: Em(Class: icon icon-plus) Create, Page: NewParams, Class: ml btn-tool)\r\n        LinkPage(Body: Em(Class: icon icon-picture) Manage stylesheet, Page: EditParams , Class: ml btn-tool, PageParams:\"stylesheet=stylesheet\" )\r\n    }.Style(\r\n        height: 45px;\r\n        padding-top: 10px;\r\n        a {\r\n            float: right;\r\n        }\r\n    )\r\n    Div(Class: fullscreen){\r\n        DBFind(parameters, src_appparameters).Order(id desc).Custom(custom_actions){\r\n            Div(){\r\n                Span(){\r\n                    Button(Class: btn btn-default, Body: Em(Class: fa fa-edit), PageParams: \"id=#id#\", Page: EditParams)\r\n                }\r\n            }\r\n        }\r\n        Table(src_appparameters, \"Name=name,Application=app_id,Value=value,Conditions=conditions,=custom_actions\").Style(\r\n        tbody > tr:nth-of-type(odd) {\r\n            background-color: #fafbfc; \r\n        } \r\n        tbody > tr > td {\r\n            word-break: break-all;\r\n            padding: 8px 20px !important;\r\n            font-weight: 400;\r\n            font-size: 13px;\r\n            color: #666;\r\n            border-top: 1px solid #eee;\r\n            vertical-align: middle;\r\n        } \r\n        tr  > *:first-child {\r\n            padding-left:20px;\r\n            width: 160px;\r\n        }\r\n        tr  > *:last-child {\r\n            text-align:right; \r\n            padding-right:20px;\r\n            width: 300px;\r\n        }\r\n        thead {\r\n            background-color: #eee;\r\n        })\r\n    }\r\n}",
            "Conditions": "true",
            "Menu": "default_menu"
        },
        {
            "Name": "application_addBinary",
            "Value": "Form(){\r\n    Div(col-md-9 mc-sm text-left){\r\n        ImageInput(Name: databin, Width: 200, Ratio: 1/1)\r\n        Input(Name: name, Placeholder: name)\r\n        Button(Upload, Contract: UploadBinary, Class: btn btn-primary, Params: \"Name=Val(name),AppID=#app_id#,Data=Val(databin)\")\r\n    } \r\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "application_menu"
        },
        {
            "Name": "application_binary",
            "Value": "DBFind(applications, src_app).Where(\"id=#app_id#\").Limit(1).Vars(\"app\")\r\n\r\nDiv(Class: content-wrapper){\r\n\tSetTitle(#app_name#: $binary$)\r\n    Div(Class: breadcrumb){\r\n        LinkPage(LangRes(applications), applications_list)\r\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n        Span(Class: text-muted, Body: #app_name#: $binary$)\r\n    }\r\n\r\n    If(GetVar(sort)==\"\"){\r\n        SetVar(sort, \"id\")\r\n    }\r\n\r\n    Div(Class: clearfix){\r\n        Button(Body: Upload Binary, Class: btn btn-primary pull-right, Page: application_addBinary, PageParams: \"app_id=#app_id#\")\r\n        Button(Body: Sort by ID, Class: btn btn-primary pull-left, Page: application_binary, PageParams: \"app_id=#app_id#,sort=id\")\r\n        Button(Body: Sort by Name, Class: btn btn-primary pull-left, Page: application_binary, PageParams: \"app_id=#app_id#,sort=name\")\r\n    }\r\n    DBFind(binaries, src_binparameters).Order(#sort# desc).Where(app_id = `#app_id#`).Custom(DataBin){\r\n        Image(Src: Binary(\"#name#\", #app_id#)).Style(width: 150px;border: 1px solid #5A5D63; margin-right: 10px;)\r\n    }\r\n\r\n    Div(Class: panel panel-default){\r\n        Form(){\r\n            Table(src_binparameters, \"Name=name,Owner=member_id,Data=DataBin\")\r\n            }\r\n        }\r\n    }\r\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "application_menu"
        },
        {
            "Name": "application_blocks",
            "Value": "DBFind(applications, src_app).Where(\"id=#app_id#\").Limit(1).Vars(\"app\")\r\n\r\nDiv(Class: content-wrapper){\r\n\tSetTitle(#app_name#: $blocks$)\r\n    Div(Class: breadcrumb){\r\n        LinkPage(LangRes(applications), applications_list)\r\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n        Span(Class: text-muted, Body: #app_name#: $blocks$)\r\n    }\r\n\r\n    If(GetVar(sort)==\"\"){\r\n        SetVar(sort, \"id\")\r\n    }\r\n\r\n    Div(Class: clearfix){\r\n        Button(Body: Sort by ID, Class: btn btn-primary pull-left, Page: application_blocks, PageParams: \"app_id=#app_id#,sort=id\")\r\n        Button(Body: Sort by Name, Class: btn btn-primary pull-left, Page: application_blocks, PageParams: \"app_id=#app_id#,sort=name\")\r\n        Button(Body: Create block, Class: btn btn-primary pull-right, Page: editor, PageParams: \"create=block,appId=#app_id#\")\r\n    }\r\n\r\n    DBFind(blocks, src_blocks).Order(#sort# desc).Where(\"app_id=#app_id#\")\r\n\r\n    Div(Class: panel panel-default){\r\n        Form(){\r\n            Div(Class: row){\r\n                ForList(src_blocks){\r\n                    Div(Class: col-md-4){\r\n                        Div(Class: row){\r\n                            Div(Class: col-md-7){\r\n                                Span(Class: pl-sm, Body: #name#)\r\n                            }\r\n                            Div(Class: col-md-5){\r\n                                Button(Class: btn btn-default, Body: Em(Class: fa fa-edit), PageParams: \"open=block,name=#name#\", Page: editor)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "application_menu"
        },
        {
            "Name": "application_contracts",
            "Value": "DBFind(applications, src_app).Where(\"id=#app_id#\").Limit(1).Vars(\"app\")\r\n\r\nDiv(Class: content-wrapper){\r\n\tSetTitle(#app_name#: $smart_contracts$)\r\n    Div(Class: breadcrumb){\r\n        LinkPage(LangRes(applications), applications_list)\r\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n        Span(Class: text-muted, Body: #app_name#: $smart_contracts$)\r\n    }\r\n\r\n    If(GetVar(sort)==\"\"){\r\n        SetVar(sort, \"id\")\r\n    }\r\n\r\n    Div(Class: clearfix){\r\n        Button(Body: Sort by ID, Class: btn btn-primary pull-left, Page: application_contracts, PageParams: \"app_id=#app_id#,sort=id\")\r\n        Button(Body: Sort by Name, Class: btn btn-primary pull-left, Page: application_contracts, PageParams: \"app_id=#app_id#,sort=name\")\r\n        Button(Body: Create contract, Class: btn btn-primary pull-right, Page: editor, PageParams: \"create=contract,appId=#app_id#\")\r\n    }\r\n\r\n    DBFind(contracts, src_contracts).Order(#sort# desc).Where(\"app_id=#app_id#\")\r\n\r\n    Div(Class: panel panel-default){\r\n        Form(){\r\n            Div(Class: row){\r\n                ForList(src_contracts){\r\n                    Div(Class: col-md-6){\r\n                        Div(Class: row){\r\n                            Div(Class: col-xs-4){\r\n                                Span(Class: pl-sm, Body: #name#)\r\n                            }\r\n                            Div(Class: col-xs-5){\r\n                                Address(#wallet_id#)\r\n                            }\r\n                            Div(Class: col-xs-3){\r\n                                Button(Class: btn btn-default, Body: Em(Class: fa fa-edit), PageParams: \"open=contract,name=#name#\", Page: editor)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "application_menu"
        },
        {
            "Name": "application_create",
            "Value": "Div(Class: content-wrapper){\r\n\r\n    Div(Class: row df f-valign){\r\n        Div(Class: col-md-3)\r\n        Div(Class: col-md-6){\r\n\r\n            Div(Class: panel panel-primary){\r\n                Div(Class: panel-heading, Body: New Application)\r\n                Form(){\r\n                    Div(Class: list-group-item){\r\n\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\tLabel(For: name){\r\n\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(name))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\t\t\tInput(Class: form-control, Type: text, Name: name)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n                        Div(Class: row df f-valign){\r\n\t\t\t\t\t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\tLabel(For: conditions){\r\n\t\t\t\t\t\t\t\t\tSpan(Body: Conditions)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\t\t\tInput(Class: form-control, Type: text, Name: conditions)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n                    \r\n\t\t\t\t\t\t\r\n                    Div(Class: panel-footer clearfix){\r\n                        Div(Class: pull-right){\r\n\t\t\t\t\t\t\tButton(Body: Add, Class: btn btn-primary, Page: applications_list, Contract: NewApplication, Params: \"Name=Val(name),Conditions=Val(conditions)\")\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        Div(Class: col-md-3)\r\n    }\r\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        },
        {
            "Name": "application_edit",
            "Value": "Div(Class: content-wrapper){\r\n    SetTitle(Edit Application)\r\n    DBFind(applications, src_application).Where(\"id=#id#\").Limit(1).Vars(\"app\")\r\n    Div(Class: breadcrumb){\r\n        LinkPage(LangRes(applications), applications_list)\r\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n        Span(Class: text-muted, Body: #app_name#)\r\n    }\r\n    Div(Class: row df f-valign){\r\n        Div(Class: col-md-3)\r\n        Div(Class: col-md-6){\r\n\r\n            Div(Class: panel panel-primary){\r\n                Div(Class: panel-heading, Body: New Application)\r\n                Form(){\r\n                    Div(Class: list-group-item){\r\n\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\tLabel(For: name){\r\n\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(name))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\t\t\tInput(Class: form-control, Type: text, Name: name, Value: #app_name#)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n                        Div(Class: row df f-valign){\r\n\t\t\t\t\t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\tLabel(For: conditions){\r\n\t\t\t\t\t\t\t\t\tSpan(Body: Conditions)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\t\t\tInput(Class: form-control, Type: text, Name: conditions, Value: #app_conditions#)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n                    Div(Class: panel-footer clearfix){\r\n                        Div(Class: pull-right){\r\n\t\t\t\t\t\t\tButton(Body: Add, Class: btn btn-primary, Page: applications_list, Contract: EditApplication, Params: \"Name=Val(name),Id=#id#,Conditions=Val(conditions)\")\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        Div(Class: col-md-3)\r\n    }\r\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        },
        {
            "Name": "application_editParam",
            "Value": "Div(Class: fullscreen){\r\n    DBFind(appparam, src_params).Where(\"id = #id#\").Limit(1).Vars(\"param\")\r\n    SetTitle(Edit Application Parameter)\r\n    Div(Class: breadcrumb){\r\n        LinkPage(Application Parameters, AppParams)\r\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n        Span(Class: text-muted, Body: #param_name#)\r\n    }\r\n    Div(Class: fullscreen-wrapper){\r\n        Form(){\r\n            Div(Class: form-group){\r\n                Label(For: name){\r\n                    Span(Body: Name)\r\n                }\r\n                Input(Name: name, Class: form-control, Value: #param_name#)\r\n            }\r\n            Div(Class: form-group){\r\n                Input(Type: textarea, Name: value, Value: \"#param_value#\" ).Style(height: 500px !important;)\r\n            }\r\n            Div(Class: mb0 form-group){\r\n                Label(For: conditions){\r\n                    Span(Body: Change Conditions)\r\n                }\r\n                Input(Name: conditions, Class: form-control, Value: #param_conditions#)\r\n            }\r\n            Div(Class: mt-lg){\r\n                Button(Class: btn btn-primary, Body: Save, Contract:EditAppParameter, Params: \"Id=#id#,Value=Val(value),Conditions=Val(conditions)\", Page: application_params, PageParams: \"app_id=#app_id#\")\r\n            }\r\n        }\r\n    }\r\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "application_menu"
        },
        {
            "Name": "application_langres",
            "Value": "DBFind(applications, src_app).Where(\"id=#app_id#\").Limit(1).Vars(\"app\")\r\n\r\nDiv(Class: content-wrapper){\r\n\tSetTitle(#app_name#: $langres$)\r\n    Div(Class: breadcrumb){\r\n        LinkPage(LangRes(applications), applications_list)\r\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n        Span(Class: text-muted, Body: #app_name#: $langres$)\r\n    }\r\n\r\n    If(GetVar(sort)==\"\"){\r\n        SetVar(sort, \"id\")\r\n    }\r\n\r\n    Div(Class: clearfix){\r\n        Button(Body: Sort by ID, Class: btn btn-primary pull-left, Page: application_pages, PageParams: \"app_id=#app_id#,sort=id\")\r\n        Button(Body: Sort by Name, Class: btn btn-primary pull-left, Page: application_pages, PageParams: \"app_id=#app_id#,sort=name\")\r\n        Button(Body: Create Language Resources, Class: btn btn-primary pull-right, Page: langres_addRes, PageParams: \"app_id=#app_id#\")\r\n    }\r\n\r\n    DBFind(languages, src_languages).Where(app_id = #app_id#).Order(#sort# desc).Custom(custom_actions){\r\n        Span(){\r\n            Button(Class: btn btn-default, Body: Em(Class: fa fa-edit), PageParams: \"lang_id=#id#,app_id=#app_id#\", Page: langres_edit)\r\n        }\r\n    }\r\n\r\n    Div(Class: panel panel-default){\r\n        Form(){\r\n            Table(src_languages, \"Name=name,Resource=res,=custom_actions\")\r\n        }\r\n    }\r\n}",
            "Conditions": "ContractAccess(\"@1EditMenu\")",
            "Menu": "application_menu"
        },
        {
            "Name": "application_menus",
            "Value": "DBFind(applications, src_app).Where(\"id=#app_id#\").Limit(1).Vars(\"app\")\r\n\r\nDiv(Class: content-wrapper){\r\n\tSetTitle(#app_name#: $menus$)\r\n    Div(Class: breadcrumb){\r\n        LinkPage(LangRes(applications), applications_list)\r\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n        Span(Class: text-muted, Body: #app_name#: $menus$)\r\n    }\r\n\r\n    If(GetVar(sort)==\"\"){\r\n        SetVar(sort, \"id\")\r\n    }\r\n\r\n    Div(Class: clearfix){\r\n        Button(Body: Sort by ID, Class: btn btn-primary pull-left, Page: application_menus, PageParams: \"app_id=#app_id#,sort=id\")\r\n        Button(Body: Sort by Name, Class: btn btn-primary pull-left, Page: application_menus, PageParams: \"app_id=#app_id#,sort=name\")\r\n        Button(Body: Create menu, Class: btn btn-primary pull-right, Page: editor, PageParams: \"create=menu,appId=#app_id#\")\r\n    }\r\n\r\n    DBFind(menu, src_menus).Order(#sort# desc).Where(\"app_id=#app_id#\")\r\n\r\n    Div(Class: panel panel-default){\r\n        Form(){\r\n            Div(Class: row){\r\n                ForList(src_menus){\r\n                    Div(Class: col-md-4){\r\n                        Div(Class: row){\r\n                            Div(Class: col-md-7){\r\n                                Span(Class: pl-sm, Body: #name#)\r\n                            }\r\n                            Div(Class: col-md-5){\r\n                                Button(Class: btn btn-default, Body: Em(Class: fa fa-edit), PageParams: \"open=menu,name=#name#\", Page: editor)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "application_menu"
        },
        {
            "Name": "application_newParam",
            "Value": "Div(Class: fullscreen){\r\n    SetTitle(New Application Parameter)\r\n    Div(breadcrumb){\r\n        Span(Class: text-muted, Body: New Application Parameter)\r\n    }\r\n    Div(Class: fullscreen-wrapper){\r\n        Form(){\r\n            Div(Class: form-group){\r\n                Label(For: name){\r\n                    Span(Body: Name)\r\n                }\r\n                Input(Name: name, Class: form-control)\r\n            }\r\n            Div(Class: form-group){\r\n                Input(Type: textarea, Name: value).Style(height: 500px !important;)\r\n            }\r\n            Div(Class: mb0 form-group){\r\n                Label(For: conditions){\r\n                    Span(Body: Change Conditions)\r\n                }\r\n                Input(Name: conditions, Class: form-control)\r\n            }\r\n            Div(Class: mt-lg){\r\n                Button(Class: btn btn-primary, Body: Save, Contract: NewAppParameter, Params: \"Name=Val(name),Value=Val(value),Conditions=Val(conditions),App_id=#app_id#\",Page: application_params, PageParams: \"app_id=#app_id#\")\r\n            }\r\n        }\r\n    }\r\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "application_menu"
        },
        {
            "Name": "application_pages",
            "Value": "DBFind(applications, src_app).Where(\"id=#app_id#\").Limit(1).Vars(\"app\")\r\n\r\nDiv(Class: content-wrapper){\r\n\tSetTitle(#app_name#: $pages$)\r\n    Div(Class: breadcrumb){\r\n        LinkPage(LangRes(applications), applications_list)\r\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n        Span(Class: text-muted, Body: #app_name#: $pages$)\r\n    }\r\n\r\n    If(GetVar(sort)==\"\"){\r\n        SetVar(sort, \"id\")\r\n    }\r\n\r\n    Div(Class: clearfix){\r\n        Button(Body: Sort by ID, Class: btn btn-primary pull-left, Page: application_pages, PageParams: \"app_id=#app_id#,sort=id\")\r\n        Button(Body: Sort by Name, Class: btn btn-primary pull-left, Page: application_pages, PageParams: \"app_id=#app_id#,sort=name\")\r\n        Button(Body: Create page, Class: btn btn-primary pull-right, Page: editor, PageParams: \"create=page,appId=#app_id#\")\r\n    }\r\n\r\n    DBFind(pages, src_pages).Order(#sort# desc).Where(\"app_id=#app_id#\")\r\n\r\n    Div(Class: panel panel-default){\r\n        Form(){\r\n            Div(Class: row){\r\n                ForList(src_pages){\r\n                    Div(Class: col-md-4){\r\n                        Div(Class: row mb-sm){\r\n                            Div(Class: col-md-7){\r\n                                LinkPage(Body: #name#, Page: #name#, Class: pl-sm)\r\n                            }\r\n                            Div(Class: col-md-5){\r\n                                Button(Class: btn btn-default pull-right, Body: Em(Class: fa fa-edit), PageParams: \"open=page,name=#name#\", Page: editor)\r\n\t\t\t\t\t\t\t\tButton(Class: btn btn-default pull-right, Body: Em(Class: fa fa-cogs), PageParams: \"name=#name#,app_id=#app_id#\", Page: page_editProperties)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "application_menu"
        },
        {
            "Name": "application_params",
            "Value": "DBFind(applications, src_app).Where(\"id=#app_id#\").Limit(1).Vars(\"app\")\r\n\r\nDiv(Class: content-wrapper){\r\n\tSetTitle(#app_name#: $app_params$)\r\n    Div(Class: breadcrumb){\r\n        LinkPage(LangRes(applications), applications_list)\r\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n        Span(Class: text-muted, Body: #app_name#: $app_params$)\r\n    }\r\n\r\n    If(GetVar(sort)==\"\"){\r\n        SetVar(sort, \"id\")\r\n    }\r\n\r\n    Div(Class: clearfix){\r\n        Button(Body: Sort by ID, Class: btn btn-primary pull-left, Page: application_params, PageParams: \"app_id=#app_id#,sort=id\")\r\n        Button(Body: Sort by Name, Class: btn btn-primary pull-left, Page: application_params, PageParams: \"app_id=#app_id#,sort=name\")\r\n        Button(Body: Create Param, Class: btn btn-primary pull-right, Page: application_newParam, PageParams: \"app_id=#app_id#\")\r\n    }\r\n\r\n    DBFind(appparam, src_appparameters).Order(#sort# desc).Where(app_id = `#app_id#`).Custom(custom_actions){\r\n        Div(){\r\n            Span(){\r\n                Button(Class: btn btn-default, Body: Em(Class: fa fa-edit), PageParams: \"id=#id#,app_id=#app_id#\", Page: application_editParam)\r\n            }\r\n        }\r\n    }\r\n\r\n    Div(Class: panel panel-default){\r\n        Form(){\r\n            Table(src_appparameters, \"Name=name,Value=value,Conditions=conditions,=custom_actions\")\r\n            }\r\n        }\r\n    }\r\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "application_menu"
        },
        {
            "Name": "application_view",
            "Value": "DBFind(applications, src_app).Where(\"id=#app_id#\").Limit(1).Vars(\"app\")\r\n\r\nDiv(Class: content-wrapper){\r\n\tSetTitle($application$: #app_name#)\r\n    Div(Class: breadcrumb){\r\n        LinkPage(LangRes(applications), applications_list)\r\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n        Span(Class: text-muted, Body: #app_name#)\r\n    }\r\n\r\n    If(GetVar(sort)==\"\"){\r\n        SetVar(sort, \"id\")\r\n    }\r\n\r\n    Div(Class: clearfix){\r\n        Button(Body: Sort by ID, Class: btn btn-primary pull-right, Page: application_view, PageParams: \"app_id=#app_id#,sort=id\")\r\n        Button(Body: Sort by Name, Class: btn btn-primary pull-right, Page: application_view, PageParams: \"app_id=#app_id#,sort=name\")\r\n    }\r\n\r\n    DBFind(pages, src_pages).Order(#sort# desc).Where(\"app_id=#app_id#\")\r\n    \r\n    Div(Class: pull-left clearfix){\r\n        Button(Body: Create Page, Class: btn btn-primary, Page: page_create, PageParams: \"app_id=#app_id#\")\r\n    }\r\n\r\n    Div(Class: panel panel-default){\r\n        Form(){\r\n            Div(Class: row){\r\n                ForList(src_pages){\r\n                    Div(Class: col-md-4){\r\n                        Div(Class: row){\r\n                            Div(Class: col-md-7){\r\n                                #name#\r\n                            }\r\n                            Div(Class: col-md-5){\r\n                                Button(Class: btn btn-default, Body: Em(Class: fa fa-eye), Page: #name#)\r\n                                Button(Class: btn btn-default, Body: Em(Class: fa fa-edit), PageParams: \"id=#id#\", Page: page_edit)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }.Style(\"margin-top: 50px;\")\r\n        }\r\n    }\r\n\r\n    DBFind(blocks, src_blocks).Order(#sort# desc).Where(\"app_id=#app_id#\")\r\n\r\n    Div(Class: pull-left clearfix){\r\n        Button(Body: Create Block, Class: btn btn-primary, Page: block_create, PageParams: \"app_id=#app_id#\")\r\n    }\r\n\r\n    Div(Class: panel panel-default){\r\n        Form(){\r\n            Div(Class: row){\r\n                ForList(src_blocks){\r\n                    Div(Class: col-md-4){\r\n                        Div(Class: row){\r\n                            Div(Class: col-md-7){\r\n                                #name#\r\n                            }\r\n                            Div(Class: col-md-5){\r\n                                Button(Class: btn btn-default, Body: Em(Class: fa fa-edit), PageParams: \"id=#id#\", Page: block_edit)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }.Style(\"margin-top: 50px;\")\r\n        }\r\n    }\r\n\r\n    DBFind(menu, src_menus).Order(#sort# desc).Where(\"app_id=#app_id#\")\r\n\r\n    Div(Class: pull-left clearfix){\r\n        Button(Body: Create Menu, Class: btn btn-primary, Page: menu_create, PageParams: \"app_id=#app_id#\")\r\n    }\r\n\r\n    Div(Class: panel panel-default){\r\n        Form(){\r\n            Div(Class: row){\r\n                ForList(src_menus){\r\n                    Div(Class: col-md-4){\r\n                        Div(Class: row){\r\n                            Div(Class: col-md-7){\r\n                                #name#\r\n                            }\r\n                            Div(Class: col-md-5){\r\n                                Button(Class: btn btn-default, Body: Em(Class: fa fa-edit), PageParams: \"id=#id#\", Page: menu_edit)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }.Style(\"margin-top: 50px;\")\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    DBFind(contracts, src_contracts).Order(#sort# desc).Where(\"app_id=#app_id#\")\r\n\r\n    Div(Class: pull-left clearfix){\r\n        Button(Body: Create Contract, Class: btn btn-primary, Page: contract_create, PageParams: \"app_id=#app_id#\")\r\n    }\r\n\r\n    Div(Class: panel panel-default){\r\n        Form(){\r\n            Div(Class: row){\r\n                ForList(src_contracts){\r\n                    Div(Class: col-md-4){\r\n                        Div(Class: row){\r\n                            Div(Class: col-xs-4){\r\n                                #name#\r\n                            }\r\n                            Div(Class: col-xs-5){\r\n                                Address(#wallet_id#)\r\n                            }\r\n                            Div(Class: col-xs-3){\r\n                                Button(Class: btn btn-default, Body: Em(Class: fa fa-edit), PageParams: \"id=#id#\", Page: contract_edit)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }.Style(\"margin-top: 50px;\")\r\n        }\r\n    }\r\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        },
        {
            "Name": "applications_deleted",
            "Value": "Div(Class: content-wrapper){\r\n\r\n\tSetTitle($deleted_applications$)\r\n    DBFind(applications, src_application).Where(\"id=#id#\").Limit(1).Vars(\"app\")\r\n    Div(Class: breadcrumb){\r\n        LinkPage(LangRes(applications), applications_list)\r\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n        Span(Class: text-muted, Body: $deleted_applications$)\r\n    }\r\n\r\n    If(GetVar(isSearch) == 1){\r\n        SetVar(Name: v_Where, Value: \"name='#v_Search#' and delete=1\")\r\n    }.Else{\r\n        SetVar(Name: v_Where, Value: \"deleted=1\")\r\n        SetVar(Name: v_Search, Value: \"\")\r\n    }\r\n\r\n    DBFind(applications, src_applications).Where(#v_Where#).Order(id desc).Custom(custom_actions){\r\n\t\tSpan(){\r\n\t\t\tButton(Class: btn btn-primary, Body: Em(Class: fa fa-eye), Page: application_pages, PageParams: \"app_id=#id#\")\r\n\t\t\tButton(Class: btn btn-primary, Body: Em(Class: fa fa-arrow-up), Contract: RestoreApplication, Params: \"ApplicationId=#id#\", Page: applications_deleted)\r\n\t\t}\r\n\t}\r\n\r\n    Div(Class: panel panel-primary md-8){\r\n\t\tDiv(Class: panel-heading, Body: $applications$)\r\n        Form(){\r\n            Div(Class: list-group-item){\r\n                Div(Class: row df f-valign){\r\n                    Div(Class: col-md-1 mt-sm text-right){\r\n                        Label(For: Search){\r\n                            Span(Body: LangRes(name))\r\n                        }\r\n                    }\r\n                    Div(Class: col-md-11 mc-sm){\r\n                        Div(Class: input-group){\r\n                            Input(Class: form-control, Type: text, Name: Search, Value: #v_Search#)\r\n                            Div(Class: input-group-btn){\r\n                                Button(Body: Em(Class: fa fa-search), Class: btn btn-default, Page: applications_list, PageParams: \"isSearch=1,v_Search=Val(Search)\")\r\n                            }\r\n                        }\r\n                    }\r\n                }  \r\n            }\r\n            Div(Class: list-group-item){ \r\n                Table(Source: src_applications, Columns: \"$name$=name,Conditions=conditions,=custom_actions\").Style(\"tr  > *:first-child {padding-left:0px;} tr  > *:last-child {text-align:right; padding-right:0px;}\")\r\n                If(GetVar(isSearch) == 1){\r\n                    Div(Class: text-center){  \r\n                        Button(Body: $view_all$, Class: btn btn-primary, Page: applications_list, PageParams: \"isSearch=0\")\r\n                    }\r\n                }\r\n            }\r\n\t\t\tDiv(Class: panel-footer clearfix){\r\n\t\t\t\tDiv(Class: pull-right){\r\n\t\t\t\t\tButton(Body: Create Application, Class: btn btn-primary, Page: application_create)\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }           \r\n    }\r\n\r\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        },
        {
            "Name": "applications_list",
            "Value": "Div(Class: content-wrapper){\n\n\tSetTitle($applications$)\n\tDiv(breadcrumb){\n\t\tSpan(Class: text-muted, Body: $applications$)\n\t}\n\n    If(GetVar(isSearch) == 1){\n        SetVar(Name: v_Where, Value: \"name='#v_Search#' and delete=0\")\n    }.Else{\n        SetVar(Name: v_Where, Value: \"deleted=0\")\n        SetVar(Name: v_Search, Value: \"\")\n    }\n\n    DBFind(applications, src_applications).Where(#v_Where#).Order(id desc).Custom(custom_actions){\n\t\tSpan(){\n\t\t\tButton(Class: btn btn-primary, Body: Em(Class: fa fa-eye), Page: application_pages, PageParams: \"app_id=#id#\")\n            Button(Class: btn btn-primary, Body: Em(Class: fa fa-edit), Page: application_edit, PageParams: \"id=#id#\")\n\t\t\tButton(Class: btn btn-danger, Body: Em(Class: fa fa-trash), Contract: DeleteApplication, Params: \"ApplicationId=#id#\", Page: applications_list)\n\t\t}\n\t}\n\n    Div(Class: panel panel-primary md-8){\n\t\tDiv(Class: panel-heading, Body: $applications$)\n        Form(){\n            Div(Class: list-group-item){\n                Div(Class: row df f-valign){\n                    Div(Class: col-md-1 mt-sm text-right){\n                        Label(For: Search){\n                            Span(Body: LangRes(name))\n                        }\n                    }\n                    Div(Class: col-md-11 mc-sm){\n                        Div(Class: input-group){\n                            Input(Class: form-control, Type: text, Name: Search, Value: #v_Search#)\n                            Div(Class: input-group-btn){\n                                Button(Body: Em(Class: fa fa-search), Class: btn btn-default, Page: applications_list, PageParams: \"isSearch=1,v_Search=Val(Search)\")\n                            }\n                        }\n                    }\n                }  \n            }\n            Div(Class: list-group-item){ \n                Table(Source: src_applications, Columns: \"$name$=name,Conditions=conditions,=custom_actions\").Style(\"tr  > *:first-child {padding-left:0px;} tr  > *:last-child {text-align:right; padding-right:0px;}\")\n                If(GetVar(isSearch) == 1){\n                    Div(Class: text-center){  \n                        Button(Body: $view_all$, Class: btn btn-primary, Page: applications_list, PageParams: \"isSearch=0\")\n                    }\n                }\n            }\n\t\t\tDiv(Class: panel-footer clearfix){\n\t\t\t\tDiv(Class: pull-right){\n\t\t\t\t\tButton(Body: Create Application, Class: btn btn-primary, Page: application_create)\n\t\t\t\t}\n\t\t\t}\n        }       \n    }\n\tButton(Body: $deleted_applications$ Em(Class: fa fa-trash), Class: btn btn-primary, Page: applications_deleted)\n\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        },
        {
            "Name": "langres_addLocale",
            "Value": "SetTitle(Edit Language Resource)\r\nDiv(Class: breadcrumb){\r\n        LinkPage(Language Resources, application_langres, PageParams: \"app_id=#app_id#\")\r\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n        Span(Class: text-muted, Body: Edit Language Resource)\r\n}\r\n    \r\nDiv(Class: content-wrapper){\r\n    Div(Class: row){\r\n        Form(){\r\n            Div(Class: col-md-12){\r\n                Div(Class: panel panel-default){\r\n                    Div(Class: panel-body){\r\n                        Div(Class: col-md-12){\r\n                            \r\n                            Div(Class: form-group col-md-1){\r\n                                Label(Class: text-muted,Body: Locale)\r\n                            }\r\n                            Div(Class: form-group col-md-10){\r\n                                Label(Class: text-muted,Body: Value)\r\n                            }\r\n                            Div(Class: form-group col-md-1){\r\n                                Label(Class: text-muted,Body: Action)     \r\n                            }\r\n                        }\r\n                        If(#del# == 1){\r\n                            SetVar(next_count, Calculate( Exp: #count_sec# - 1, Type: int))\r\n                        }.Else{\r\n                            If(GetVar(count)==\"\"){\r\n                            SetVar(count, 0)\r\n                            SetVar(next_count, Calculate( Exp: #count# + 1, Type: int))\r\n                            }.Else{\r\n                                SetVar(next_count, Calculate( Exp: #count_sec# + 1, Type: int))\r\n                            }\r\n                        }\r\n                        Range(params_range, 0, #next_count#)\r\n                        ForList(Source: params_range){\r\n                            Div(Class: col-md-12){\r\n                                Div(Class: form-group col-md-1){\r\n                                    Input(Name:IdLang, Class: \"form-control\")\r\n                                    \r\n                                }\r\n                                Div(Class: form-group col-md-10){\r\n                                    Input(Name:Localiz, Class: \"form-control\")\r\n                                }\r\n                                Div(Class: form-group col-md-1){\r\n                                    If(#next_count#>=2){\r\n                                        Button(Body: Em(Class: fa fa-trash),Class: btn btn-default,PageParams:\"count_sec=#next_count#,count=#count#,del=1,langName=#langName#,app_id=#app_id#\",Page:langres_addLocale)\r\n                                    }.Else{\r\n                                        Button(Body: Em(Class: fa fa-trash),Class:btn btn-default disabled)\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        LinkPage(Add localization,Page:langres_addLocale,PageParams:\"count_sec=#next_count#,count=#count#,app_id=#app_id#\")\r\n                    }\r\n                    Input(Name: Name, Class: \"form-control hidden disabled\", Value: #langName#)\r\n                    Div(Class: panel-footer){\r\n                        Div(Class: clearfix){\r\n                            Div(Class: pull-left){\r\n                                Button(Save, Class: btn btn-primary, Contract:@1EditLang, Page: application_langres, PageParams: \"app_id=#app_id#\") \r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\t\t}\r\n\t}\r\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu"
        }
    ],
    "parameters": [],
    "tables": [
        {
            "Name": "appparam",
            "Columns": "[{\"name\":\"name\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"value\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"app_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"conditions\",\"type\":\"text\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\":\"ContractConditions(\\\"MainCondition\\\")\",\"update\":\"ContractConditions(\\\"MainCondition\\\")\",\"new_column\":\"ContractConditions(\\\"MainCondition\\\")\"}"
        }
    ]
}