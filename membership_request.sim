{
    "pages": [
        {
            "Name": "request_view",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "membership_menu",
            "Value": "Div(Class: content-wrapper){\r\n\r\n\tSetTitle($request_info$)\r\n\tDiv(Class: breadcrumb){\r\n\t\tSpan(Class: text-muted, Body: LangRes(request_info))\r\n\t}\r\n\r\n    If(Or(#v_member_id#>0,#v_member_id#<0)){\r\n    }.Else{\r\n\t\tSetVar(Name: v_member_id, Value: #key_id#)\r\n    }\r\n\tDBFind(Name: vde_membership_requests, Source: src_member).Where(id=#v_member_id#).Vars(prefix)\r\n\r\n    Div(Class: row df f-valign){\r\n        Div(Class: col-md-3)\r\n        Div(Class: col-md-6){\r\n            Div(Class: panel panel-default){\r\n                Form(){ \r\n\t\t\t\t\tDiv(Class: list-group-item text-center){\r\n\t\t\t\t\t\tSpan(Class: h3, Body: LangRes(request_info))\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tDiv(Class: list-group-item){\r\n\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\tDiv(Class: col-md-12 mt-sm text-center){\r\n\r\n\t\t\t\t\t\t\t\tIf(Or(#prefix_id#>0,#prefix_id#<0)){\r\n\t\t\t\t\t\t\t\t\tIf(#prefix_id# == #key_id#){\r\n\t\t\t\t\t\t\t\t\t\tButton(Class: btn btn-link, Page: profile_edit, PageParams: \"v_member_id=#id#\"){\r\n\t\t\t\t\t\t\t\t\t\t\tImage(Src: \"#prefix_avatar#\", Class: img-circle).Style(width: 100px;  border: 1px solid #5A5D63; margin-bottom: 15px;)\r\n\t\t\t\t\t\t\t\t\t\t\tDiv(Body: Span(Class: h3 text-bold, Body: #prefix_member_name#))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\tImage(Src: \"#prefix_avatar#\", Class: img-circle).Style(width: 100px;  border: 1px solid #5A5D63; margin-bottom: 15px;)\r\n\t\t\t\t\t\t\t\t\t\tDiv(Body: Span(Class: h3 text-bold, Body: #prefix_member_name#))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tDiv(Class: list-group-item){\r\n\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\tDiv(Class: col-md-12 mt-sm text-center){\r\n\t\t\t\t\t\t\t\tSpan(Class: h4 text-bold, Body: Address(#prefix_public_key#))\r\n\t\t\t\t\t\t\t\tDiv(Class: text-muted m0 h5, Body: LangRes(public_key))\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n                    Div(Class: list-group-item){\r\n\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\tDiv(Class: col-md-12 mt-sm text-center){\r\n\t\t\t\t\t\t\t\tButton(Class: btn btn-success, Body: LangRes(accept) Em(Class: fa fa-check), Contract: membership_request_accept, Params: \"req_id=#id#\", Page: membership_requests)\r\n\t\t                        Button(Class: btn btn-danger, Body: LangRes(reject) Em(Class: fa fa-times), Contract: membership_request_reject, Params: \"req_id=#id#\", Page: membership_requests)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\t\t\t\t\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n        Div(Class: col-md-3)\r\n    }\r\n}"
        },
        {
            "Name": "membership_requests",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "membership_menu",
            "Value": "Div(Class: content-wrapper){\r\n\r\n\tSetTitle($membership_requests$)\r\n\tDiv(breadcrumb){\r\n\t\tSpan(Class: text-muted, Body: $membership_requests$)\r\n\t}\r\n\r\n    If(GetVar(isSearch) == 1){\r\n        SetVar(Name: v_Where, Value: \"and member_name='#v_Search#'\")\r\n    }.Else{\r\n        SetVar(Name: v_Where, Value: \"\")\r\n        SetVar(Name: v_Search, Value: \"\")\r\n    }\r\n\r\n    DBFind(Name: vde_membership_requests, Source: src_member).Custom(custom_username){\r\n        LinkPage(Page: request_view, PageParams: \"v_member_id=#id#\"){\r\n            Image(Src: \"#avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\r\n            Span(Class: h5 text-bold, Body: #member_name#)\r\n        }\r\n\t}.Custom(custom_public_key){\r\n        Address(#public_key#)\r\n    }.Custom(custom_actions){\r\n\t\tButton(Class: btn btn-success, Body: LangRes(accept) Em(Class: fa fa-check), Contract: membership_request_accept, Params: \"req_id=#id#\", Page: membership_requests)\r\n\t\tButton(Class: btn btn-danger, Body: LangRes(reject) Em(Class: fa fa-times), Contract: membership_request_reject, Params: \"req_id=#id#\", Page: membership_requests)\r\n\t}.Where(\"status=0 #v_Where#\").Order(\"member_name\")\r\n\r\n    Div(Class: panel panel-primary){\r\n        Form(){\r\n            Div(Class: list-group-item){\r\n                Div(Class: row df f-valign){\r\n                    Div(Class: col-md-1 mt-sm text-right){\r\n                        Label(For: Search){\r\n                            Span(Body: LangRes(username))\r\n                        }\r\n                    }\r\n                    Div(Class: col-md-11 mc-sm){\r\n                        Div(Class: input-group){\r\n                            Input(Class: form-control, Type: text, Name: Search, Value: #v_Search#)\r\n                            Div(Class: input-group-btn){\r\n                                Button(Body: Em(Class: fa fa-search), Class: btn btn-default, Page: membership_requests, PageParams: \"isSearch=1,v_Search=Val(Search)\")\r\n                            }\r\n                        }\r\n                    }\r\n                }  \r\n            }\r\n\r\n            Div(Class: list-group-item){ \r\n                Table(Source: src_member, Columns: \"$username$=custom_username,$public_key$=custom_public_key,$actions$=custom_actions\")\r\n                If(GetVar(isSearch) == 1){\r\n                    Div(Class: text-center){  \r\n                        Button(Body: $view_all$, Class: btn btn-primary, Page: membership_requests, PageParams: \"isSearch=0\")\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }           \r\n    }\r\n\r\n}"
        }
    ],
    "blocks": [],
    "menus": [],
    "parameters": [],
    "languages": [
        {
            "Name": "request_info",
            "Trans": "{\"en\":\"Request info\",\"ru\":\"Информация о запросе\"}",
            "Conditions": ""
        },
        {
            "Name": "public_key",
            "Trans": "{\"ru\":\"Публичный ключ\",\"en\":\"Public key\"}",
            "Conditions": ""
        }
    ],
    "contracts": [
        {
            "Name": "membership_request_reject",
            "Value": "contract membership_request_reject {\n    data {\n\t    req_id int\n    }\n\n    conditions {\n    }\n\n    action {\n        DBUpdate(\"vde_membership_requests\", $req_id, \"status\", 2)\n    }\n}",
            "Conditions": "ContractConditions(`MainCondition`)"
        },
        {
            "Name": "membership_request_accept",
            "Value": "contract membership_request_accept {\n    data {\n\t    req_id int\n    }\n\n    conditions {\n    }\n\n    action {\n        var requests array\n        requests = DBFind(\"vde_membership_requests\").Where(\"id = ?\", $req_id)\n\n        var request map\n        request = requests[0]\n\n        var members array\n        members = DBFind(\"member\").Where(\"id = ?\", request[\"public_key\"])\n\n        if(Len(members) > 0){\n            warning \"Member already exists\"\n        } else {\n            DBInsert(`member`, `id,member_name,avatar`, request[\"public_key\"], request[\"member_name\"], request[\"avatar\"])\n        }\n\n        DBUpdate(\"vde_membership_requests\", $req_id, \"status\", 1)\n    }\n}",
            "Conditions": "ContractConditions(`MainCondition`)"
        }
    ],
    "tables": [],
    "data": []
}