{
    "name": "Business",
    "data": [
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "MenuItem(Title:$business_manager$, Page:business_manager, Icon:\"fa fa-edit\")\nMenuItem(Title:$business_process$, Page:business_process, Icon:\"fa fa-edit\")",
            "Name": "default_menu",
            "Type": "menu"
        },
        {
            "Name": "Condition",
            "Trans": "{\"en\":\"Condition\", \"ru\":\"Условие\"}",
            "Type": "languages"
        },
        {
            "Name": "EventId",
            "Trans": "{\"en\":\"Event Id\", \"ru\":\"Идентификатор События\"}",
            "Type": "languages"
        },
        {
            "Name": "NeedComment",
            "Trans": "{\"en\":\"Need comment from user\", \"ru\":\"Нужен комментарий от пользователя\"}",
            "Type": "languages"
        },
        {
            "Name": "ObjectType",
            "Trans": "{\"en\":\"Object Type\", \"ru\":\"Тип Объекта\"}",
            "Type": "languages"
        },
        {
            "Name": "Result",
            "Trans": "{\"en\":\"Result\", \"ru\":\"Результат\"}",
            "Type": "languages"
        },
        {
            "Name": "RoleId",
            "Trans": "{\"en\":\"Role\", \"ru\":\"Роль\"}",
            "Type": "languages"
        },
        {
            "Name": "TextBody",
            "Trans": "{\"en\":\"Text Body\", \"ru\":\"Текст\"}",
            "Type": "languages"
        },
        {
            "Name": "Title",
            "Trans": "{\"en\":\"Title\", \"ru\":\"Название\"}",
            "Type": "languages"
        },
        {
            "Name": "actived",
            "Trans": "{\"en\":\"Actived\", \"ru\":\"Активированые\"}",
            "Type": "languages"
        },
        {
            "Name": "business_events",
            "Trans": "{\"en\":\"Business Events\", \"ru\":\"События\"}",
            "Type": "languages"
        },
        {
            "Name": "business_manager",
            "Trans": "{\"en\":\"Business Process Manager\", \"ru\":\"Менеджер Бизнес-Процессов\"}",
            "Type": "languages"
        },
        {
            "Name": "model",
            "Trans": "{\"en\":\"Model\", \"ru\":\"Модель\"}",
            "Type": "languages"
        },
        {
            "Name": "business_events",
            "Columns": "[\n    {\n        \"name\": \"event_id\",\n        \"type\": \"number\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"object_type\",\n        \"type\": \"number\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"object_id\",\n        \"type\": \"number\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"key_id\",\n        \"type\": \"number\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"result_id\",\n        \"type\": \"number\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"comment\",\n        \"type\": \"text\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"num_submitted\",\n        \"type\": \"number\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"created_at\",\n        \"type\": \"datetime\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"model_id\",\n        \"type\": \"number\",\n        \"conditions\": \"true\"\n    }\n]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}",
            "Type": "tables"
        },
        {
            "Name": "business_models",
            "Columns": "[\n    {\n        \"name\": \"event_id\",\n        \"type\": \"number\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"object_type\",\n        \"type\": \"number\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"title\",\n        \"type\": \"varchar\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"role_id\",\n        \"type\": \"number\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"text_body\",\n        \"type\": \"text\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"need_comment\",\n        \"type\": \"character\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"condition\",\n        \"type\": \"json\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"condition_pretty\",\n        \"type\": \"varchar\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"result\",\n        \"type\": \"json\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"result_pretty\",\n        \"type\": \"varchar\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"deleted\",\n        \"type\": \"character\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"model_id\",\n        \"type\": \"number\",\n        \"conditions\": \"true\"\n    }\n]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}",
            "Type": "tables"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "0",
            "Name": "manager_role_ids",
            "Type": "app_params"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "property_add_block,units_add_block,ajman_contract,ajman_contract",
            "Name": "object_blocks",
            "Type": "app_params"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "property_contracts,,residential_contracts,commercial_contracts,",
            "Name": "object_status_tables",
            "Type": "app_params"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "Property,Unit,Residential Contract,Commercial Contract",
            "Name": "object_types",
            "Type": "app_params"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "Submit,Sent Back,Accept,Escalation,Reject,Inform,Pay",
            "Name": "results",
            "Type": "app_params"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(applications).Where(\"name='Business'\").Vars(application)\nIf(#Mode#==deleted){\n    SetVar(Where,\"deleted='1'\").(panel,\"panel-warning\")\n}.Else{\n    SetVar(Where,\"deleted='0'\").(Mode,actived).(panel,\"panel-primary\")\n}\nDBFind(roles, src_roles).Columns(\"id,role_name\")\nDBFind(business_models, src_models).Where(#Where#).Order(event_id).Custom(_actions){\n    Div(pull-right btn-group){\n        Button(Class: icon-settings btn btn-primary, Page: business_model, PageParams: \"Id=#id#,Mode=#Mode#\")\n        If(#deleted#==1){\n            Button(Class: fa fa-undo btn btn-success, Page: business_manager, Contract: business_Manager,Params: \"Id=#id#,Action=restore\", PageParams: \"Mode=#Mode#\")\n        }.Else{\n            Button(Class: icon-trash btn btn-danger, Page: business_manager, Contract: business_Manager,Params: \"Id=#id#,Action=delete\", PageParams: \"Mode=#Mode#\")\n            Button(Class: icon-control-play btn btn-success, Page: business_model, PageParams: \"Id=#id#,Mode=play\")\n        }\n    }.Style(min-width:150px;display:flex;)\n}.Custom(_obj){\n    AppParam(App: #application_id#, Name: object_types, Index: #object_type#)\n}.Custom(_role){\n    ForList(src_roles){\n        If(#role_id#==#id#){\n            #role_name#\n        }\n    }\n}.Custom(_cond){\n    Div(){#condition_pretty#}.Style(min-width:150px; word-break: break-word;)\n}.Custom(_res){\n    Div(){#result_pretty#}.Style(min-width:150px; word-break: break-word;)\n}.Custom(_com){\n    Div(){\n        If(#need_comment#==1){\n            $yes$\n        }.Else{\n            $no$\n        }\n    }.Style(max-width:50px;)\n}.Custom(_text){\n    Strong(#title#)\n    Div(){\n        #text_body#\n    }.Style(min-width:150px; word-break: break-word;)\n}\nSetVar(has_models,0)\nForList(src_models){\n    SetVar(has_models,1)\n}\nDiv(content-wrapper){\n    SetTitle($business_manager$)\n    Div(row){\n        Div(col-sm-12){\n            Div(panel #panel#){\n                Div(panel-heading clearfix){\n                    #Mode# models\n                    Div(pull-right){\n                        If(#Mode#==deleted){\n                            LinkPage(Page: business_manager, PageParams: \"Mode=actived\", Body: $actived$)\n                        }.Else{\n                            LinkPage(Page: business_manager, PageParams: \"Mode=deleted\", Class: text-danger, Body: $deleted$)\n                            AddToolButton(Page: business_model, Class: btn btn-warning, Title: $create$, Icon: icon-plus)\n                        }\n                    }\n                }\n                Div(panel-body){\n                    If(#has_models#==1){\n                        Div(table-responsive){\n                            Table(src_models,\"$ModelId$=model_id,$EventId$=event_id,$ObjectType$=_obj,$RoleId$=_role,$NeedComment$=_com,$Condition$=_cond,$Result$=_res,$text$=_text,=_actions\")\n                        }\n                    }.Else{\n                        Div(h3 text-center){\n                            #Mode# models not found\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
            "Name": "business_manager",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(applications).Where(\"name='Business'\").Vars(application)\nDiv(container){\n    AppParam(App: #application_id#, Name: object_types, Source: src_objects)\n    AppParam(App: #application_id#, Name: results, Source: app_results)\n    SetVar(result_col_class,col-sm-3)\n\n    If(#Mode#==\"play\"){\n        If(#Id#>0){\n            DBFind(Name:business_models, src_models).Where(\"id=#Id#\").Vars(model)\n            SetVar(heading,\"$business_manager$: $model$ $info$ ##Id#\")\n            JsonToSource(src_results,#model_result#).(src_condition,#model_condition#)\n            DBFind(roles).Where(\"deleted=0 and id=#model_role_id#\").Columns(\"id,role_name\").Vars(role)\n            Data(forms, \"Name,Type,Value,Src\"){\n                EventId,text,#model_event_id#,\n                ObjectType,select,#model_object_type#,src_objects\n                ModelId,text,#model_model_id#,\n                ObjectId,number,,\n                RoleId,text,#role_role_name#,\n                Title,text,#model_title#,\n                TextBody,text,#model_text_body#,\n                NeedComment,checkbox,#model_need_comment#,\n                Comment,textarea,#model_need_comment#,\n                Result,result,,src_results\n                Conditions,condition,,src_condition\n            }\n            Form(panel panel-primary){\n                Div(panel-heading){#heading#}\n                Div(panel-body){\n                    ForList(forms){\n                        Div(row form-group){\n                            Div(col-sm-4 text-right){\n                                Strong(LangRes(#Name#))\n                            }\n                            Div(col-sm-8){\n                                If(#Type#==condition){\n                                    ForList(#Src#){\n                                        Div(col-sm-3){\n                                            #key#:AppParam(App: #application_id#, Name: results, Index: #value#)\n                                        }\n                                    }\n                                }.ElseIf(#Type#==result){\n                                    ForList(#Src#){\n                                        If(#value#==1){\n                                            Div(#result_col_class#){#key#}\n                                        }\n                                    }\n                                }.ElseIf(#Type#==select){\n                                    ForList(#Src#){\n                                        If(#id#==#Value#){\n                                            #name#\n                                        }\n                                    }\n                                }.ElseIf(#Type#==checkbox){\n                                    If(#Value#==1){\n                                        SetVar(bool,true)\n                                    }.Else{\n                                        SetVar(bool,false)\n                                    }\n                                    Input(Name: #Name#, Type:#Type#, Value: #bool#, Disabled: 1)\n                                }.ElseIf(#Type#==number){\n                                    Input(Name:#Name#, Type:#Type#)\n                                }.ElseIf(#Type#==textarea){\n                                    If(#Value#==1){\n                                        Input(Name:#Name#, Type:#Type#)\n                                    }.Else{\n                                        Input(Name:#Name#, Type:hidden)\n                                    }\n                                }.Else{\n                                    #Value#\n                                }\n                            }\n                        }\n                    }\n                }\n                Div(panel-footer text-right){\n                    Input(Name:Id, Type: hidden, Value:#Id#)\n                    Input(Name:ModelId, Type:hidden, Value:#model_model_id#)\n                    Input(Name:EventId, Type:hidden, Value:#model_event_id#)\n                    Input(Name:ObjectType, Type:hidden, Value:#model_object_type#)\n                    Input(Name:NotificId, Type:hidden)\n                    Div(pull-left){\n                        Button(Class: icon-arrow-left btn btn-default, Page: business_manager)\n                    }\n                    Div(){\n                        ForList(app_results){\n                            ForList(src_results){\n                                If(And(#name#==#key#,#value#==1)){\n                                    SetVar(class,AppParam(App: #application_id#, Name: class_results, Index: #id#))\n                                    Button(Body:LangRes(#name#), Class: btn #class#, Page: business_process, Contract: business_Process, Params:\"ResultId=#id#\")\n                                }\n                            }\n                        }\n                    }.Style(div {display:inline-block;})\n                }\n            }\n        }.Else{\n            Div(md-12 alert alert-danger text-center){\n                Span(Body: LangRes(attention))\n            }\n        }\n    }.Else{\n        DBFind(Name:roles, Source: src_roles).Where(\"deleted=0\").Order(id).Columns(\"id,role_name\").Custom(name){#role_name#}\n        If(#Id#>0){\n            DBFind(Name:business_models, src_models).Where(\"id=#Id#\").Vars(model)\n            SetVar(Action, update).(heading,\"$business_manager$: $model$ $edit$ ##Id#\")\n            JsonToSource(src_results,#model_result#).(src_condition,#model_condition#)\n            Data(forms, \"Name,Type,Src,Value\"){\n                EventId,number,,#model_event_id#\n                ModelId,number,,#model_model_id#\n                ObjectType,select,src_objects,#model_object_type#\n                Title,text,,#model_title#\n                RoleId,select,src_roles,#model_role_id#\n                TextBody,textarea,,#model_text_body#\n                NeedComment,checkbox,,#model_need_comment#\n                Result,result,src_results,\n            }\n        }.Else{\n            SetVar(Id,0).(Action,create).(heading,\"$business_manager$: $create$\")\n            Data(forms, \"Name,Type,Src\"){\n                EventId,number,\n                ModelId,number,\n                ObjectType,select,src_objects\n                Title,text,\n                RoleId,select,src_roles\n                TextBody,textarea,\n                NeedComment,checkbox,\n                Result,result,app_results\n            }\n            SetVar(Value,)\n        }\n        If(#condition_count#>0){}.Else{\n            If(#Id#>0){\n                SetVar(condition_count,0).(min_count,0)\n            }.Else{\n                SetVar(condition_count,1).(min_count,1)\n            }\n        }\n        Div(row){\n            Div(col-sm-10 col-sm-offset-1){\n                Form(panel panel-primary){\n                    Div(panel-heading){#heading#}\n                    Div(panel-body){\n                        ForList(forms){\n                            Div(row form-group){\n                                Div(col-sm-3 text-right pt-sm){\n                                    Label(For:#Name#){LangRes(#Name#)}\n                                }\n                                Div(col-sm-9){\n                                    If(#Type#==result){\n                                        Div(row){\n                                            ForList(#Src#){\n                                                Div(#result_col_class#){\n                                                    If(#Id#>0){\n                                                        If(#value#==1){\n                                                            SetVar(bool,true)\n                                                        }.Else{\n                                                            SetVar(bool,false)\n                                                        }\n                                                        Input(Name: #key#, Type:checkbox, Value: #bool#) #key#\n                                                    }.Else{\n                                                        Input(Name: #name#, Type:checkbox) #name#\n                                                    }\n                                                }.Style(div {display:inline-block;})\n                                            }\n                                        }\n                                    }.ElseIf(#Type#==select){\n                                        Select(Name: #Name#, Source:#Src#, NameColumn: name, ValueColumn: id, Value:#Value#)\n                                    }.ElseIf(#Type#==checkbox){\n                                        If(#Value#==1){\n                                            SetVar(bool,true)\n                                        }.Else{\n                                            SetVar(bool,false)\n                                        }\n                                        Input(Name: #Name#, Type:#Type#, Value: #bool#)\n                                    }.Else{\n                                        Input(Name: #Name#, Type:#Type#, Value: #Value#)\n                                    }\n                                }\n                            }\n                        }\n                        Div(row form-group){\n                            Div(col-sm-3 text-right pt-sm){\n                                Label(For:Condition){LangRes(Conditions)}\n                                Div(row){\n                                    Div(col-sm-12 text-right){\n                                        SetVar(condition_plus,Calculate(#condition_count#+1)).(condition_minus,Calculate(#condition_count#-1))\n                                        If(#condition_count#>#min_count#){\n                                            Button(Page:business_model, PageParams:\"Mode=#Mode#,condition_count=#condition_minus#,Id=#Id#\", Class: btn btn-default fa fa-minus)\n                                        }\n                                        Button(Page:business_model, PageParams:\"Mode=#Mode#,condition_count=#condition_plus#,Id=#Id#\", Class: btn btn-default fa fa-plus)\n                                    }\n                                }\n                            }\n                            Div(col-sm-9){\n                                If(#Id#>0){\n                                    ForList(src_condition){\n                                        Div(list-group-item){\n                                            Div(row form-group){\n                                                Div(col-sm-3 text-right pt-sm){\n                                                    LangRes(EventId)\n                                                }\n                                                Div(col-sm-7){\n                                                    Input(Name: ConditionEventId, Value: #key#, Type:number)\n                                                }\n                                                Div(col-sm-2){\n                                                    Input(Name: ConditionDelete, Type:checkbox)\n                                                    Div(icon-trash text-danger)\n                                                }.Style(div {display:inline-block;})\n                                            }\n                                            Div(row){\n                                                Div(col-sm-3 text-right pt-sm){\n                                                    LangRes(Condition)\n                                                }\n                                                Div(col-sm-7){\n                                                    Select(Name:ConditionResult, NameColumn:name, ValueColumn:id, Source: app_results, Value:#value#)\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                Range(Source:condition_range,From:0,To:#condition_count#)\n                                ForList(condition_range){\n                                    Div(list-group-item){\n                                        Div(row form-group){\n                                            Div(col-sm-3 text-right pt-sm){\n                                                LangRes(EventId)\n                                            }\n                                            Div(col-sm-7){\n                                                Input(Name: ConditionEventId, Type:number)\n                                            }\n                                        }\n                                        Div(row){\n                                            Div(col-sm-3 text-right pt-sm){\n                                                LangRes(Condition)\n                                            }\n                                            Div(col-sm-7){\n                                                Select(Name:ConditionResult, NameColumn:name, ValueColumn:id, Source: app_results)\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    Div(panel-footer text-right){\n                        Div(pull-left){\n                            Button(Class: icon-arrow-left btn btn-default, Page: business_manager, PageParams: \"Mode=#Mode#\")\n                        }\n                        Input(Name:Action, Value:#Action#, Type: hidden)\n                        Input(Name:Id, Value:#Id#, Type: hidden)\n                        Button(Body:LangRes(#Action#), Class: btn btn-primary, Page: business_manager, PageParams: \"Mode=#Mode#\", Contract: business_Manager)\n                    }\n                }\n            }\n        }\n    }\n}",
            "Name": "business_model",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(applications).Where(\"name='Business'\").Vars(application)\nIf(#notific_id#>0){\n    DBFind(notifications,src_note).WhereId(#notific_id#).Columns(\"page_params->object_id,page_params->id,page_params->comment\").Vars(note)\n    SetVar(business_model_id,#note_page_params_id#).(business_object_id,#note_page_params_object_id#).(comment,#note_page_params_comment#)\n}\nDiv(content-wrapper ajman_content){\n    Div(container){\n        If(And(#business_model_id#>0, #business_object_id#>0)){\n            DBFind(business_models).Where(\"id=#business_model_id#\").Vars(business_model)\n            JsonToSource(business_model_results,#business_model_result#)\n            DBFind(roles).Where(\"deleted=0 and id=#business_model_role_id#\").Columns(\"id,role_name\").Vars(business_role)\n            AppParam(App: #application_id#, Name: results, Source: app_results)\n            AppParam(App: #application_id#, Name: object_blocks, Source: app_blocks)\n            SetVar(business_object,\"AppParam(App: #application_id#, Name: object_types, Index: #business_model_object_type#)\")\n\n            Form(panel panel-primary){\n                Div(panel-heading text-center){\n                    Span(#business_model_title# : #business_object# : #business_object_id#, ajman-color-h1)\n                }.Style(height: 50px; background-color: #0f789c!important;)\n                Div(panel-body){\n                    Div(row form-group){\n                        Div(col-sm-12){\n                            #business_model_text_body#\n                        }\n                    }\n\n                    If(#comment#!=\"\"){\n                        Div(row form-group){\n                            Div(col-sm-12){#comment#}\n                        }\n                    }\n                    If(#business_model_need_comment#==1){\n                        Div(row form-group){\n                            Div(col-sm-12){\n                                Label(For:Comment){LangRes(Comment)}\n                                Input(Name:Comment, Type:textarea)\n                            }\n                        }\n                    }\n\n                    ForList(app_blocks){\n                        If(#id#==#business_model_object_type#){\n                            Include(#name#)\n                        }\n                    }\n                }\n                Div(panel-footer text-right){\n                    If(#notific_id#>0){\n                        Input(Name:Id, Type:hidden, Value:#business_model_id#)\n                        Input(Name:ModelId, Type:hidden, Value:#business_model_model_id#)\n                        Input(Name:ObjectId, Type:hidden, Value:#business_object_id#)\n                        Input(Name:EventId, Type:hidden, Value:#business_model_event_id#)\n                        Input(Name:ObjectType, Type:hidden, Value:#business_model_object_type#)\n                        Input(Name:NotificId, Type:hidden, Value:#notific_id#)\n                        Div(){\n                            ForList(app_results){\n                                ForList(business_model_results){\n                                    If(And(#name#==#key#,#value#==1)){\n                                        SetVar(n,Calculate(#id#/5,Type:int)).(mod,Calculate(#id#-#id#*#n#))\n                                        If(Or(#name#==Submit,#mod#==1)){\n                                            SetVar(business_class,btn-primary)\n                                        }.ElseIf(Or(#name#==\"Sent Back\",#mod#==2)){\n                                            SetVar(business_class,btn-info)\n                                        }.ElseIf(Or(#name#==Accept,#mod#==3)){\n                                            SetVar(business_class,btn-success)\n                                        }.ElseIf(Or(#name#==Escalation,#mod#==4)){\n                                            SetVar(business_class,btn-warning)\n                                        }.ElseIf(Or(#name#==Reject,#mod#==5)){\n                                            SetVar(business_class,btn-danger)\n                                        }.Else{\n                                            SetVar(business_class,btn-default)\n                                        }\n                                        Button(Body:LangRes(#name#), Class: btn #business_class#, Page: business_process, Contract: business_Process, Params:\"ResultId=#id#\")\n                                    }\n                                }\n                            }\n                        }.Style(div {display:inline-block;})\n                    }.Else{\n                        Div(text-warning){\n                            Notification not found. Action impossible\n                        }\n                    }\n                }\n            }\n        }.Else{\n            AppParam(App: #application_id#, Name: object_types, Source: app_objects)\n            AppParam(App: #application_id#, Name: results, Source: app_results)\n            DBFind(business_events,src_events).Order(\"id desc\").Custom(_obj){\n                ForList(app_objects){\n                    If(#id#==#object_id#){\n                        #name#\n                    }\n                }\n            }.Custom(_res){\n                ForList(app_results){\n                    If(#id#==#result_id#){\n                        #name#\n                    }\n                }\n            }\n            Form(panel panel-primary){\n                Div(panel-heading text-center){\n                    Span($business_events$, ajman-color-h1)\n                }.Style(height: 50px; background-color: #0f789c!important;)\n                Div(panel-body){\n                    Table(src_events, \"$model_id$=model_id,$event_id$=event_id,$object$=_obj,$object_id$=object_id,$key_id$=key_id,$result$=_res,$comment$=comment,$amount_attempts$=num_submitted,$created_at$=created_at\")\n                }\n            }\n        }\n    }\n}",
            "Name": "business_process",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract business_Manager {\r\n    data {\r\n        Action string\r\n        Id string \"optional\"\r\n        EventId string \"optional\"\r\n        ModelId string \"optional\"\r\n        ObjectType string \"optional\"\r\n        Title string \"optional\"\r\n        RoleId string \"optional\"\r\n        TextBody string \"optional\"\r\n        NeedComment string \"optional\"\r\n        // condition\r\n        ConditionEventId array \"optional\"\r\n        ConditionResult array \"optional\"\r\n        ConditionDelete array \"optional\"\r\n        // result\r\n        Submit string \"optional\"\r\n        SentBack string \"optional\"\r\n        Accept string \"optional\"\r\n        Escalation string \"optional\"\r\n        Reject string \"optional\"\r\n        Inform string \"optional\"\r\n        Pay string \"optional\"\r\n    }\r\n    func boolChar(s string) int {\r\n        if s {\r\n            return 1\r\n        }\r\n        return 0\r\n    }\r\n    func safeGet(a array, i int) int {\r\n        if Len(a) > i{\r\n            return Int(a[i])\r\n        }\r\n        return 0\r\n    }\r\n    func safeGetBoolChar(a array, i int) int {\r\n        if Len(a) > i{\r\n            return boolChar(a[i])\r\n        }\r\n        return 0\r\n    }\r\n    func getCondArray(cond map) array {\r\n        var res array\r\n        // Int() for fixed \"interface conversion: interface {} is nil, not decimal.Decimal\"\r\n        if Int(cond[\"EventId\"]) > 0{\r\n            res[0] = Sprintf(\"%v\", cond[\"EventId\"])\r\n        }\r\n        var type string\r\n        var i int\r\n        while i<Len($results){\r\n            type = $results[i]\r\n            if Int(cond[type]) == 1{\r\n                res[Len(res)] = type\r\n            }\r\n            i=i+1\r\n        }\r\n        return res\r\n    }\r\n    conditions {\r\n        $Id = Int($Id)\r\n        $ApplicationId = Int(DBFind(\"applications\").Where(\"name='Business'\").One(\"id\"))\r\n        if $ApplicationId == 0 {\r\n            warning \"Application ID not found\"\r\n        }\r\n        $results = AppParam($ApplicationId, \"results\")\r\n        $results = Split($results, \",\")\r\n    }\r\n    action {\r\n        if $Action == \"create\" || $Action == \"update\"{\r\n            $ModelId = Int($ModelId)\r\n            $ObjectType = Int($ObjectType)\r\n            $RoleId = Int($RoleId)\r\n            $EventId = Int($EventId)\r\n            $NeedComment = boolChar($NeedComment)\r\n            var condition map\r\n            var conditionPretty array\r\n            var i int\r\n            while i<Len($ConditionResult){\r\n                var conditionDelete int\r\n                conditionDelete = safeGetBoolChar($ConditionDelete, i)\r\n                if !conditionDelete {\r\n                    var cond map\r\n                    var key, val int\r\n                    key = safeGet($ConditionEventId, i)\r\n                    val = safeGet($ConditionResult, i)\r\n                    condition[Str(key)] = val\r\n                    var prettyPrint string\r\n                    if key == 0{\r\n                        prettyPrint = Sprintf(\"%v\", $results[val-1])\r\n                    }else{\r\n                        prettyPrint = Sprintf(\"[%v:%v]\", key, $results[val-1])\r\n                    }\r\n                    conditionPretty[Len(conditionPretty)] = prettyPrint\r\n                }\r\n                i=i+1\r\n            }\r\n            $Condition = JSONEncode(condition)\r\n            $conditionPretty = Join(conditionPretty, \" OR \")\r\n\r\n            var result map\r\n            result[\"Submit\"] = boolChar($Submit)\r\n            result[\"SentBack\"] = boolChar($SentBack)\r\n            result[\"Accept\"] = boolChar($Accept)\r\n            result[\"Escalation\"] = boolChar($Escalation)\r\n            result[\"Reject\"] = boolChar($Reject)\r\n            result[\"Inform\"] = boolChar($Inform)\r\n            result[\"Pay\"] = boolChar($Pay)\r\n            $Result = JSONEncode(result)\r\n            $resultPretty = Join(getCondArray(result), \", \")\r\n        }\r\n\r\n        if $Action == \"create\"{\r\n            DBInsert(\"business_models\", \"event_id,object_type,title,role_id,text_body,need_comment,condition,result,condition_pretty,result_pretty,model_id\", $EventId,$ObjectType,$Title,$RoleId,$TextBody,$NeedComment,$Condition,$Result,$conditionPretty,$resultPretty,$ModelId)\r\n        }\r\n        if $Id == 0 {\r\n            return\r\n        }\r\n        if $Action == \"update\" {\r\n            DBUpdate(\"business_models\", $Id, \"event_id,object_type,title,role_id,text_body,need_comment,condition,result,condition_pretty,result_pretty,model_id\", $EventId,$ObjectType,$Title,$RoleId,$TextBody,$NeedComment,$Condition,$Result,$conditionPretty,$resultPretty,$ModelId)\r\n        }\r\n        if $Action == \"delete\" {\r\n            DBUpdate(\"business_models\", $Id, \"deleted\", 1)\r\n        }\r\n        if $Action == \"restore\" {\r\n            DBUpdate(\"business_models\", $Id, \"deleted\", 0)\r\n        }\r\n    }\r\n}",
            "Name": "business_Manager",
            "Type": "contracts"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract business_Process {\r\n    data {\r\n        Id int // business_models:id\r\n        ModelId int // business_models:model_id\r\n        EventId int\r\n        ResultId int\r\n        ObjectType int\r\n        ObjectId int\r\n        Comment string \"optional\"\r\n        NotificId string \"optional\"\r\n    }\r\n    func stringInArray(s string, a array) bool{\r\n        var i int\r\n        while i<Len(a){\r\n            if a[i] == s{\r\n                return true\r\n            }\r\n            i=i+1\r\n        }\r\n        return false\r\n    }\r\n\r\n    func updateObjectStatus(){\r\n        var tables results manager_ids array\r\n        tables = Split(AppParam($ApplicationId, \"object_status_tables\"), \",\")\r\n        results = Split(AppParam($ApplicationId, \"results\"), \",\")\r\n        manager_ids = Split(AppParam($ApplicationId, \"manager_role_ids\"), \",\")\r\n        if Len(tables) >= $ObjectType{\r\n            var table string\r\n            table = Replace(tables[$ObjectType-1], \" \", \"\")\r\n            if Size(table) > 1{\r\n                if DBFind(table).WhereId($ObjectId).One(\"status\"){\r\n                    var res status string\r\n                    res = results[$ResultId-1]\r\n                    if res == \"Accept\" && stringInArray(Str($role_id), manager_ids){\r\n                        res = \"AM Accept\"\r\n                    }\r\n                    status = $STATUSES[res]\r\n                    if status {\r\n                        DBUpdate(table, $ObjectId, \"status\", status)\r\n                    }\r\n                }else{\r\n                    warning \"Status not found\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    conditions {\r\n        var statuses map\r\n        //0 Not Submitted\r\n        statuses[\"Submit\"] = 1 //\"Submitted\"\r\n        statuses[\"Escalate\"] = 2 //\"Escalated\"\r\n        statuses[\"Sent Back\"] = 3 //\"Send Back\"\r\n        statuses[\"Accept\"] = 4 //\"Accepted\"\r\n        statuses[\"Pay\"] = 5 // \"Paid\"\r\n        statuses[\"AM Accept\"] = 6 // \"AM Approved\"\r\n        statuses[\"Reject\"] = 7 //\"Rejected\"\r\n        $STATUSES = statuses\r\n\r\n        $ApplicationId = Int(DBFind(\"applications\").Where(\"name='Business'\").One(\"id\"))\r\n        if $ApplicationId == 0 {\r\n            warning \"Application ID not found\"\r\n        }\r\n        $numSubmitted = Int(DBFind(\"business_events\").Where(\"event_id=? and object_type=? and object_id=? and key_id=? and result_id=? and model_id=?\", $EventId, $ObjectType, $ObjectId, $key_id, $ResultId, $ModelId).Order(\"num_submitted desc\").One(\"num_submitted\")) + 1\r\n        $models = DBFind(\"business_models\").Order(\"event_id\").Where(\"deleted='0' and model_id=?\", $ModelId)\r\n\r\n        var currentModel map\r\n        currentModel = DBFind(\"business_models\").Where(\"deleted='0' and id=?\", $Id).Row()\r\n        if !currentModel{\r\n            error \"Business model not found\"\r\n        }\r\n        if currentModel[\"need_comment\"] == 1 && Size($Comment) < 1 {\r\n            warning \"Need comment\"\r\n        }\r\n        $NotificId = Int($NotificId)\r\n    }\r\n    action {\r\n        DBInsert(\"business_events\", \"event_id,object_type,object_id,key_id,result_id,comment,num_submitted,created_at,model_id\", $EventId, $ObjectType, $ObjectId, $key_id, $ResultId, $Comment, $numSubmitted, \"Now()\", $ModelId)\r\n\r\n        updateObjectStatus()\r\n\r\n        var i int\r\n        var nextModel map\r\n        var isNextFound bool\r\n        while i<Len($models){\r\n            nextModel = $models[i]\r\n            var cond map\r\n            cond = JSONDecode(nextModel[\"condition\"])\r\n            if cond[\"0\"] == $ResultId || cond[Str($EventId)] == $ResultId {\r\n                isNextFound = true\r\n                break\r\n            }\r\n            i=i+1\r\n        }\r\n        if $NotificId > 0{\r\n            Notifications_Roles_Processing(\"notific_id\", $NotificId)\r\n            Notifications_Roles_Close(\"notific_id\", $NotificId)\r\n        }\r\n        if isNextFound {\r\n            var roleId closureType sender int\r\n            roleId = nextModel[\"role_id\"]\r\n            closureType = 2 // multiple\r\n            sender = 2 // from admin?\r\n            var icon header body page string\r\n            icon = \"icon-envelope\"\r\n            header = \"Business process: Next step\"\r\n            body = nextModel[\"title\"]\r\n            page = \"business_process\"\r\n            var params map\r\n            params[\"id\"] = nextModel[\"id\"]\r\n            params[\"object_id\"] = $ObjectId\r\n            params[\"comment\"] = $Comment\r\n            Notifications_Roles_Send_map(\"rid,closure_type,sender,icon_name,text_header,text_body,page_name,params_map\", roleId, closureType, sender, icon, header, body, page, params)\r\n\r\n        }else{\r\n            Println(\"Next step not found\")\r\n        }\r\n    }\r\n}",
            "Name": "business_Process",
            "Type": "contracts"
        }
    ]
}