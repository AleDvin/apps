{
    "name": "Business",
    "data": [
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "MenuItem(Title:$business_manager$, Page:business_manager, Icon:\"fa fa-edit\")",
            "Name": "default_menu",
            "Type": "menu"
        },
        {
            "Name": "Condition",
            "Trans": "{\"en\":\"Condition\", \"ru\":\"Условие\"}",
            "Type": "languages"
        },
        {
            "Name": "EventId",
            "Trans": "{\"en\":\"Event Id\", \"ru\":\"Идентификатор События\"}",
            "Type": "languages"
        },
        {
            "Name": "NeedComment",
            "Trans": "{\"en\":\"Need comment from user\", \"ru\":\"Нужен комментарий от пользователя\"}",
            "Type": "languages"
        },
        {
            "Name": "ObjectType",
            "Trans": "{\"en\":\"Object Type\", \"ru\":\"Тип Объекта\"}",
            "Type": "languages"
        },
        {
            "Name": "Result",
            "Trans": "{\"en\":\"Result\", \"ru\":\"Результат\"}",
            "Type": "languages"
        },
        {
            "Name": "RoleId",
            "Trans": "{\"en\":\"Role\", \"ru\":\"Роль\"}",
            "Type": "languages"
        },
        {
            "Name": "TextBody",
            "Trans": "{\"en\":\"Text Body\", \"ru\":\"Текст\"}",
            "Type": "languages"
        },
        {
            "Name": "Title",
            "Trans": "{\"en\":\"Title\", \"ru\":\"Название\"}",
            "Type": "languages"
        },
        {
            "Name": "business_manager",
            "Trans": "{\"en\":\"Business Process Manager\", \"ru\":\"Менеджер Бизнес-Процессов\"}",
            "Type": "languages"
        },
        {
            "Name": "business_events",
            "Columns": "[\n    {\n        \"name\": \"event_id\",\n        \"type\": \"number\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"object\",\n        \"type\": \"varchar\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"object_id\",\n        \"type\": \"number\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"key_id\",\n        \"type\": \"number\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"result_id\",\n        \"type\": \"number\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"comment\",\n        \"type\": \"text\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"num_submitted\",\n        \"type\": \"number\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"created_at\",\n        \"type\": \"datetime\",\n        \"conditions\": \"true\"\n    }\n]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}",
            "Type": "tables"
        },
        {
            "Name": "business_models",
            "Columns": "[\n    {\n        \"name\": \"event_id\",\n        \"type\": \"number\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"object_type\",\n        \"type\": \"number\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"title\",\n        \"type\": \"varchar\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"role_id\",\n        \"type\": \"number\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"text_body\",\n        \"type\": \"text\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"need_comment\",\n        \"type\": \"number\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"condition\",\n        \"type\": \"text\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"result\",\n        \"type\": \"json\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"deleted\",\n        \"type\": \"number\",\n        \"conditions\": \"true\"\n    }\n]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}",
            "Type": "tables"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "Property,Contract,Unit",
            "Name": "object_types",
            "Type": "app_params"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "Submit,SentBack,Accept,Escalation,Reject,Inform",
            "Name": "results",
            "Type": "app_params"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(applications).Where(\"name='Business'\").Vars(application)\nIf(#Mode#==deleted){\n    SetVar(Where,\"deleted=1\")\n}.Else{\n    SetVar(Where,\"deleted=0\")\n}\nDBFind(roles, src_roles).Columns(\"id,role_name\")\nDBFind(business_models, models).Where(#Where#).Custom(_actions){\n    Div(text-right btn-group){\n        Button(Class: icon-settings btn btn-primary, Page: business_model, PageParams: \"Id=#id#\")\n        If(#deleted#==1){\n            Button(Class: fa fa-undo btn btn-success, Page: business_manager, Contract: business_Manager,Params: \"Id=#id#,Action=restore\")\n        }.Else{\n            Button(Class: icon-trash btn btn-danger, Page: business_manager, Contract: business_Manager,Params: \"Id=#id#,Action=delete\")\n        }\n    }.Style(width:100px;display:flex;)\n}.Custom(_obj){\n    AppParam(App: #application_id#, Name: object_types, Index: #object_type#)\n}.Custom(_role){\n    ForList(src_roles){\n        If(#role_id#==#id#){\n            #role_name#\n        }\n    }\n}\nDiv(content-wrapper bg-white){\n    Div(container){\n        SetTitle($business_manager$)\n        Div(row){\n            Div(col-md-12){\n                Div(text-right form-group){\n                    If(#Mode#==deleted){\n                        Button(Page: business_manager, Class: btn btn-warning, PageParams: \"Mode=actived\"){\n                            Span($actived$)\n                        }\n                    }.Else{\n                        Button(Page: business_manager, Class: btn btn-warning, PageParams: \"Mode=deleted\"){\n                            Span($deleted$)\n                        }\n                    }\n                    Button(Page: business_model, Class: btn btn-primary){\n                        Span($create$, icon-plus)\n                    }\n                }\n                Div( table-responsive){\n                    Table(models,\"$EventId$=event_id,$ObjectType$=_obj,$Title$=title,$RoleId$=_role,$TextBody$=text_body,$NeedComment$=need_comment,$Condition$=condition,$Result$=result,=_actions\")\n                }\n            }\n        }\n    }\n}",
            "Name": "business_manager",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(applications).Where(\"name='Business'\").Vars(application)\nDiv(container){\n    AppParam(App: #application_id#, Name: object_types, Source: src_objects)\n    DBFind(Name:roles, Source: src_roles).Where(\"deleted=0\").Order(id).Columns(\"id,role_name\").Custom(name){#role_name#}\n    If(#Id#>0){\n        DBFind(Name:business_models, src_models).Where(\"id=#Id#\").Vars(model)\n        SetVar(Action, update).(heading, $business_manager$: $model$ $edit$ ##Id#)\n        JsonToSource(src_results, #model_result#)\n        Data(model, \"Name,Type,Src,Value\"){\n            EventId,number,,#model_event_id#\n            ObjectType,select,src_objects,#model_object_type#\n            Title,text,,#model_title#\n            RoleId,select,src_roles,#model_role_id#\n            TextBody,textarea,,#model_text_body#\n            NeedComment,checkbox,,#model_need_comment#\n            Condition,text,,#model_condition#\n            Result,result,src_results,\n        }\n    }.Else{\n        AppParam(App: #application_id#, Name: results, Source: src_results)\n        SetVar(Action, create).(heading, $business_manager$: $create$)\n        Data(model, \"Name,Type,Src\"){\n            EventId,number,\n            ObjectType,select,src_objects\n            Title,text,\n            RoleId,select,src_roles\n            TextBody,textarea,\n            NeedComment,checkbox,\n            Condition,text,\n            Result,result,src_results\n        }\n        SetVar(Value,)\n    }\n    Div(row){\n        Div(col-sm-10 col-sm-offset-1){\n            Form(panel panel-primary){\n                Div(panel-heading){#heading#}\n                Div(panel-body){\n                    ForList(model){\n                        Div(row form-group){\n                            Div(col-sm-3 text-right pt-sm){\n                                Label(For:#Name#){LangRes(#Name#)}\n                            }\n                            Div(col-sm-9){\n                                If(#Type#==result){\n                                    ForList(#Src#){\n                                        Div(col-sm-4){\n                                            If(#Id#>0){\n                                                If(#value#==1){\n                                                    SetVar(bool,true)\n                                                }.Else{\n                                                    SetVar(bool,false)\n                                                }\n                                                Input(Name: #key#, Type:checkbox, Value: #bool#)\n                                                #key#\n                                            }.Else{\n                                                Input(Name: #name#, Type:checkbox)\n                                                #name#\n                                            }\n                                        }.Style(div {display:inline-block;})\n                                    }\n                                }.ElseIf(#Type#==select){\n                                    Select(Name: #Name#, Source:#Src#, NameColumn: name, ValueColumn: id, Value:#Value#)\n                                }.ElseIf(#Type#==checkbox){\n                                    If(#Value#==1){\n                                        SetVar(bool,true)\n                                    }.Else{\n                                        SetVar(bool,false)\n                                    }\n                                    Input(Name: #Name#, Type:#Type#, Value: #bool#)\n                                }.Else{\n                                    Input(Name: #Name#, Type:#Type#, Value: #Value#)\n                                }\n                            }\n                        }\n                    }\n                }\n                Div(panel-footer text-right){\n                    Div(pull-left){\n                        Button(Class: icon-arrow-left btn btn-default, Page: business_manager)\n                    }\n                    Input(Name:Action, Value:#Action#, Type: hidden)\n                    Button(Body:LangRes(#Action#), Class: btn btn-primary, Page: business_manager, Contract: business_Manager)\n                }\n            }\n        }\n    }\n}",
            "Name": "business_model",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(applications).Where(\"name='Business'\").Vars(application)\n",
            "Name": "business_object",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(applications).Where(\"name='Business'\").Vars(application)\n",
            "Name": "business_process",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract business_Manager {\r\n    data {\r\n        Action string\r\n        Id string \"optional\"\r\n        EventId string \"optional\"\r\n        ObjectType string \"optional\"\r\n        Title string \"optional\"\r\n        RoleId string \"optional\"\r\n        TextBody string \"optional\"\r\n        NeedComment string \"optional\"\r\n        Condition string \"optional\"\r\n        Submit string \"optional\"\r\n        SentBack string \"optional\"\r\n        Accept string \"optional\"\r\n        Escalation string \"optional\"\r\n        Reject string \"optional\"\r\n        Inform string \"optional\"\r\n    }\r\n    func strToInt(s string) int {\r\n        if s {\r\n            return 1\r\n        }\r\n        return 0\r\n    }\r\n    conditions {\r\n        $Id = Int($Id)\r\n        if $Action == \"create\" || $Action == \"update\"{\r\n            $ObjectType = Int($ObjectType)\r\n            $RoleId = Int($RoleId)\r\n            $EventId = Int($EventId)\r\n            $NeedComment = strToInt($NeedComment)\r\n            $Submit = strToInt($Submit)\r\n            $SentBack = strToInt($SentBack)\r\n            $Accept = strToInt($Accept)\r\n            $Escalation = strToInt($Escalation)\r\n            $Reject = strToInt($Reject)\r\n            $Inform = strToInt($Inform)\r\n            var result map\r\n            result[\"Submit\"] = $Submit\r\n            result[\"SentBack\"] = $SentBack\r\n            result[\"Accept\"] = $Accept\r\n            result[\"Escalation\"] = $Escalation\r\n            result[\"Reject\"] = $Reject\r\n            result[\"Inform\"] = $Inform\r\n            $Result = JSONEncode(result)\r\n            Println(\"Action\",$Action,\"Id\",$Id,\"EventId\",$EventId,\"ObjectType\",$ObjectType,\"Title\",$Title,\"RoleId\",$RoleId,\"TextBody\",$TextBody,\"NeedComment\",$NeedComment,\"Condition\",$Condition,\"result\",$Result)\r\n        }\r\n\r\n        $ApplicationId = Int(DBFind(\"applications\").Where(\"name='Business'\").One(\"id\"))\r\n        if $ApplicationId == 0 {\r\n            warning \"Application ID not found\"\r\n        }\r\n\r\n    }\r\n    action {\r\n        if $Action == \"create\"{\r\n            DBInsert(\"business_models\", \"event_id,object_type,title,role_id,text_body,need_comment,condition,result\", $EventId,$ObjectType,$Title,$RoleId,$TextBody,$NeedComment,$Condition,$Result)\r\n        }\r\n        if $Id == 0 {\r\n            return\r\n        }\r\n        if $Action == \"update\" {\r\n            DBUpdate(\"business_models\", $Id, \"event_id,object_type,title,role_id,text_body,need_comment,condition,result\", $EventId,$ObjectType,$Title,$RoleId,$TextBody,$NeedComment,$Condition,$Result)\r\n        }\r\n        if $Action == \"delete\" {\r\n            DBUpdate(\"business_models\", $Id, \"deleted\", 1)\r\n        }\r\n        if $Action == \"restore\" {\r\n            DBUpdate(\"business_models\", $Id, \"deleted\", 0)\r\n        }\r\n    }\r\n}",
            "Name": "business_Manager",
            "Type": "contracts"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract business_Process {\r\n    data {\r\n\r\n    }\r\n    conditions {\r\n        $ApplicationId = Int(DBFind(\"applications\").Where(\"name='Business'\").One(\"id\"))\r\n        if $ApplicationId == 0 {\r\n            warning \"Application ID not found\"\r\n        }\r\n\r\n    }\r\n    action {\r\n    }\r\n}",
            "Name": "business_Process",
            "Type": "contracts"
        }
    ]
}