{
    "pages": [
        {
            "Name": "application_newParam",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "application_menu",
            "Value": "Div(Class: fullscreen){\r\n    SetTitle(New Application Parameter)\r\n    Div(breadcrumb){\r\n        Span(Class: text-muted, Body: New Application Parameter)\r\n    }\r\n    Div(Class: fullscreen-wrapper){\r\n        Form(){\r\n            Div(Class: form-group){\r\n                Label(For: name){\r\n                    Span(Body: Name)\r\n                }\r\n                Input(Name: name, Class: form-control)\r\n            }\r\n            Div(Class: form-group){\r\n                Input(Type: textarea, Name: value).Style(height: 500px !important;)\r\n            }\r\n            Div(Class: mb0 form-group){\r\n                Label(For: conditions){\r\n                    Span(Body: Change Conditions)\r\n                }\r\n                Input(Name: conditions, Class: form-control)\r\n            }\r\n            Div(Class: mt-lg){\r\n                Button(Class: btn btn-primary, Body: Save, Contract: NewAppParameter, Params: \"Name=Val(name),Value=Val(value),Conditions=Val(conditions),App_id=#application_id#\",Page: application_params, PageParams: \"application_id=#application_id#\")\r\n            }\r\n        }\r\n    }\r\n}"
        },
        {
            "Name": "application_editParam",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "application_menu",
            "Value": "Div(Class: fullscreen){\r\n    DBFind(appparam, src_params).Where(\"id = #id#\").Limit(1).Vars(\"param\")\r\n    SetTitle(Edit Application Parameter)\r\n    Div(Class: breadcrumb){\r\n        LinkPage(Application Parameters, AppParams)\r\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n        Span(Class: text-muted, Body: #param_name#)\r\n    }\r\n    Div(Class: fullscreen-wrapper){\r\n        Form(){\r\n            Div(Class: form-group){\r\n                Label(For: name){\r\n                    Span(Body: Name)\r\n                }\r\n                Input(Name: name, Class: form-control, Value: #param_name#)\r\n            }\r\n            Div(Class: form-group){\r\n                Input(Type: textarea, Name: value, Value: \"#param_value#\" ).Style(height: 500px !important;)\r\n            }\r\n            Div(Class: mb0 form-group){\r\n                Label(For: conditions){\r\n                    Span(Body: Change Conditions)\r\n                }\r\n                Input(Name: conditions, Class: form-control, Value: #param_conditions#)\r\n            }\r\n            Div(Class: mt-lg){\r\n                Button(Class: btn btn-primary, Body: Save, Contract:EditAppParameter, Params: \"Id=#id#,Value=Val(value),Conditions=Val(conditions)\",Page:AppParams)\r\n            }\r\n        }\r\n    }\r\n}"
        },
        {
            "Name": "application_params",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "application_menu",
            "Value": "DBFind(applications, src_app).Where(\"id=#application_id#\").Limit(1).Vars(\"app\")\r\n\r\nDiv(Class: content-wrapper){\r\n\tSetTitle(#app_name#: $params$)\r\n    Div(Class: breadcrumb){\r\n        LinkPage(LangRes(applications), applications_list)\r\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n        Span(Class: text-muted, Body: #app_name#: $params$)\r\n    }\r\n\r\n    If(GetVar(sort)==\"\"){\r\n        SetVar(sort, \"id\")\r\n    }\r\n\r\n    Div(Class: clearfix){\r\n        Button(Body: Sort by ID, Class: btn btn-primary pull-right, Page: application_params, PageParams: \"application_id=#application_id#,sort=id\")\r\n        Button(Body: Sort by Name, Class: btn btn-primary pull-right, Page: application_params, PageParams: \"application_id=#application_id#,sort=name\")\r\n    }\r\n\r\n    DBFind(appparam, src_appparameters).Order(#sort# desc).Limit(10).Offset(#pager_offset#).Where(app_id = `#application_id#`).Custom(custom_actions){\r\n        Div(){\r\n            Span(){\r\n                Button(Class: btn btn-default, Body: Em(Class: fa fa-edit), PageParams: \"id=#id#\", Page: application_editParam)\r\n            }\r\n        }\r\n    }\r\n\r\n    Div(Class: pull-left clearfix){\r\n        Button(Body: Create Param, Class: btn btn-primary, Page: application_newParam, PageParams: \"application_id=#application_id#\")\r\n    }\r\n\r\n    Div(Class: panel panel-default){\r\n        Form(){\r\n            Table(src_appparameters, \"Name=name,Application=app_id,Value=value,Conditions=conditions,=custom_actions\").Style(\r\n            }.Style(\"margin-top: 50px;\")\r\n        }\r\n    }\r\n}"
        },
        {
            "Name": "application_binary",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "application_menu",
            "Value": "DBFind(applications, src_app).Where(\"id=#application_id#\").Limit(1).Vars(\"app\")\r\n\r\nDiv(Class: content-wrapper){\r\n\tSetTitle(#app_name#: $binary$)\r\n    Div(Class: breadcrumb){\r\n        LinkPage(LangRes(applications), applications_list)\r\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n        Span(Class: text-muted, Body: #app_name#: $binary$)\r\n    }\r\n\r\n    If(GetVar(sort)==\"\"){\r\n        SetVar(sort, \"id\")\r\n    }\r\n\r\n    Div(Class: clearfix){\r\n        Button(Body: Sort by ID, Class: btn btn-primary pull-right, Page: application_binary, PageParams: \"application_id=#application_id#,sort=id\")\r\n        Button(Body: Sort by Name, Class: btn btn-primary pull-right, Page: application_binary, PageParams: \"application_id=#application_id#,sort=name\")\r\n    }\r\n    DBFind(static, src_binparameters).Order(#sort# desc).Limit(10).Offset(#pager_offset#).Where(app_id = `#application_id#`).Custom(DataBin){\r\n        Image(Src: \"#data#\").Style(width: 150px;border: 1px solid #5A5D63; margin-right: 10px;)\r\n    }\r\n\r\n    Div(Class: panel panel-default){\r\n        Form(){\r\n            Table(src_binparameters, \"Name=name,Application=app_id,Value=value,Owner=member_id,Data=data\")\r\n            }\r\n        }\r\n    }\r\n}"
        },
        {
            "Name": "table_create",
            "Conditions": "true",
            "Menu": "admin_menu",
            "Value": "Div(Class: fullscreen){\r\n    SetTitle(Tables)\r\n\tDiv(breadcrumb){\r\n        Div(){\r\n            LinkPage(Tables, tables)\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            Span(Create, text-muted)\r\n        }\r\n    }\r\n    Div(Class: content-wrapper){\r\n    SetVar(Name: app_id, Value:\"0\")\r\n    Form(){\r\n        Div(Class: panel panel-default){\r\n            Div(Class: panel-body){\r\n                    Div(Class: form-group){\r\n                        Label(For: Name){\r\n                            Span(Body: Name)\r\n                        }\r\n                        Input(TableName,Type: text,Class: form-control)\r\n                    }\r\n                    Div(Class: form-group mb0){\r\n                        Div(Class: table-responsive){\r\n                             DBFind(Name: tabltypes, Source:sh).Columns(\"id,col_status\").Where(\"col_status != 1\").Custom(Col_Name){\r\n                                Input(Name:idshare, Class: \"form-control\", Type: text, Placeholder: text,Value:\"id\")\r\n                            }.Custom(Type){\r\n                                Data(src_type,\"type,name\"){\r\n                                    text,\"Text\"\r\n                                    number,\"Number\"\r\n                                    varchar,\"Varchar\"\r\n                                    bytea,\"Binary\"\r\n                                    datetime,\"Date/Time\"\r\n                                    money,\"Money\"\r\n                                    double,\"Double\"\r\n                                    character,\"Character\"\r\n                                    json,\"JSON\"\r\n                                }\r\n                                Select(Name: share, Source: src_type, NameColumn: name, ValueColumn: type,Value:\"number\")      \r\n                            }.Custom(Delete){\r\n                                Button((-),Contract:delcol,Class:btn btn-primary,Params:\"Id=#id#,application_id=#app_id#\",Page:table_create)\r\n                            }\r\n                            Table(Source: sh,Columns:\"Columns=Col_Name,Type=Type,Action=Delete\").Style(\r\n                                tr  > *:last-child {\r\n                                text-align:right; \r\n                    \r\n                                width: 90px;\r\n                            })\r\n                        }\r\n                    }    \r\n            }\r\n            Div(Class: panel-footer){\r\n                Div(Class: clearfix){\r\n                    Div(Class: pull-left){\r\n                        Input(Name:application_id, Class: hidden, Type: text, Placeholder: text,Value: #app_id#)\r\n                        Button(Add Column,Contract:testcol,Class:btn btn-primary pull-right,Page:table_create)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Div(Class: row){\r\n            Div(Class: col-md-6){\r\n                Div(Class: panel panel-default){\r\n                    Div(Class: panel-heading,Body: Write permissions)\r\n                    Div(Class: panel-body){\r\n                        Div(Class: form-group){\r\n                            Label(Insert)\r\n                            Input(Name: Insert_con,Type: text, Value: ContractConditions(\"MainCondition\"))\r\n                        }\r\n                        Div(Class: form-group){\r\n                            Label(Update)\r\n                            Input(Name: Update_con,Type: text, Value: ContractConditions(\"MainCondition\"))\r\n                        }\r\n                        Div(Class: form-group){\r\n                            Label(New column)\r\n                            Input(Name: New_column_con,Type: text, Value: ContractConditions(\"MainCondition\"))\r\n                        }\r\n                    }\r\n                    Div(Class: panel-footer){\r\n                        Div(Class: text-right){\r\n                            Button(Save,Class: btn btn-primary,Contract:savetabltest,Params: \"Shareholding=Val(share),Id=Val(idshare)\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n}"
        },
        {
            "Name": "application_contracts",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "application_menu",
            "Value": "DBFind(applications, src_app).Where(\"id=#application_id#\").Limit(1).Vars(\"app\")\r\n\r\nDiv(Class: content-wrapper){\r\n\tSetTitle(#app_name#: $smart_contracts$)\r\n    Div(Class: breadcrumb){\r\n        LinkPage(LangRes(applications), applications_list)\r\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n        Span(Class: text-muted, Body: #app_name#: $smart_contracts$)\r\n    }\r\n\r\n    If(GetVar(sort)==\"\"){\r\n        SetVar(sort, \"id\")\r\n    }\r\n\r\n    Div(Class: clearfix){\r\n        Button(Body: Sort by ID, Class: btn btn-primary pull-right, Page: application_contracts, PageParams: \"application_id=#application_id#,sort=id\")\r\n        Button(Body: Sort by Name, Class: btn btn-primary pull-right, Page: application_contracts, PageParams: \"application_id=#application_id#,sort=name\")\r\n    }\r\n    DBFind(contracts, src_contracts).Order(#sort# desc).Where(\"application_id=#application_id#\")\r\n\r\n    Div(Class: pull-left clearfix){\r\n        Button(Body: Create Contract, Class: btn btn-primary, Page: contract_create, PageParams: \"application_id=#application_id#\")\r\n    }\r\n\r\n    Div(Class: panel panel-default){\r\n        Form(){\r\n            Div(Class: row){\r\n                ForList(src_contracts){\r\n                    Div(Class: col-md-4){\r\n                        Div(Class: row){\r\n                            Div(Class: col-xs-4){\r\n                                #name#\r\n                            }\r\n                            Div(Class: col-xs-5){\r\n                                Address(#wallet_id#)\r\n                            }\r\n                            Div(Class: col-xs-3){\r\n                                Button(Class: btn btn-default, Body: Em(Class: fa fa-edit), PageParams: \"id=#id#\", Page: contract_edit)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }.Style(\"margin-top: 50px;\")\r\n        }\r\n    }\r\n}"
        },
        {
            "Name": "application_menus",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "application_menu",
            "Value": "DBFind(applications, src_app).Where(\"id=#application_id#\").Limit(1).Vars(\"app\")\r\n\r\nDiv(Class: content-wrapper){\r\n\tSetTitle(#app_name#: $menus$)\r\n    Div(Class: breadcrumb){\r\n        LinkPage(LangRes(applications), applications_list)\r\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n        Span(Class: text-muted, Body: #app_name#: $menus$)\r\n    }\r\n\r\n    If(GetVar(sort)==\"\"){\r\n        SetVar(sort, \"id\")\r\n    }\r\n\r\n    Div(Class: clearfix){\r\n        Button(Body: Sort by ID, Class: btn btn-primary pull-right, Page: application_menus, PageParams: \"application_id=#application_id#,sort=id\")\r\n        Button(Body: Sort by Name, Class: btn btn-primary pull-right, Page: application_menus, PageParams: \"application_id=#application_id#,sort=name\")\r\n    }\r\n\r\n    DBFind(menu, src_menus).Order(#sort# desc).Where(\"application_id=#application_id#\")\r\n\r\n    Div(Class: pull-left clearfix){\r\n        Button(Body: Create Menu, Class: btn btn-primary, Page: menu_create, PageParams: \"application_id=#application_id#\")\r\n    }\r\n\r\n    Div(Class: panel panel-default){\r\n        Form(){\r\n            Div(Class: row){\r\n                ForList(src_menus){\r\n                    Div(Class: col-md-4){\r\n                        Div(Class: row){\r\n                            Div(Class: col-md-7){\r\n                                #name#\r\n                            }\r\n                            Div(Class: col-md-5){\r\n                                Button(Class: btn btn-default, Body: Em(Class: fa fa-edit), PageParams: \"id=#id#\", Page: menu_edit)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }.Style(\"margin-top: 50px;\")\r\n        }\r\n    }\r\n\r\n}"
        },
        {
            "Name": "application_blocks",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "application_menu",
            "Value": "DBFind(applications, src_app).Where(\"id=#application_id#\").Limit(1).Vars(\"app\")\r\n\r\nDiv(Class: content-wrapper){\r\n\tSetTitle(#app_name#: $blocks$)\r\n    Div(Class: breadcrumb){\r\n        LinkPage(LangRes(applications), applications_list)\r\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n        Span(Class: text-muted, Body: #app_name#: $blocks$)\r\n    }\r\n\r\n    If(GetVar(sort)==\"\"){\r\n        SetVar(sort, \"id\")\r\n    }\r\n\r\n    Div(Class: clearfix){\r\n        Button(Body: Sort by ID, Class: btn btn-primary pull-right, Page: application_blocks, PageParams: \"application_id=#application_id#,sort=id\")\r\n        Button(Body: Sort by Name, Class: btn btn-primary pull-right, Page: application_blocks, PageParams: \"application_id=#application_id#,sort=name\")\r\n    }\r\n\r\n    DBFind(blocks, src_blocks).Order(#sort# desc).Where(\"application_id=#application_id#\")\r\n\r\n    Div(Class: pull-left clearfix){\r\n        Button(Body: Create Block, Class: btn btn-primary, Page: block_create, PageParams: \"application_id=#application_id#\")\r\n    }\r\n\r\n    Div(Class: panel panel-default){\r\n        Form(){\r\n            Div(Class: row){\r\n                ForList(src_blocks){\r\n                    Div(Class: col-md-4){\r\n                        Div(Class: row){\r\n                            Div(Class: col-md-7){\r\n                                #name#\r\n                            }\r\n                            Div(Class: col-md-5){\r\n                                Button(Class: btn btn-default, Body: Em(Class: fa fa-edit), PageParams: \"id=#id#\", Page: block_edit)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }.Style(\"margin-top: 50px;\")\r\n        }\r\n    }\r\n}"
        },
        {
            "Name": "application_pages",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "application_menu",
            "Value": "DBFind(applications, src_app).Where(\"id=#application_id#\").Limit(1).Vars(\"app\")\r\n\r\nDiv(Class: content-wrapper){\r\n\tSetTitle(#app_name#: $pages$)\r\n    Div(Class: breadcrumb){\r\n        LinkPage(LangRes(applications), applications_list)\r\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n        Span(Class: text-muted, Body: #app_name#: $pages$)\r\n    }\r\n\r\n    If(GetVar(sort)==\"\"){\r\n        SetVar(sort, \"id\")\r\n    }\r\n\r\n    Div(Class: clearfix){\r\n        Button(Body: Sort by ID, Class: btn btn-primary pull-right, Page: application_pages, PageParams: \"application_id=#application_id#,sort=id\")\r\n        Button(Body: Sort by Name, Class: btn btn-primary pull-right, Page: application_pages, PageParams: \"application_id=#application_id#,sort=name\")\r\n    }\r\n\r\n    DBFind(pages, src_pages).Order(#sort# desc).Where(\"application_id=#application_id#\")\r\n    \r\n    Div(Class: pull-left clearfix){\r\n        Button(Body: Create Page, Class: btn btn-primary, Page: page_create, PageParams: \"application_id=#application_id#\")\r\n    }\r\n\r\n    Div(Class: panel panel-default){\r\n        Form(){\r\n            Div(Class: row){\r\n                ForList(src_pages){\r\n                    Div(Class: col-md-4){\r\n                        Div(Class: row){\r\n                            Div(Class: col-md-7){\r\n                                #name#\r\n                            }\r\n                            Div(Class: col-md-5){\r\n                                Button(Class: btn btn-default, Body: Em(Class: fa fa-eye), Page: #name#)\r\n                                Button(Class: btn btn-default, Body: Em(Class: fa fa-edit), PageParams: \"id=#id#\", Page: page_edit)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }.Style(\"margin-top: 50px;\")\r\n        }\r\n    }\r\n}"
        },
        {
            "Name": "applications_deleted",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu",
            "Value": "Div(Class: content-wrapper){\r\n\r\n\tSetTitle($deleted_applications$)\r\n    DBFind(applications, src_application).Where(\"id=#id#\").Limit(1).Vars(\"app\")\r\n    Div(Class: breadcrumb){\r\n        LinkPage(LangRes(applications), applications_list)\r\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n        Span(Class: text-muted, Body: $deleted_applications$)\r\n    }\r\n\r\n    If(GetVar(isSearch) == 1){\r\n        SetVar(Name: v_Where, Value: \"name='#v_Search#' and delete=1\")\r\n    }.Else{\r\n        SetVar(Name: v_Where, Value: \"delete=1\")\r\n        SetVar(Name: v_Search, Value: \"\")\r\n    }\r\n\r\n    DBFind(applications, src_applications).Where(#v_Where#).Order(id desc).Custom(custom_actions){\r\n\t\tSpan(){\r\n\t\t\tButton(Class: btn btn-primary, Body: Em(Class: fa fa-eye), Page: application_pages, PageParams: \"application_id=#id#\")\r\n\t\t\tButton(Class: btn btn-primary, Body: Em(Class: fa fa-arrow-up), Contract: RestoreApplication, Params: \"ApplicationId=#id#\", Page: applications_deleted)\r\n\t\t}\r\n\t}\r\n\r\n    Div(Class: panel panel-primary md-8){\r\n\t\tDiv(Class: panel-heading, Body: $applications$)\r\n        Form(){\r\n            Div(Class: list-group-item){\r\n                Div(Class: row df f-valign){\r\n                    Div(Class: col-md-1 mt-sm text-right){\r\n                        Label(For: Search){\r\n                            Span(Body: LangRes(name))\r\n                        }\r\n                    }\r\n                    Div(Class: col-md-11 mc-sm){\r\n                        Div(Class: input-group){\r\n                            Input(Class: form-control, Type: text, Name: Search, Value: #v_Search#)\r\n                            Div(Class: input-group-btn){\r\n                                Button(Body: Em(Class: fa fa-search), Class: btn btn-default, Page: applications_list, PageParams: \"isSearch=1,v_Search=Val(Search)\")\r\n                            }\r\n                        }\r\n                    }\r\n                }  \r\n            }\r\n            Div(Class: list-group-item){ \r\n                Table(Source: src_applications, Columns: \"$name$=name,Conditions=conditions,=custom_actions\").Style(\"tr  > *:first-child {padding-left:0px;} tr  > *:last-child {text-align:right; padding-right:0px;}\")\r\n                If(GetVar(isSearch) == 1){\r\n                    Div(Class: text-center){  \r\n                        Button(Body: $view_all$, Class: btn btn-primary, Page: applications_list, PageParams: \"isSearch=0\")\r\n                    }\r\n                }\r\n            }\r\n\t\t\tDiv(Class: panel-footer clearfix){\r\n\t\t\t\tDiv(Class: pull-right){\r\n\t\t\t\t\tButton(Body: Create Application, Class: btn btn-primary, Page: application_create)\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }           \r\n    }\r\n\r\n}"
        },
        {
            "Name": "application_edit",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu",
            "Value": "Div(Class: content-wrapper){\r\n    SetTitle(Edit Application)\r\n    DBFind(applications, src_application).Where(\"id=#id#\").Limit(1).Vars(\"app\")\r\n    Div(Class: breadcrumb){\r\n        LinkPage(LangRes(applications), applications_list)\r\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n        Span(Class: text-muted, Body: #app_name#)\r\n    }\r\n    Div(Class: row df f-valign){\r\n        Div(Class: col-md-3)\r\n        Div(Class: col-md-6){\r\n\r\n            Div(Class: panel panel-primary){\r\n                Div(Class: panel-heading, Body: New Application)\r\n                Form(){\r\n                    Div(Class: list-group-item){\r\n\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\tLabel(For: name){\r\n\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(name))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\t\t\tInput(Class: form-control, Type: text, Name: name, Value: #app_name#)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n                        Div(Class: row df f-valign){\r\n\t\t\t\t\t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\tLabel(For: conditions){\r\n\t\t\t\t\t\t\t\t\tSpan(Body: Conditions)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\t\t\tInput(Class: form-control, Type: text, Name: conditions, Value: #app_conditions#)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n                    Div(Class: panel-footer clearfix){\r\n                        Div(Class: pull-right){\r\n\t\t\t\t\t\t\tButton(Body: Add, Class: btn btn-primary, Page: applications_list, Contract: EditApplication, Params: \"Name=Val(name),Id=#id#,Conditions=Val(conditions)\")\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        Div(Class: col-md-3)\r\n    }\r\n}"
        },
        {
            "Name": "application_view",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu",
            "Value": "DBFind(applications, src_app).Where(\"id=#application_id#\").Limit(1).Vars(\"app\")\r\n\r\nDiv(Class: content-wrapper){\r\n\tSetTitle($application$: #app_name#)\r\n    Div(Class: breadcrumb){\r\n        LinkPage(LangRes(applications), applications_list)\r\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n        Span(Class: text-muted, Body: #app_name#)\r\n    }\r\n\r\n    If(GetVar(sort)==\"\"){\r\n        SetVar(sort, \"id\")\r\n    }\r\n\r\n    Div(Class: clearfix){\r\n        Button(Body: Sort by ID, Class: btn btn-primary pull-right, Page: application_view, PageParams: \"application_id=#application_id#,sort=id\")\r\n        Button(Body: Sort by Name, Class: btn btn-primary pull-right, Page: application_view, PageParams: \"application_id=#application_id#,sort=name\")\r\n    }\r\n\r\n    DBFind(pages, src_pages).Order(#sort# desc).Where(\"application_id=#application_id#\")\r\n    \r\n    Div(Class: pull-left clearfix){\r\n        Button(Body: Create Page, Class: btn btn-primary, Page: page_create, PageParams: \"application_id=#application_id#\")\r\n    }\r\n\r\n    Div(Class: panel panel-default){\r\n        Form(){\r\n            Div(Class: row){\r\n                ForList(src_pages){\r\n                    Div(Class: col-md-4){\r\n                        Div(Class: row){\r\n                            Div(Class: col-md-7){\r\n                                #name#\r\n                            }\r\n                            Div(Class: col-md-5){\r\n                                Button(Class: btn btn-default, Body: Em(Class: fa fa-eye), Page: #name#)\r\n                                Button(Class: btn btn-default, Body: Em(Class: fa fa-edit), PageParams: \"id=#id#\", Page: page_edit)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }.Style(\"margin-top: 50px;\")\r\n        }\r\n    }\r\n\r\n    DBFind(blocks, src_blocks).Order(#sort# desc).Where(\"application_id=#application_id#\")\r\n\r\n    Div(Class: pull-left clearfix){\r\n        Button(Body: Create Block, Class: btn btn-primary, Page: block_create, PageParams: \"application_id=#application_id#\")\r\n    }\r\n\r\n    Div(Class: panel panel-default){\r\n        Form(){\r\n            Div(Class: row){\r\n                ForList(src_blocks){\r\n                    Div(Class: col-md-4){\r\n                        Div(Class: row){\r\n                            Div(Class: col-md-7){\r\n                                #name#\r\n                            }\r\n                            Div(Class: col-md-5){\r\n                                Button(Class: btn btn-default, Body: Em(Class: fa fa-edit), PageParams: \"id=#id#\", Page: block_edit)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }.Style(\"margin-top: 50px;\")\r\n        }\r\n    }\r\n\r\n    DBFind(menu, src_menus).Order(#sort# desc).Where(\"application_id=#application_id#\")\r\n\r\n    Div(Class: pull-left clearfix){\r\n        Button(Body: Create Menu, Class: btn btn-primary, Page: menu_create, PageParams: \"application_id=#application_id#\")\r\n    }\r\n\r\n    Div(Class: panel panel-default){\r\n        Form(){\r\n            Div(Class: row){\r\n                ForList(src_menus){\r\n                    Div(Class: col-md-4){\r\n                        Div(Class: row){\r\n                            Div(Class: col-md-7){\r\n                                #name#\r\n                            }\r\n                            Div(Class: col-md-5){\r\n                                Button(Class: btn btn-default, Body: Em(Class: fa fa-edit), PageParams: \"id=#id#\", Page: menu_edit)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }.Style(\"margin-top: 50px;\")\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    DBFind(contracts, src_contracts).Order(#sort# desc).Where(\"application_id=#application_id#\")\r\n\r\n    Div(Class: pull-left clearfix){\r\n        Button(Body: Create Contract, Class: btn btn-primary, Page: contract_create, PageParams: \"application_id=#application_id#\")\r\n    }\r\n\r\n    Div(Class: panel panel-default){\r\n        Form(){\r\n            Div(Class: row){\r\n                ForList(src_contracts){\r\n                    Div(Class: col-md-4){\r\n                        Div(Class: row){\r\n                            Div(Class: col-xs-4){\r\n                                #name#\r\n                            }\r\n                            Div(Class: col-xs-5){\r\n                                Address(#wallet_id#)\r\n                            }\r\n                            Div(Class: col-xs-3){\r\n                                Button(Class: btn btn-default, Body: Em(Class: fa fa-edit), PageParams: \"id=#id#\", Page: contract_edit)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }.Style(\"margin-top: 50px;\")\r\n        }\r\n    }\r\n}"
        },
        {
            "Name": "application_create",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu",
            "Value": "Div(Class: content-wrapper){\r\n\r\n    Div(Class: row df f-valign){\r\n        Div(Class: col-md-3)\r\n        Div(Class: col-md-6){\r\n\r\n            Div(Class: panel panel-primary){\r\n                Div(Class: panel-heading, Body: New Application)\r\n                Form(){\r\n                    Div(Class: list-group-item){\r\n\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\tLabel(For: name){\r\n\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(name))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\t\t\tInput(Class: form-control, Type: text, Name: name)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n                        Div(Class: row df f-valign){\r\n\t\t\t\t\t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\tLabel(For: conditions){\r\n\t\t\t\t\t\t\t\t\tSpan(Body: Conditions)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\t\t\tInput(Class: form-control, Type: text, Name: conditions)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n                    \r\n\t\t\t\t\t\t\r\n                    Div(Class: panel-footer clearfix){\r\n                        Div(Class: pull-right){\r\n\t\t\t\t\t\t\tButton(Body: Add, Class: btn btn-primary, Page: applications_list, Contract: NewApplication, Params: \"Name=Val(name),Conditions=Val(conditions)\")\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        Div(Class: col-md-3)\r\n    }\r\n}"
        },
        {
            "Name": "applications_list",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "admin_menu",
            "Value": "Div(Class: content-wrapper){\n\n\tSetTitle($applications$)\n\tDiv(breadcrumb){\n\t\tSpan(Class: text-muted, Body: $applications$)\n\t}\n\n    If(GetVar(isSearch) == 1){\n        SetVar(Name: v_Where, Value: \"name='#v_Search#' and delete=0\")\n    }.Else{\n        SetVar(Name: v_Where, Value: \"delete=0\")\n        SetVar(Name: v_Search, Value: \"\")\n    }\n\n    DBFind(applications, src_applications).Where(#v_Where#).Order(id desc).Custom(custom_actions){\n\t\tSpan(){\n\t\t\tButton(Class: btn btn-primary, Body: Em(Class: fa fa-eye), Page: application_pages, PageParams: \"application_id=#id#\")\n            Button(Class: btn btn-primary, Body: Em(Class: fa fa-edit), Page: application_edit, PageParams: \"id=#id#\")\n\t\t\tButton(Class: btn btn-danger, Body: Em(Class: fa fa-trash), Contract: DeleteApplication, Params: \"ApplicationId=#id#\", Page: applications_list)\n\t\t}\n\t}\n\n    Div(Class: panel panel-primary md-8){\n\t\tDiv(Class: panel-heading, Body: $applications$)\n        Form(){\n            Div(Class: list-group-item){\n                Div(Class: row df f-valign){\n                    Div(Class: col-md-1 mt-sm text-right){\n                        Label(For: Search){\n                            Span(Body: LangRes(name))\n                        }\n                    }\n                    Div(Class: col-md-11 mc-sm){\n                        Div(Class: input-group){\n                            Input(Class: form-control, Type: text, Name: Search, Value: #v_Search#)\n                            Div(Class: input-group-btn){\n                                Button(Body: Em(Class: fa fa-search), Class: btn btn-default, Page: applications_list, PageParams: \"isSearch=1,v_Search=Val(Search)\")\n                            }\n                        }\n                    }\n                }  \n            }\n            Div(Class: list-group-item){ \n                Table(Source: src_applications, Columns: \"$name$=name,Conditions=conditions,=custom_actions\").Style(\"tr  > *:first-child {padding-left:0px;} tr  > *:last-child {text-align:right; padding-right:0px;}\")\n                If(GetVar(isSearch) == 1){\n                    Div(Class: text-center){  \n                        Button(Body: $view_all$, Class: btn btn-primary, Page: applications_list, PageParams: \"isSearch=0\")\n                    }\n                }\n            }\n\t\t\tDiv(Class: panel-footer clearfix){\n\t\t\t\tDiv(Class: pull-right){\n\t\t\t\t\tButton(Body: Create Application, Class: btn btn-primary, Page: application_create)\n\t\t\t\t}\n\t\t\t}\n        }       \n    }\n\tButton(Body: $deleted_applications$ Em(Class: fa fa-trash), Class: btn btn-primary, Page: applications_deleted)\n\n}"
        }
    ],
    "blocks": [],
    "menus": [
        {
            "Name": "application_menu",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "MenuItem(Title:$pages$, Page:application_pages, Params: \"application_id=#application_id#\", Icon:\"icon icon-screen-desktop\")\r\nMenuItem(Title:$blocks$, Page:application_blocks, Params: \"application_id=#application_id#\", Icon:\"fa fa-th\")\r\nMenuItem(Title:$menus$, Page:application_menus, Params: \"application_id=#application_id#\", Icon:\"icon icon-menu\")\r\nMenuItem(Title:$smart_contracts$, Page:application_contracts, Params: \"application_id=#application_id#\", Icon:\"icon icon-briefcase\")\r\nMenuItem(Title:$binary$, Page:application_binary, Params: \"application_id=#application_id#\", Icon:\"fa fa-file\")\r\nMenuItem(Title:$params$, Page:application_params, Params: \"application_id=#application_id#\", Icon:\"icon icon-settings\")"
        },
        {
            "Name": "admin_menu",
            "Conditions": "true",
            "Value": "MenuItem(\n    Icon: \"icon-screen-desktop\",\n    Page: \"interface\",\n    Title: \"Interface\"\n)\nMenuItem(\n    Icon: \"icon-docs\",\n    Page: \"tables\",\n    Title: \"Tables\"\n)\nMenuItem(\n    Icon: \"icon-briefcase\",\n    Page: \"contracts\",\n    Title: \"Smart Contracts\"\n)\nMenuItem(\n    Icon: \"icon-settings\",\n    Page: \"parameters\",\n    Title: \"Ecosystem parameters\"\n)\nMenuItem(\n    Icon: \"icon-globe\",\n    Page: \"languages\",\n    Title: \"Language resources\"\n)\nMenuItem(\n    Icon: \"icon-cloud-upload\",\n    Page: \"import\",\n    Title: \"Import\"\n)\nMenuItem(\n    Icon: \"icon-cloud-download\",\n    Page: \"export\",\n    Title: \"Export\"\n)\nMenuItem(\n    Icon: \"fa fa-cubes\",\n    Page: \"applications_list\",\n    Title: $applications$\n)\n\nIf(\"#key_id#\" == EcosysParam(\"founder_account\")){\n    MenuItem(\n        Icon: \"icon-lock\",\n        Page: \"vde\",\n        Title: \"Dedicated Ecosystem\"\n    )\n}"
        }
    ],
    "parameters": [],
    "languages": [
        {
            "Name": "smart_contracts",
            "Trans": "{\"ru\":\"Смарт-Контракты\",\"en\":\"Smart Contracts\"}",
            "Conditions": ""
        },
        {
            "Name": "binary",
            "Trans": "{\"ru\":\"Двоичные данные\",\"en\":\"Binary Data\"}",
            "Conditions": ""
        },
        {
            "Name": "deleted_applications",
            "Trans": "{\"ru\":\"Удалённые приложения\",\"en\":\"Deleted Applications\"}",
            "Conditions": ""
        },
        {
            "Name": "menus",
            "Trans": "{\"ru\":\"Меню\",\"en\":\"Menus\"}",
            "Conditions": ""
        },
        {
            "Name": "blocks",
            "Trans": "{\"ru\":\"Блоки\",\"en\":\"Blocks\"}",
            "Conditions": ""
        },
        {
            "Name": "pages",
            "Trans": "{\"ru\":\"Страницы\",\"en\":\"Pages\"}",
            "Conditions": ""
        },
        {
            "Name": "application",
            "Trans": "{\"ru\":\"Приложение\",\"en\":\"Application\"}",
            "Conditions": ""
        },
        {
            "Name": "applications",
            "Trans": "{\"ru\":\"Приложения\",\"en\":\"Applications\"}",
            "Conditions": ""
        }
    ],
    "contracts": [
        {
            "Name": "savetabltest",
            "Value": "contract savetabltest \n{\n    data \n    {\n        TableName string\n        Id array \n        Shareholding array \n        Insert_con string\n        Update_con string\n        New_column_con string\n        \n    }\n\n    conditions \n    {   var i,len,lenshar int\n        var res,columns string\n        len = Len($Id)\n        lenshar = Len($Shareholding)\n\t\twhile i < len {\n            if (i + 1 == len){\n                res = res + Sprintf(`{\"name\":%q,\"type\":%q,\"conditions\":\"true\"}`,$Id[i],$Shareholding[i])\n                i = i + 1\n            }\n            else{\n            res = res + Sprintf(`{\"name\":%q,\"type\":%q,\"conditions\":\"true\"},`,$Id[i],$Shareholding[i])\n            i = i + 1\n            }\n\t\t}\n        columns = Sprintf(\"[\"+\"%v\"+\"]\", res)\n        \n        var permissions string\n        permissions = Sprintf(`{\"insert\":%q,\"update\":%q,\"new_column\":%q}`,$Insert_con,$Update_con,$New_column_con)\n\n        info(columns)\n        \n    }\n\n    action \n    {\n        var i,len,lenshar int\n        var res,columns string\n        len = Len($Id)\n        lenshar = Len($Shareholding)\n\t\twhile i < len {\n            if (i + 1 == len){\n                res = res + Sprintf(`{\"name\":%q,\"type\":%q,\"conditions\":\"true\"}`,$Id[i],$Shareholding[i])\n                i = i + 1\n            }\n            else{\n            res = res + Sprintf(`{\"name\":%q,\"type\":%q,\"conditions\":\"true\"},`,$Id[i],$Shareholding[i])\n            i = i + 1\n            }\n\t\t}\n        columns = Sprintf(\"[\"+\"%v\"+\"]\", res)\n        \n        var permissions string\n        permissions = Sprintf(`{\"insert\":%q,\"update\":%q,\"new_column\":%q}`,$Insert_con,$Update_con,$New_column_con)\n\n        //NewTable(\"Name,Columns,Permissions\",$TableName,columns,permissions)\n    }\n}",
            "Conditions": "true"
        },
        {
            "Name": "testcol",
            "Value": "contract testcol \n{\n    data \n    {\n        application_id int\n    }\n\n    conditions \n    {\n\n    }\n\n    action {\n         DBInsert(\"tabltypes\", \"application_id,addcol\",$application_id,\"\")\n    }\n}",
            "Conditions": "true"
        },
        {
            "Name": "delcol",
            "Value": "contract delcol {\n    data {\n        Id int\n        application_id int\n    }\n\n    conditions {\n       \n    }\n\n    action {\n        DBUpdate(\"tabltypes\", $Id, \"col_status\",1)\n    }\n}",
            "Conditions": "true"
        },
        {
            "Name": "NewAppParameter",
            "Value": "contract NewAppParameter {\n\t\tdata {\n\t\t\tName string\n\t\t\tValue string\n\t\t\tConditions string\n\t\t\tApp_id int\n\t\t}\n\t\tconditions {\n\t\t\tValidateCondition($Conditions, $ecosystem_id)\n\n\t\t\tvar row map\n\t\t\trow = DBRow(\"appparam\").Columns(\"id\").Where(\"name = ?\", $Name)\n\n\t\t\tif row {\n\t\t\t\twarning Sprintf( \"Parameter %s already exists\", $Name)\n\t\t\t}\n\t\t}\n\t\taction {\n\t\t\tDBInsert(\"appparam\", \"app_id,name,value,conditions\",$App_id,$Name, $Value, $Conditions )\n\t\t}\n\t}",
            "Conditions": "true"
        },
        {
            "Name": "EditAppParameter",
            "Value": "contract EditAppParameter {\n\t\tdata {\n\t\t\tId int\n\t\t\tValue string\n\t\t\tConditions string\n\t\t}\n\t\tconditions {\n\t\t\tRowConditions(\"appparam\", $Id)\n\t\t\tValidateCondition($Conditions, $ecosystem_id)\n\t\t}\n\t\taction {\n\t\t\tDBUpdate(\"appparam\", $Id, \"value,conditions\", $Value, $Conditions )\n\t\t}\n\t}",
            "Conditions": "true"
        },
        {
            "Name": "RestoreApplication",
            "Value": "contract RestoreApplication {\n    data {\n        ApplicationId int\n    }\n\n    conditions {\n    }\n\n    action {\n        DBUpdate(\"applications\", $ApplicationId, \"delete\", 0)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "EditApplication",
            "Value": "contract EditApplication {\n    data {\n        Id int\n        Name string\n        Conditions string\n    }\n\n    conditions {\n        ValidateCondition($Conditions, $ecosystem_id)\n    }\n\n    action {\n        DBUpdate(\"applications\", $Id, \"name,conditions\", $Name, $Conditions)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "DeleteApplication",
            "Value": "contract DeleteApplication {\n    data {\n        ApplicationId int\n    }\n\n    conditions {\n    }\n\n    action {\n        DBUpdate(\"applications\", $ApplicationId, \"delete\", 1)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "NewApplication",
            "Value": "contract NewApplication {\n    data {\n        Name string\n        Conditions string\n    }\n\n    conditions {\n        ValidateCondition($Conditions, $ecosystem_id)\n    }\n\n    action {\n        DBInsert(\"applications\", \"name,conditions\", $Name, $Conditions)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        }
    ],
    "tables": [
        {
            "Name": "applications",
            "Columns": "[{\"name\":\"delete\",\"type\":\"number\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"conditions\",\"type\":\"varchar\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"icon\",\"type\":\"bytea\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"name\",\"type\":\"varchar\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"}]",
            "Permissions": "{\"insert\":\"ContractConditions(\\\"MainCondition\\\")\",\"update\":\"ContractConditions(\\\"MainCondition\\\")\",\"new_column\":\"ContractConditions(\\\"MainCondition\\\")\"}"
        },
        {
            "Name": "appparam",
            "Columns": "[{\"name\":\"name\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"value\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"app_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"conditions\",\"type\":\"text\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\":\"ContractConditions(\\\"MainCondition\\\")\",\"update\":\"ContractConditions(\\\"MainCondition\\\")\",\"new_column\":\"ContractConditions(\\\"MainCondition\\\")\"}"
        },
        {
            "Name": "static",
            "Columns": "[{\"name\":\"data\",\"type\":\"bytea\",\"conditions\":\"true\"},{\"name\":\"name\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"app_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"member_id\",\"type\":\"number\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\":\"ContractConditions(\\\"MainCondition\\\")\",\"update\":\"ContractConditions(\\\"MainCondition\\\")\",\"new_column\":\"ContractConditions(\\\"MainCondition\\\")\"}"
        }
    ],
    "data": []
}