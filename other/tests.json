{
    "blocks": [],
    "contracts": [
        {
            "Name": "tests_JsonOperationDB",
            "Value": "contract tests_JsonOperationDB {\n    data{}\n    \n    action {\n        var TABLE string\n        TABLE = \"tests\"\n        var flag map\n        flag[\"insert\"] = \"ok\"\n        var id int\n        id = DBInsert(TABLE, \"json\", flag)\n        \n        flag[\"update\"] = \"ok\"\n        DBUpdate(TABLE, id, \"json\", flag)\n        \n        var found map\n        found = DBFind(TABLE).Where(\"id=? and json->update='ok'\", id).Row()\n        flag[\"found\"] = \"ok\"\n        DBUpdate(TABLE, Int(found[\"id\"]), \"json\", flag)\n        \n        var result map\n        result = DBFind(TABLE).Where(\"id=?\", found[\"id\"]).Row()\n        \n        if result[\"json\"] == `{\"found\": \"ok\", \"insert\": \"ok\", \"update\": \"ok\"}`{\n            $result = true\n        }else{\n            $result = false\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "tests_Run",
            "Value": "contract tests_Run {\n    data{\n        Date string \"date\"\n    }\n    conditions {\n        var tests array\n        tests[0] = \"tests_JsonOperationDB\"\n        $tests = tests\n    }\n    action {\n        var i int\n        while i < Len($tests) {\n            var success bool\n            var params map\n            success = CallContract($tests[i], params)\n            if success {\n                DBInsert(\"tests\", \"name,date,result\", $tests[i], $Date, \"ok\")\n            }else{\n                DBInsert(\"tests\", \"name,date,result\", $tests[i], $Date, \"fail\")\n            }\n            i=i+1\n        }\n        \n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        }
    ],
    "data": [],
    "languages": [],
    "menus": [
        {
            "Name": "default_menu",
            "Value": "MenuItem(Title:tests, Page:tests, Icon:\"fa fa-edit\")",
            "Conditions": "ContractAccess(\"@1EditMenu\")"
        }
    ],
    "pages": [
        {
            "Name": "tests",
            "Value": "SetVar(now, Now(\"YYYY-MM-DD HH:MI:SS\"))\nDiv(content-wrapper){\n    Div(row){\n        Div(col-lg-10 col-sm-offset-1 col-lg-8 col-lg-offset-2){\n            Form(panel panel-default){\n                Div(panel-heading text-right){\n                    Button(Body: Run contracts tests, Contract: tests_Run, Class: btn btn-primary, Page: tests, PageParams: \"date=#now#\", Params: \"Date=#now#\")\n                }\n                Div(panel-body){\n                    If(GetVar(date)){\n                        Div(h3){Contract operation tests, DateTime(#date#)}\n                        DBFind(Name: tests, Source: src).Where(\"date='#date#'\").Order(\"id desc\")\n                        ForList(src){\n                            If(#result#==\"fail\"){\n                                SetVar(hl, text-danger)\n                            }.Else{\n                                SetVar(hl, text-success)\n                            }\n                            Div(form-group row #hl#){\n                                Div(col-sm-6){#name#}\n                                Div(col-sm-1){#result#}\n                            }\n                        }\n                    }\n                    Div(h3){Page operation tests, DateTime(#now#)}\n                    Div(form-group){\n                        If(){\n                            SetVar(t1_fail, text-danger)\n                        }.Else{\n                            SetVar(t1_ok, text-success)\n                        }\n                        Div(row #t1_ok# #t1_fail#){\n                            Div(col-sm-6){\"normal If\"}\n                            Div(col-sm-1){\n                                If(GetVar(t1_fail)){\n                                    fail\n                                }.Else{\n                                    ok\n                                }\n                            }\n                        }\n                    }\n                    Div(form-group){\n                        SetVar(\"Condition1\", 1).(\"Condition2\", 0.3)\n                        If(And(GetVar(\"Condition2\") == 0.3, And(GetVar(\"Condition1\") == 1, Or(GetVar(\"Condition2\") == 0, GetVar(\"Condition1\") == 0)))){\n                            SetVar(t2_fail, text-danger)\n                        }.Else{\n                            SetVar(t2_ok, text-success)\n                        }\n                        Div(row #t2_ok# #t2_fail#){\n                            Div(col-sm-6){\"complex If, And, Or, GetVar with vars\"}\n                            Div(col-sm-1){\n                                If(GetVar(t2_fail)){\n                                    fail\n                                }.Else{\n                                    ok\n                                }\n                            }\n                        }\n                    }\n                    Div(form-group){\n                        SetVar(\"Condition1\", 1).(\"Condition2\", 0.3)\n                        If(And(0.3 == 0.3, And(1 == 1, Or(0.3 == 0, 1 == 0)))){\n                            SetVar(t3_fail, text-danger)\n                        }.Else{\n                            SetVar(t3_ok, text-success)\n                        }\n                        Div(row #t3_ok# #t3_fail#){\n                            Div(col-sm-6){\"complex If, And, Or, GetVar with values\"}\n                            Div(col-sm-1){\n                                If(GetVar(t3_fail)){\n                                    fail\n                                }.Else{\n                                    ok\n                                }\n                            }\n                        }\n                    }\n                    Div(form-group){\n                        SetVar(\"Condition3\", 1)\n                        If(#Condition3# == 2){\n                            1 SetVar(t4_fail, text-danger)\n                        }.ElseIf(#Condition3# == 1){\n                            SetVar(\"Condition3\", 2)\n                            2 SetVar(t4_ok, text-success)\n                        }.ElseIf(#Condition3# == 2){\n                            3 SetVar(t4_fail, text-danger)\n                        }.Else{\n                            else SetVar(t4_fail, text-danger)\n                        }\n                        Div(row #t4_ok# #t4_fail#){\n                            Div(col-sm-6){\"a. If ElseIf Else\"}\n                            Div(col-sm-1){\n                                If(GetVar(t4_fail)){\n                                    fail\n                                }.Else{\n                                    ok\n                                }\n                            }\n                        }\n                    }\n                    Div(form-group){\n                        SetVar(\"Condition4\", 1)\n                        If(GetVar(Condition4) == 2){\n                            1 SetVar(t5_fail, text-danger)\n                        }.ElseIf(GetVar(Condition4) == 1){\n                            SetVar(\"Condition4\", 2)\n                            2 SetVar(t5_ok, text-success)\n                        }.ElseIf(GetVar(Condition4) == 2){\n                            3 SetVar(t5_fail, text-danger)\n                        }.Else{\n                            else SetVar(t5_fail, text-danger)\n                        }\n                        Div(row #t5_ok# #t5_fail#){\n                            Div(col-sm-6){\"b. If ElseIf Else with GetVar\"}\n                            Div(col-sm-1){\n                                If(GetVar(t5_fail)){\n                                    fail\n                                }.Else{\n                                    ok\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Menu": "default_menu"
        }
    ],
    "parameters": [],
    "tables": [
        {
            "Name": "tests",
            "Columns": "[\n    {\n        \"name\": \"json\",\n        \"type\": \"json\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"name\",\n        \"type\": \"varchar\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"date\",\n        \"type\": \"datetime\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"result\",\n        \"type\": \"varchar\",\n        \"conditions\": \"true\"\n    }\n]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"
        }
    ]
}