{
    "blocks": [],
    "contracts": [
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract tests_DecodeBase64String {\n    data {}\n    action {\n        var ENCODED, cleaned, decoded string\n        ENCODED = \"data:;base64,dGVzdCBzdHJpbmc=\"\n        cleaned = Replace(ENCODED, \"data:;base64,\", \"\")\n        decoded = DecodeBase64(cleaned)\n        $result = decoded == \"test string\"\n    }\n}\n",
            "Name": "tests_DecodeBase64String"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract tests_IfAutocast {\n    conditions {\n        var stringFloat, stringInt, intFloat bool\n        stringFloat = \"100\" == 100.0 && !(\"100\" != 100.0 || \"100\" < 90.2 || \"100\" > 200.2)\n        stringInt = \"100\" == 100 && !(\"100\" != 100 || \"100\" < 90 || \"100\" > 200)\n        intFloat = !(100 != 100.0 || 100 < 99.9 || 100 > 100.1)\n        $result = stringFloat && stringInt && intFloat       \n    }\n}",
            "Name": "tests_IfAutocast"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract tests_JsonOperationDB {\n    data{}\n    \n    action {\n        var TABLE string\n        TABLE = \"tests\"\n        var flag map\n        flag[\"insert\"] = \"ok\"\n        var id int\n        id = DBInsert(TABLE, \"json\", flag)\n        \n        flag[\"update\"] = \"ok\"\n        DBUpdate(TABLE, id, \"json\", flag)\n        \n        var found map\n        found = DBFind(TABLE).Where(\"id=? and json->update='ok'\", id).Row()\n        flag[\"found\"] = \"ok\"\n        DBUpdate(TABLE, Int(found[\"id\"]), \"json\", flag)\n        \n        var result map\n        result = DBFind(TABLE).Where(\"id=?\", found[\"id\"]).Row()\n        \n        if result[\"json\"] == `{\"found\": \"ok\", \"insert\": \"ok\", \"update\": \"ok\"}`{\n            $result = true\n        }else{\n            $result = false\n        }\n    }\n}",
            "Name": "tests_JsonOperationDB"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract tests_LongStringToInt {\n    data{}\n    \n    action {\n        var numStr string\n        numStr = \"123456789101112131415161718192021222324252627282930\"\n        Println(\"numStr\", Sprintf(\"%v\", numStr))\n        var numInt int\n        numInt = Int(numStr)\n        Println(\"numInt\", Sprintf(\"%v\", numInt))\n        if Sprintf(\"%v\", numStr) == Sprintf(\"%v\", numInt) {\n            $result = true\n        }else{\n            $result = false\n        }\n    }\n}",
            "Name": "tests_LongStringToInt"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract tests_Run {\n    data{\n        Date string \"date\"\n    }\n    conditions {\n        var tests array\n        tests[0] = \"tests_JsonOperationDB\"\n        tests[1] = \"tests_IfAutocast\"\n        tests[2] = \"tests_DecodeBase64String\"\n        tests[3] = \"tests_LongStringToInt\"\n        $tests = tests\n    }\n    action {\n        var i int\n        while i < Len($tests) {\n            var result bool\n            var params map\n            result = CallContract($tests[i], params)\n            DBInsert(\"tests\", \"name,date,result\", $tests[i], $Date, Str(result))\n            i=i+1\n        }\n        \n    }\n}",
            "Name": "tests_Run"
        }
    ],
    "data": [],
    "languages": [],
    "menus": [
        {
            "Conditions": "ContractAccess(\"@1EditMenu\")",
            "Value": "MenuItem(Title:tests, Page:tests, Icon:\"fa fa-edit\")",
            "Name": "default_menu"
        }
    ],
    "pages": [
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "SetVar(now, Now(\"YYYY-MM-DD HH:MI:SS\"))\nDiv(content-wrapper){\n    Div(row){\n        Div(col-sm-10 col-sm-offset-1 col-lg-8 col-lg-offset-2){\n            Form(panel panel-default){\n                Div(panel-heading text-right){\n                    Button(Body: Run contracts tests, Contract: tests_Run, Class: btn btn-primary, Page: tests, PageParams: \"date=#now#\", Params: \"Date=#now#\")\n                }\n                Div(panel-body){\n                    If(GetVar(date)){\n                        Div(h3){Contract operation tests, DateTime(#date#)}\n                        DBFind(Name: tests, Source: src).Where(\"date='#date#'\").Order(\"id desc\")\n                        Div(form-group row){\n                            Div(col-sm-2 text-center){details}\n                            Div(col-sm-10){\n                                Div(col-sm-10 text-center){case}\n                                Div(col-sm-2){result}\n                            }\n                        }\n                        ForList(src){\n                            If(#result#==\"false\"){\n                                SetVar(hl, text-danger)\n                            }.Else{\n                                SetVar(hl, text-success)\n                            }\n                            Div(form-group row #hl#){\n                                Div(col-sm-2 text-center){}\n                                Div(col-sm-10){\n                                    Div(col-sm-10){\n                                        #name#\n                                    }\n                                    Div(col-sm-2){#result#}\n                                }\n                            }\n                        }\n                    }\n                    \n                    \n                    \n                    Div(h3){Page operation tests, DateTime(#now#)}\n                    SetVar(false, false).(true, true)\n                    Div(form-group row){\n                        Div(col-sm-2 text-center){details}\n                        Div(col-sm-10){\n                            Div(col-sm-10 text-center){case}\n                            Div(col-sm-2){result}\n                        }\n                    }\n                    Div(form-group row){\n                        Div(col-sm-2 text-muted text-center){\n                            If(){\n                                SetVar(t1_class, text-danger)\n                            }.Else{\n                                SetVar(t1_class, text-success)\n                            }\n                        }\n                        Div(col-sm-10 #t1_class#){\n                            Div(col-sm-10){\"normal If\"}\n                            Div(col-sm-2){\n                                If(#t1_class#==\"text-danger\"){#false#}.Else{#true#}\n                            }\n                        }\n                    }\n                    Div(form-group row){\n                        Div(col-sm-2 text-muted text-center){\n                            SetVar(\"Condition1\", 1).(\"Condition2\", 0.3)\n                            If(And(GetVar(\"Condition2\") == 0.3, And(GetVar(\"Condition1\") == 1, Or(GetVar(\"Condition2\") == 0, GetVar(\"Condition1\") == 0)))){\n                                SetVar(t2_class, text-danger)\n                            }.Else{\n                                SetVar(t2_class, text-success)\n                            }\n                        }\n                        Div(col-sm-10 #t2_class#){\n                            Div(col-sm-10){\"complex If, And, Or with GetVars\"}\n                            Div(col-sm-2){\n                                If(#t2_class#==\"text-danger\"){#false#}.Else{#true#}\n                            }\n                        }\n                    }\n                    Div(form-group row){\n                        Div(col-sm-2 text-muted text-center){\n                            SetVar(\"Condition1\", 1).(\"Condition2\", 0.3)\n                            If(And(0.3 == 0.3, And(1 == 1, Or(0.3 == 0, 1 == 0)))){\n                                SetVar(t3_class, text-danger)\n                            }.Else{\n                                SetVar(t3_class, text-success)\n                            }\n                        }\n                        Div(col-sm-10 #t3_class#){\n                            Div(col-sm-10){\"complex If, And, Or with values\"}\n                            Div(col-sm-2){\n                                If(#t3_class#==\"text-danger\"){#false#}.Else{#true#}\n                            }\n                        }\n                    }\n                    Div(form-group row){\n                        Div(col-sm-2 text-muted text-center){\n                            SetVar(\"Condition3\", 1)\n                            If(#Condition3# == 2){\n                                1 SetVar(t4_class, text-danger)\n                            }.ElseIf(#Condition3# == 1){\n                                SetVar(\"Condition3\", 2)\n                                2 SetVar(t4_class, text-success)\n                            }.ElseIf(#Condition3# == 2){\n                                3 SetVar(t4_class, text-danger)\n                            }.Else{\n                                else SetVar(t4_class, text-danger)\n                            }\n                        }\n                        Div(col-sm-10 #t4_class#){\n                            Div(col-sm-10){\"If: reset condition\"}\n                            Div(col-sm-2){\n                                If(#t4_class#==\"text-danger\"){#false#}.Else{#true#}\n                            }\n                        }\n                    }\n                    Div(form-group row){\n                        Div(col-sm-2 text-muted text-center){\n                            SetVar(\"Condition4\", 1)\n                            If(GetVar(Condition4) == 2){\n                                1 SetVar(t5_class, text-danger)\n                            }.ElseIf(GetVar(Condition4) == 1){\n                                SetVar(\"Condition4\", 2)\n                                2 SetVar(t5_class, text-success)\n                            }.ElseIf(GetVar(Condition4) == 2){\n                                3 SetVar(t5_class, text-danger)\n                            }.Else{\n                                else SetVar(t5_class, text-danger)\n                            }\n                        }\n                        Div(col-sm-10 #t5_class#){\n                            Div(col-sm-10){\"If: reset condition with GetVar\"}\n                            Div(col-sm-2){\n                                If(#t5_class#==\"text-danger\"){#false#}.Else{#true#}\n                            }\n                        }\n                    }\n                    Div(form-group row){\n                        Div(col-sm-2 text-muted text-center){\n                            SetVar(coltype, GetColumnType(members, member_name))\n                            SetVar(colnone, GetColumnType(none, none))\n                            SetVar(colempty, GetColumnType())\n                            If(Or(#coltype#!=\"varchar\",#colnone#>0,#colempty#>0)){\n                                SetVar(t6_class, text-danger)\n                            }.Else{\n                                SetVar(t6_class, text-success)\n                            }\n                        }\n                        Div(col-sm-10 #t6_class#){\n                            Div(col-sm-10){\"GetColumnType\"}\n                            Div(col-sm-2){\n                                If(#t6_class#==\"text-danger\"){#false#}.Else{#true#}\n                            }\n                        }\n                    }\n                    Div(form-group row){\n                        Div(col-sm-2 text-muted text-center){\n                            DBFind(parameters, src_par).Columns(\"id\").Order(id).Where(\"id >= 1 and id <= 3\").Count(count)\n                            If(#count#==3){\n                                SetVar(t7_class, text-success)\n                            }.Else{\n                                SetVar(t7_class, text-danger)\n                            }\n                        }\n                        Div(col-sm-10 #t7_class#){\n                            Div(col-sm-10){ DBFind: Count }\n                            Div(col-sm-2){\n                                If(#t7_class#==\"text-danger\"){#false#}.Else{#true#}\n                            }\n                        }\n                    }\n                    Div(form-group row){\n                        Div(col-sm-2 text-muted text-center){\n                            SetVar(where)\n                            DBFind(contracts, src).Columns(id).Order(id).Limit(3).Custom(a){SetVar(where, #where# #id#)}\n                            If(#where#==\"1 2 3\"){\n                                SetVar(t8_class, text-success)\n                            }.Else{\n                                SetVar(t8_class, text-danger)\n                            }\n                        }\n                        Div(col-sm-10 #t8_class#){\n                            Div(col-sm-10){\"DBFind: as ForList\"}\n                            Div(col-sm-2){\n                                If(#t8_class#==\"text-danger\"){#false#}.Else{#true#}\n                            }\n                        }\n                    }\n                    Div(form-group row){\n                        Div(col-sm-2 text-muted text-center){\n                            DBFind(contracts, src).Order(id).Where(\"id=2\").Vars(t9_vars)\n                            If(#t9_vars_id#==2){\n                                SetVar(t9_class, text-success)\n                            }.Else{\n                                SetVar(t9_class, text-danger)\n                            }\n                        }\n                        Div(col-sm-10 #t9_class#){\n                            Div(col-sm-10){\"DBFind: Vars\"}\n                            Div(col-sm-2){\n                                If(#t9_class#==\"text-danger\"){#false#}.Else{#true#}\n                            }\n                        }\n                    }\n                    Div(form-group row){\n                        Div(col-sm-2 text-muted text-center){\n                            If(#isMobile#==0){\n                                Desktop\n                                SetVar(t10_class, text-success)\n                            }.Else{\n                                If(#isMobile#==1){\n                                    Mobile\n                                    SetVar(t10_class, text-success)\n                                }.Else{\n                                    SetVar(t10_class, text-danger)\n                                }\n                            }\n                        }\n                        Div(col-sm-10 #t10_class#){\n                            Div(col-sm-10){\"isMobile\"}\n                            Div(col-sm-2){\n                                If(#t10_class#==\"text-danger\"){#false#}.Else{#true#}\n                            }\n                        }\n                    }\n                    Div(form-group row){\n                        Div(col-sm-2 text-muted text-center){\n                            Range(t11_my,0,5)\n                            SetVar(t11,\"\")\n                            ForList(t11_my){SetVar(t11,#t11# #t11_my_index#=#id#)}\n                            If(#t11#==\"1=0 2=1 3=2 4=3 5=4\"){\n                                SetVar(t11_class, text-success)\n                            }.Else{\n                                SetVar(t11_class, text-danger)\n                            }\n                        }\n                        Div(col-sm-10 #t11_class#){\n                            Div(col-sm-10){\"Range: default values\"}\n                            Div(col-sm-2){\n                                If(#t11_class#==\"text-danger\"){#false#}.Else{#true#}\n                            }\n                        }\n                    }\n                    Div(form-group row){\n                        Div(col-sm-2 text-muted text-center){\n                            Range(t12_none,20,0)\n                            SetVar(t12,\"\")\n                            ForList(t12_none){t12,#t12# #none_index#=#id#}\n                            If(#t12#==\"\"){\n                                SetVar(t12_class, text-success)\n                            }.Else{\n                                SetVar(t12_class, text-danger)\n                            }\n                        }\n                        Div(col-sm-10 #t12_class#){\n                            Div(col-sm-10){\"Range: none with desc without negative step\"}\n                            Div(col-sm-2){\n                                If(#t12_class#==\"text-danger\"){#false#}.Else{#true#}\n                            }\n                        }\n                    }\n                    Div(form-group row){\n                        Div(col-sm-2 text-muted text-center){\n                            SetVar(t13,\"\").(from, 5).(to, -4).(step,-2)\n                            Range(Source: neg, From: #from#, To: #to#, Step: #step#)\n                            ForList(neg){SetVar(t13,#t13# #neg_index#=#id#)}\n                            If(#t13#==\"1=5 2=3 3=1 4=-1 5=-3\"){\n                                SetVar(t13_class, text-success)\n                            }.Else{\n                                SetVar(t13_class, text-danger)\n                            }\n                        }\n                        Div(col-sm-10 #t13_class#){\n                            Div(col-sm-10){\"Range: interpolation, desc\"}\n                            Div(col-sm-2){\n                                If(#t13_class#==\"text-danger\"){#false#}.Else{#true#}\n                            }\n                        }\n                    }\n                    Div(form-group row){\n                        Div(col-sm-2 text-muted text-center){\n                            SetVar(t14,\"\")\n                            Range(t14_zero,0,5,0)\n                            ForList(t14_zero){SetVar(t14,#t14# #zero_index#=#id#)}\n                            If(#t14#==\"\"){\n                                SetVar(t14_class, text-success)\n                            }.Else{\n                                SetVar(t14_class, text-danger)\n                            }\n                        }\n                        Div(col-sm-10 #t14_class#){\n                            Div(col-sm-10){\"Range: step zero\"}\n                            Div(col-sm-2){\n                                If(#t14_class#==\"text-danger\"){#false#}.Else{#true#}\n                            }\n                        }\n                    }\n                    Div(form-group row){\n                        Div(col-sm-2 text-muted text-center){\n                            SetVar(t15,\"\")\n                            JsonToSource(t15_none, [\"q\",\"p\"])\n                            ForList(t15_none){SetVar(t15,#t15# #key#:#value#)}\n                            If(#t15#==\"\"){\n                                SetVar(t15_class, text-success)\n                            }.Else{\n                                SetVar(t15_class, text-danger)\n                            }\n                        }\n                        Div(col-sm-10 #t15_class#){\n                            Div(col-sm-10){\"JsonToSource: bad object\"}\n                            Div(col-sm-2){\n                                If(#t15_class#==\"text-danger\"){#false#}.Else{#true#}\n                            }\n                        }\n                    }\n                    Div(form-group row){\n                        Div(col-sm-2 text-muted text-center){\n                            SetVar(t17,\"\").(t17_obj,{\"p1\":\"v1\", \"p2\":\"v2\"})\n                            JsonToSource(t17_pv, #t17_obj#)\n                            ForList(t17_pv){SetVar(t17,#t17# #key#:#value#)}\n                            If(#t17#==\"p1:v1 p2:v2\"){\n                                SetVar(t17_class, text-success)\n                            }.Else{\n                                SetVar(t17_class, text-danger)\n                            }\n                        }\n                        Div(col-sm-10 #t17_class#){\n                            Div(col-sm-10){\"JsonToSource: set from interpolation\"}\n                            Div(col-sm-2){\n                                If(#t17_class#==\"text-danger\"){#false#}.Else{#true#}\n                            }\n                        }\n                    }\n                    Div(form-group row){\n                        Div(col-sm-2 text-muted text-center){\n                            SetVar(t18,\"\")\n                            JsonToSource(t18_dat, {\"param\":\"va lue\", \"obj\": {\"sub\":\"one\"}, \"arr\":[\"one\"], \"empty\": null})\n                            ForList(t18_dat){SetVar(t18,#t18# #key#:#value#)}\n                            If(#t18#==\"arr:[one] empty: obj:map[sub:one] param:va lue\"){\n                                SetVar(t18_class, text-success)\n                            }.Else{\n                                SetVar(t18_class, text-danger)\n                            }\n                        }\n                        Div(col-sm-10 #t18_class#){\n                            Div(col-sm-10){\"JsonToSource: plane\"}\n                            Div(col-sm-2){\n                                If(#t18_class#==\"text-danger\"){#false#}.Else{#true#}\n                            }\n                        }\n                    }\n                    Div(form-group row){\n                        Div(col-sm-2 text-muted text-center){\n                            SetVar(t19, 0).(t19, \"#t19#7\").(t19_where, \"#t19_w# 1#t19#\")\n                            If(#t19_where#==\"#t19_w# 107\"){\n                                SetVar(t19_class, text-success)\n                            }.Else{\n                                SetVar(t19_class, text-danger)\n                            }\n                        }\n                        Div(col-sm-10 #t19_class#){\n                            Div(col-sm-10){\"SetVar: interpolations\"}\n                            Div(col-sm-2){\n                                If(#t19_class#==\"text-danger\"){#false#}.Else{#true#}\n                            }\n                        }\n                    }\n                    Div(form-group row){\n                        Div(col-sm-2 text-muted text-center){\n                            SetVar(t20, 1)\n                            If(#t20# < -1){\n                                SetVar(t20_class, text-danger)\n                            }.Else{\n                                SetVar(t20_class, text-success)\n                            }\n                        }\n                        Div(col-sm-10 #t20_class#){\n                            Div(col-sm-10){\"If: interpolation in condition\"}\n                            Div(col-sm-2){\n                                If(#t20_class#==\"text-danger\"){#false#}.Else{#true#}\n                            }\n                        }\n                    }\n                    Div(form-group row){\n                        Div(col-sm-2 text-muted text-center){\n                            SetVar(t21, 1)\n                            If(GetVar(t21) < -1){\n                                SetVar(t21_class, text-danger)\n                            }.Else{\n                                SetVar(t21_class, text-success)\n                            }\n                        }\n                        Div(col-sm-10 #t21_class#){\n                            Div(col-sm-10){\"If: compare GetVar condition\"}\n                            Div(col-sm-2){\n                                If(#t21_class#==\"text-danger\"){#false#}.Else{#true#}\n                            }\n                        }\n                    }\n                    Div(form-group row){\n                        Div(col-sm-2 text-muted text-center){\n                            SetVar(t22, 1)\n                            SetVar(t22_test, GetVar(t22))\n                            If(#t22_test# < -1){\n                                SetVar(t22_class, text-danger)\n                            }.Else{\n                                SetVar(t22_class, text-success)\n                            }\n                        }\n                        Div(col-sm-10 #t22_class#){\n                            Div(col-sm-10){\"If: compare interpolation condition\"}\n                            Div(col-sm-2){\n                                If(#t22_class#==\"text-danger\"){#false#}.Else{#true#}\n                            }\n                        }\n                    }\n                    Div(form-group row){\n                        Div(col-sm-2 text-muted text-center){\n                            If(){\n                                SetVar(t23_class, text-danger)\n                            }.Else{\n                                SetVar(t23_class, text-success)\n                            }\n                        }\n                        Div(col-sm-10 #t23_class#){\n                            Div(col-sm-10){\"If: initialization of variables in the false branches\"}\n                            Div(col-sm-2){\n                                If(#t23_class#==\"text-danger\"){#false#}.Else{#true#}\n                            }\n                        }\n                    }\n                    Div(form-group row){\n                        Div(col-sm-2 text-muted text-center){\n                            SetVar(t24,Calculate(Exp: 342278783438/0, Type: money)Calculate(Exp: 5.2/0, Type: float)Calculate(Exp: 7/0))\n                            If(#t24#==\"dividing by zerodividing by zerodividing by zero\"){\n                                SetVar(t24_class, text-success)\n                            }.Else{\n                                SetVar(t24_class, text-danger)\n                            }\n                        }\n                        Div(col-sm-10 #t24_class#){\n                            Div(col-sm-10){\"Calculate: dividing by zero\"}\n                            Div(col-sm-2){\n                                If(#t24_class#==\"text-danger\"){#false#}.Else{#true#}\n                            }\n                        }\n                    }\n                    Div(form-group row){\n                        Div(col-sm-2 text-muted text-center){\n                            SetVar(t25_val, 2200000034343443343430000).(t25_zero, 0)\n                            If(\"753013346318631859.1075080680647-468\"==Calculate(Exp: (342278783438+5000)*(#t25_val#-932780000), Type: money, Prec:18).(Exp: (2+50)*(#t25_zero#-9), Type: money)){\n                                SetVar(t25_class, text-success)\n                            }.Else{\n                                SetVar(t25_class, text-danger)\n                            }\n                        }\n                        Div(col-sm-10 #t25_class#){\n                            Div(col-sm-10){\"Calculate\"}\n                            Div(col-sm-2){\n                                If(#t25_class#==\"text-danger\"){#false#}.Else{#true#}\n                            }\n                        }\n                    }\n                    Div(form-group row){\n                        Div(col-sm-2 text-muted text-center){\n                            SetVar(t26_val, 100)\n                            SetVar(t26_res, `Calculate(10000-(34+5)*#t26_val#)=Calculate(\"((10+#t26_val#-45)*3.0-10)/4.5 + #t26_val#\", Prec: 4)`)\n                            If(\"6100=141.1111\"==#t26_res#){\n                                SetVar(t26_class, text-success)\n                            }.Else{\n                                SetVar(t26_class, text-danger)\n                            }\n                        }\n                        Div(col-sm-10 #t26_class#){\n                            Div(col-sm-10){\"Calculate2\"}\n                            Div(col-sm-2){\n                                If(#t26_class#==\"text-danger\"){#false#}.Else{#true#}\n                            }\n                        }\n                    }\n                    Div(form-group row){\n                        Div(col-sm-2 text-muted text-center){\n                            SetVar(t27_number, EcosysParam(Name: tests_parameters, Index: 2))\n                            #t27_number#\n                            If(#t27_number#==\"test2\"){\n                                SetVar(t27_class, text-success)\n                            }.Else{\n                                SetVar(t27_class, text-danger)\n                            }\n                        }\n                        Div(col-sm-10 #t27_class#){\n                            Div(col-sm-10){\"Get EcosysParam by number index\"}\n                            Div(col-sm-2){\n                                If(#t27_class#==\"text-danger\"){#false#}.Else{#true#}\n                            }\n                        }\n                    }\n                    Div(form-group row){\n                        Div(col-sm-2 text-muted text-center){\n                            SetVar(t28_type, 2)\n                            SetVar(t28_interpolate, EcosysParam(Name: tests_parameters, Index: #t28_type#))\n                            #t28_interpolate#\n                            If(#t28_interpolate#==\"test2\"){\n                                SetVar(t28_class, text-success)\n                            }.Else{\n                                SetVar(t28_class, text-danger)\n                            }\n                        }\n                        Div(col-sm-10 #t28_class#){\n                            Div(col-sm-10){\"Get EcosysParam by interpolation index\"}\n                            Div(col-sm-2){\n                                If(#t28_class#==\"text-danger\"){#false#}.Else{#true#}\n                            }\n                        }\n                    }\n                    Div(form-group row){\n                        Div(col-sm-2 text-muted text-center){\n                            SetVar(t29_type, 2)\n                            SetVar(t29_getvar, EcosysParam(Name: tests_parameters, Index: GetVar(t29_type)))\n                            EcosysParam(Name: tests_parameters, Index: GetVar(t29_type))\n                            #t29_getvar#\n                            If(#t29_getvar#==\"test2\"){\n                                SetVar(t29_class, text-success)\n                            }.Else{\n                                SetVar(t29_class, text-danger)\n                            }\n                        }\n                        Div(col-sm-10 #t29_class#){\n                            Div(col-sm-10){\"Get EcosysParam by GetVar index\"}\n                            Div(col-sm-2){\n                                If(#t29_class#==\"text-danger\"){#false#}.Else{#true#}\n                            }\n                        }\n                    }\n                    Div(form-group row){\n                        Div(col-sm-2 text-muted text-center){\n                            EcosysParam(Name: tests_parameters, Source: t30_src)\n                            ForList(t30_src){\n                                If(#name#==\"test1\"){\n                                    SetVar(t30, \"ok\")\n                                }\n                            }\n                            If(#t30#==\"ok\"){\n                                SetVar(t30_class, text-success)\n                            }.Else{\n                                SetVar(t30_class, text-danger)\n                            }\n                        }\n                        Div(col-sm-10 #t30_class#){\n                            Div(col-sm-10){\"Get EcosysParam as ForList source\"}\n                            Div(col-sm-2){\n                                If(#t30_class#==\"text-danger\"){#false#}.Else{#true#}\n                            }\n                        }\n                    }\n                    Div(form-group row){\n                        Div(col-sm-2 text-muted text-center){\n                            If(Address($key_id$)==\"unknown address\"){\n                                SetVar(t31_class, text-danger)\n                            }.Else{\n                                SetVar(t31_class, text-success)\n                            }\n                        }\n                        Div(col-sm-10 #t31_class#){\n                            Div(col-sm-10){\"Get Address by ID\"}\n                            Div(col-sm-2){\n                                If(#t31_class#==\"text-danger\"){#false#}.Else{#true#}\n                            }\n                        }\n                    }\n                    \n                }\n            }\n        }\n    }\n}\n",
            "Name": "tests",
            "Menu": "default_menu"
        }
    ],
    "parameters": [
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "test1,test2",
            "Name": "tests_parameters"
        }
    ],
    "tables": [
        {
            "Name": "tests",
            "Columns": "[\n    {\n        \"name\": \"json\",\n        \"type\": \"json\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"name\",\n        \"type\": \"varchar\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"date\",\n        \"type\": \"datetime\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"result\",\n        \"type\": \"varchar\",\n        \"conditions\": \"true\"\n    }\n]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"
        }
    ]
}