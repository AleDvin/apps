{
    "blocks": [
        {
            "Name": "demo_block_sendContract",
            "Value": "DBFind(parameters).Where(name='founder_account').Vars(founder)\nSetTitle($demo_title$)\nDiv(content-wrapper){\n    Div(row){\n        Div(col-lg-8 col-lg-offset-2){\n            Div(h4){LangRes(input)}\n            Div(panel panel-primary){\n                Form(panel-body input-group){\n                    Input(Name: SomeText, Type:text, Placeholder:Enter text, Value: Hello World!)\n                    Div(input-group-btn){\n                        Button(Body:$send_contract$, Contract: DemoContract, Page: demo_page_sendContract, Class:btn btn-primary)\n                    }\n                }\n            }\n            \n            \n            DBFind(Name:demo_page_table, Source: me_table_exist).Where(\"id>0\").Vars(exist)\n            If(#exist_id#>0){\n                Div(h4){LangRes(result)}\n                Div(panel panel-primary){\n                    Div(panel-body){\n                        DBFind(Name:demo_page_table, Source: my_table)\n                        Div(table-responsive){\n                            Table(Source: my_table, Columns:\"id=member_id,name=member_name,text=some_text\")\n                        }\n                    }\n                }\n            }\n            \n            Div(h4){LangRes(code)}\n            Div(panel panel-primary){\n                Div(panel-body){\n                    If(#founder_value#==#key_id#){\n                        Div(h5){\n                            DBFind(blocks).Where(name='demo_block_sendContract').Vars(page)\n                            LinkPage(Page: \"edit-block\", PageParams: \"id=#page_id#\"){ $edit_page$ }\n                        }\n                        Div(h5){\n                            LinkPage(Page: \"edit-contract\", PageParams: \"name=DemoContract\"){ $edit_contract$ }\n                        }\n                    }.Else{\n                        Div(h5 text-bold){$page_code$}\n                    }\nCode(\n    Form(panel-body input-group){\n        Input(Name: SomeText, Type:text, Placeholder:Enter text, Value: Hello World!)\n        Div(input-group-btn){\n            Button(Body:Send to Contract, Contract: DemoContract, Page: demo_page_sendContract, Class:btn btn-primary)\n        }\n    }\n    DBFind(Name:demo_page_table, Source: my_table)\n    Div(table-responsive){\n        Table(Source: my_table, Columns:\"id=member_id,name=member_name,text=some_text\")\n    }\n)\n                }\n            }\n            \n            Div(h4){LangRes(description)}\n            Div(panel panel-primary){\n                Div(panel-body){\n                    LangRes(demo_description_sendContract)\n                }\n            }\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "demo_block_sendMessage",
            "Value": "DBFind(parameters).Where(name='founder_account').Vars(founder)\nSetTitle($demo_title$)\nDiv(content-wrapper){\n    Div(row){\n        Div(col-lg-8 col-lg-offset-2){\n            Div(h4){LangRes(input)}\n            Div(panel panel-primary){\n                Form(panel-body){\n                    Div(row){\n                        Div(col-sm-6){\n                            Input(Name: SomeText, Type:text, Placeholder:Enter text, Value: Hello World!)\n                        }\n                        Div(col-sm-6){\n                            Div(input-group){\n                                DBFind(Name: members, Source: src_member)\n                                Select(Name: MemberId, Source: src_member, NameColumn: member_name, ValueColumn: id)\n                                Div(input-group-btn){\n                                    Button(Body: $send_notify$, Contract: DemoNotificationSingle, Class:btn btn-primary, Params: \"MemberId=Val(MemberId)\")\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            \n            Div(h4){LangRes(code)}\n            Div(panel panel-primary){\n                Div(panel-body){\n                    If(#founder_value#==#key_id#){\n                        Div(h5){\n                            DBFind(blocks).Where(name='demo_block_sendMessage').Vars(page)\n                            LinkPage(Page: \"edit-block\", PageParams: \"id=#page_id#\"){ $edit_page$ }\n                        }\n                    }.Else{\n                        Div(h5 text-bold){$page_code$}\n                    }\n                    Div(){\nCode(\n    Form(panel-body){\n        Div(col-sm-6){\n            Input(Name: SomeText, Type:text, Placeholder:Enter text, Value: Hello World!)\n        }\n        Div(col-sm-6){\n            Div(input-group){\n                DBFind(Name: members, Source: src_member)\n                Select(Name: MemberId, Source: src_member, NameColumn: member_name, ValueColumn: id)\n                Div(input-group-btn){\n                    Button(Body: Send Notification, Contract: DemoNotificationSingle, Class:btn btn-primary, Params: \"MemberId=Val(MemberId)\")\n                }\n            }\n        }\n    }\n)\n                    }\n                    If(#founder_value#==#key_id#){\n                        Div(h5){\n                            LinkPage(Page: \"edit-contract\", PageParams: \"name=DemoNotificationSingle\"){ $edit_contract$ }\n                        }\n                    }.Else{\n                        Div(h5 text-bold){$contract_code$}\n                        \n                    }\nCode(\n    contract DemoNotificationSingle {\n        data {\n            MemberId int\n            SomeText string\n        }\n        \n        conditions {\n            $iconName = \"fa-bell\"\n            $textHeader=\"You got a message\"\n            $pageName=\"demo_page_message\"\n            $paramsVal= Sprintf(\"SomeText=%v\", $SomeText)\n            $textBody = $SomeText\n        }\n        \n        action {\n            Notifications_Single_Send(\"MemberId,IconName,TextHeader,TextBody,PageName,ParamsVal\", $MemberId, $iconName, $textHeader, $textBody, $pageName, $paramsVal)\n        }\n    }\n)\n                }\n            }\n            \n            Div(h4){LangRes(description)}\n            Div(panel panel-primary){\n                Div(panel-body){\n                    LangRes(demo_description_sendMessage)\n                }\n            }\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "demo_block_sendPage",
            "Value": "DBFind(parameters).Where(name='founder_account').Vars(founder)\nSetTitle($demo_title$)\nDiv(content-wrapper){\n    Div(row){\n        Div(col-lg-8 col-lg-offset-2){\n            Div(h4){LangRes(input)}\n            Div(panel panel-primary){\n                Form(panel-body input-group){\n                    Input(Name: SomeText, Type:text, Placeholder:Enter text, Value: Hello World!)\n                    Div(input-group-btn){\n                        Button(Body:$send_page$, Page:demo_page_sendPage, PageParams: \"pageValue=Val(SomeText)\", Class:btn btn-primary)\n                    }\n                }\n            }\n            \n            \n            Div(h4){LangRes(result)}\n            Div(panel panel-primary){\n                Div(panel-body){\n                    pageValue : #pageValue#\n                }\n            }\n            \n            Div(h4){LangRes(code)}\n            Div(panel panel-primary){\n                Div(panel-body){\n                    If(#founder_value#==#key_id#){\n                        Div(h5){\n                            DBFind(blocks).Where(name='demo_block_sendPage').Vars(page)\n                            LinkPage(Page: \"edit-block\", PageParams: \"id=#page_id#\"){ $edit_page$ }\n                        }\n                    }.Else{\n                        Div(h5 text-bold){$page_code$}\n                    }\nCode(\n    Form(panel-body input-group){\n        Input(Name: SomeText, Type:text, Placeholder:Enter text, Value: Hello World!)\n        Div(input-group-btn){\n            Button(Body:Send to Page, Page:demo_page_sendPage, PageParams: \"pageValue=Val(SomeText)\", Class:btn btn-primary)\n        }\n    }\n)\n                }\n            }\n            \n            Div(h4){LangRes(description)}\n            Div(panel panel-primary){\n                Div(panel-body){\n                    LangRes(demo_description_sendPage)\n                }\n            }\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_registry_edit",
            "Value": "If(GetVar(LandId)){}.Else{\n    SetVar(LandId, 1)\n}\n\nIf(#admin#==1){\n    SetTitle($depart_role2$)\n}.Else{\n    SetTitle($owner$)\n}\n\nEcosysParam(Name: land_yes_no, Source: src_yes_no)\nIf(GetVar(LandId)){\n    DBFind(Name: land_registry, Source: src_entry).WhereId(#LandId#).Vars(entry)\n    DBFind(Name: members, Source: src_owners).Where(id=#entry_owner_id#).Vars(owner)\n}\nDiv(content-wrapper red){\n    Div(breadcrumb){\n        Div(){\n            LinkPage(LangRes(land_records), land_registry_records, PageParams: \"admin=#admin#\").Style(margin-right: 10px;)\n            Span(/).Style(margin-right: 10px;)\n            Span(LangRes(land_records_edit) ##LandId#, text-muted).Style(margin-right: 10px;)\n        }\n    }\n    Div(row df f-valign){\n        \n        Div(col-sm-8 col-sm-offset-2 col-lg-6 col-lg-offset-3 mt-sm text-left){\n            Div(panel panel-primary data-sweet-alert){\n                Form(){\n                    Div(Class: list-group-item text-center){\n                        Span(Class: h3, Body: LangRes(land_records_edit))\t\n                    }\n                    Div(list-group-item){\n                        Map(Hmap:300, MapType: hybrid, Value: #entry_map_coords#)\n                    }\n                    Div(list-group-item){\n                        Div(row df f-valign){\n                            Div(col-md-5 mt-sm text-right h5){\n                                Strong($owner$:)\n                            }\n                            Div(col-md-6 mt-sm text-left h5){\n                                Div(){\n                                    Span(#owner_member_name#)\n                                }\n                            }\n                        }\n                        Div(row df f-valign){\n                            Div(col-md-5 mt-sm text-right h5){\n                                Strong($area_size$)\n                                (Span(m).(2).Style(vertical-align: super;font-size:small;)):\n                            }\n                            Div(col-md-7 mt-sm text-left h5){#entry_area#}\n                        }\n                        Div(row df f-valign){\n                            Div(col-md-5 mt-sm text-right h5){\n                                Strong($address$:)\n                            }\n                            Div(col-md-7 mt-sm text-left h5){#entry_address#}\n                        }\n                        \n                        Div(row df f-valign){\n                            Div(col-md-5 mt-sm text-right h5){Strong($record_add_date$:)}\n                            Div(col-md-7 mt-sm text-left h5){DateTime(#entry_date_create#)}\n                        }\n                        \n                        Div(row df){\n                            Div(col-md-5 mt-sm text-right h5){Strong($buildings_use_class$:)}\n                            Div(col-md-7 mt-sm text-left h5){\n                                EcosysParam(Name: buildings_use_class, Index: #entry_buildings_use_class#)\n                            }\n                        }\n                        \n                        Div(row df){\n                            Div(col-md-5 mt-sm text-right h5){Strong($land_nature$:)}\n                            Div(col-md-7 mt-sm text-left h5){\n                                EcosysParam(Name: land_nature, Index: #entry_land_nature#)\n                            }\n                        }\n                    }\n\n                    \n                    Div(list-group-item){\n                        Div(row df f-valign){\n                            Div(col-md-4 mt-sm text-right h5){Strong(LangRes(consideration_value))}\n                            Div(col-md-8 mt-sm text-left h5){\n                                If(#admin#==1){\n                                    If(GetVar(entry_price)){\n                                        #entry_price#\n                                    }\n                                }.Else{\n                                    Input(Name: Price,Class: form-control input-sm, Value: #entry_price#, Type: number)\n                                }\n                            }\n                        }\n                    }\n                    \n                    Div(list-group-item){\n                        Div(row df f-valign){\n                            Div(col-md-4 mt-sm text-right h5){Strong(LangRes(encumbrance_certificate))}\n                            Div(col-md-8 mt-sm text-left h5){\n                                If(#admin#==1){\n                                    Div(form-inline){\n                                        RadioGroup(Name: EncumbranceCertificate,Class: form-control, Value: #entry_encumbrance_certificate#, Source: src_yes_no, ValueColumn: id, NameColumn: name)\n                                    }\n                                }.Else{\n                                    If(GetVar(entry_encumbrance_certificate)){\n                                        Span(EcosysParam(Name: land_yes_no, Index: #entry_encumbrance_certificate#))\n                                    }.Else{\n                                        LangRes(undefined)\n                                    }\n                                }\n                            }\n                        }\n                        Div(row df f-valign){\n                            Div(col-md-4 mt-sm text-right h5){Strong(LangRes(legal_status))}\n                            Div(col-md-8 mt-sm text-left h5){\n                                If(#admin#==1){\n                                    Div(form-inline){\n                                        RadioGroup(Name: LegalStatus,Class: form-control, Value: #entry_legal_status#, Source: src_yes_no, ValueColumn: id, NameColumn: name)\n                                    }\n                                }.Else{\n                                    If(GetVar(entry_legal_status)){\n                                        Span(EcosysParam(Name: land_yes_no, Index: #entry_legal_status#))\n                                    }.Else{\n                                        LangRes(undefined)\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    \n                    \n                    Div(panel-footer){\n                        Div(clearfix){\n                            Div(pull-right){\n                                Input(Name: LandId, Type: hidden, Value: #LandId#)\n                                Div(btn-group){\n                                    Button(Page: land_registry_records, Body: $back$, Class: btn btn-default btn-pill-left, PageParams: \"admin=#admin#\")\n                                    \n                                    If(#admin#==1){\n                                        Button(Body: $save$, Class: btn btn-primary btn-pill-right, Contract: land_registry_UpdateAdmin, Params: \"NotificId=#notific_id#\", Page: land_registry_records)\n                                    }.Else{\n                                        Button(Body: $save$, Class: btn btn-primary btn-pill-right, Contract: land_registry_UpdateOwner, Params: \"Price=Val(Price),NotificId=#notific_id#\", Page: land_registry_records)\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_registry_records",
            "Value": "If(#isSearch#==1){\n    SetVar(v_Where, \"delete=0 and land_use=#str_search#\")\n}.Else{\n    SetVar(v_Where, \"delete=0\")\n    SetVar(Name:isSearch, Value: 0)\n}\n\nIf(#isOrder#==1){\n    SetVar(Name:v_Order, Value: \"price\")\n}.ElseIf(#isOrder#==2){\n    SetVar(Name:v_Order, Value: \"area\")\n}.ElseIf(#isOrder#==3){\n    SetVar(Name:v_Order, Value: \"price desc\")\n}.ElseIf(#isOrder#==4){\n    SetVar(Name:v_Order, Value: \"area desc\")\n}.Else{\n    SetVar(Name:v_Order, Value: \"id desc\")\n}\n\nDBFind(Name: land_registry, Source: src_land_registry).Where(#v_Where#).Order(#v_Order#).Custom(_id){\n    Span(#id#)\n}.Custom(_owner){\n    DBFind(Name: members, Source: src_members).Where(\"id=#owner_id#\").Vars(row)\n    LinkPage(Page: profile_view, PageParams: \"v_member_id=#row_id#\"){\n        Span(Class: h5 text-bold, Body: #row_member_name#)\n    }\n}.Custom(_land){\n    Span(EcosysParam(Name: land_use, Index: #land_use#))\n}.Custom(_buildings){\n    Span(EcosysParam(Name: buildings_use_class, Index: #buildings_use_class#))\n}.Custom(_area){\n    Span(#area#)\n}.Custom(_address){\n    Span(#address#)\n}.Custom(_cons){\n    Div(h6){\n        If(#price#>0){\n            Span(#price#)\n        }.Else{\n            Em(Class: fa fa-1x text-muted fa-question-circle)\n        }\n    }.Style(margin-left: 20px;)\n}.Custom(_legal){\n    Div(h6){\n        If(#legal_status#==0){\n            Em(Class: fa fa-1x text-muted fa-question-circle)\n        }\n        If(#legal_status#==1){\n            Em(Class: fa fa-1x text-success fa-check-circle)\n        }\n        If(#legal_status#==2){\n            Em(Class: fa fa-1x text-danger fa-exclamation-circle)\n        }\n    }.Style(margin-left: 20px;)\n}.Custom(_encumberance){\n    Div(h6){\n        If(#encumbrance_certificate#==0){\n            Em(Class: fa fa-1x text-muted fa-question-circle)\n        }\n        If(#encumbrance_certificate#==1){\n            Em(Class: fa fa-1x text-success fa-check-circle)\n        }\n        If(#encumbrance_certificate#==2){\n            Em(Class: fa fa-1x text-danger fa-exclamation-circle)\n        }\n    }.Style(margin-left: 20px;)\n}.Custom(_admin){\n    Div(Class: pull-right){\n        Span(){\n            Button(Page: #this#, Contract: land_registry_Delete, Params: \"LandId=#id#\", Class: btn btn-default fa fa-2x fa-trash)\n        }.Style(margin-left: 5px; margin-right: 5px;)\n        Span(){\n            Button(Page: land_registry_view, PageParams: \"LandId=#id#\", Class: btn btn-default fa fa-2x fa-eye)\n        }.Style(margin-left: 5px; margin-right: 5px;)\n    } \n}\n\nDiv(content-wrapper){\n    Div(panel panel-primary data-sweet-alert){\n\t\tForm(){\n\t\t\tDiv(list-group-item){\n\t\t\t\tDiv(row df f-valign){\n\t\t\t\t\tDiv(col-md-2 mt-sm text-center text-bold){$land_use$}\n\t\t\t\t\tDiv(col-md-7 mc-sm text-left){\n\t\t\t\t\t\tDiv(input-group){\n\t\t\t\t\t\t\tEcosysParam(Name: land_use, Source: src_land_use)\n\t\t\t\t\t\t\tSelect(Name: LandUseSelect, Source: src_land_use, Class: form-control, NameColumn: name, ValueColumn: id, Value: #str_search#)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tDiv(input-group-btn){\n\t\t\t\t\t\t\t\tButton(Page: #this#, PageParams: \"str_search=Val(LandUseSelect),isSearch=1,isOrder=#isOrder#\", Class: btn btn-default fa fa-search)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tDiv(col-md-3 mc-sm text-center){\n\t\t\t\t\t\tDiv(btn-group){\n\t\t\t\t\t\t\tSpan(){\n\t\t\t\t\t\t\t\tIf(#isOrder#==1){\n\t\t\t\t\t\t\t\t\tButton(Page: #this#, Class: btn bg-gray, PageParams: \"isOrder=3,isSearch=#isSearch#,str_search=Val(LandUseSelect)\", Body: Em(Class:fa fa-sort-numeric-asc) $price$)\n\t\t\t\t\t\t\t\t}.ElseIf(#isOrder#==3){\n\t\t\t\t\t\t\t\t\tButton(Page: #this#, Class: btn bg-gray, PageParams: \"isOrder=1,isSearch=#isSearch#,str_search=Val(LandUseSelect)\", Body: Em(Class:fa fa-sort-numeric-desc) $price$)\n\t\t\t\t\t\t\t\t}.Else{\n\t\t\t\t\t\t\t\t\tButton(Page: #this#, Class: btn bg-gray-lighter,PageParams: \"isOrder=1,isSearch=#isSearch#,str_search=Val(LandUseSelect)\", Body: $price$)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}.Style(margin-left: 5px; margin-right: 5px;)\n\t\t\t\t\t\t\tSpan(){\n\t\t\t\t\t\t\t\tIf(#isOrder#==2){\n\t\t\t\t\t\t\t\t\tButton(Page: #this#, Class: btn bg-gray, PageParams: \"isOrder=4,isSearch=#isSearch#,str_search=Val(LandUseSelect)\", Body: Em(Class:fa fa-sort-numeric-asc) $area_size$)\n\t\t\t\t\t\t\t\t}.ElseIf(#isOrder#==4){\n\t\t\t\t\t\t\t\t\tButton(Page: #this#, Class: btn bg-gray, PageParams: \"isOrder=2,isSearch=#isSearch#,str_search=Val(LandUseSelect)\", Body: Em(Class:fa fa-sort-numeric-desc) $area_size$)\n\t\t\t\t\t\t\t\t}.Else{\n\t\t\t\t\t\t\t\t\tButton(Page: #this#, Class: btn bg-gray-lighter, PageParams: \"isOrder=4,isSearch=#isSearch#,str_search=Val(LandUseSelect)\", Body: $area_size$)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}.Style(margin-left: 5px; margin-right: 5px;)\n\t\t\t\t\t\t}\n\t\t\t\t\t}.Style(display:flex;)\n\t\t\t\t}\n\t\t\t}\n\t\t\tDiv(list-group-item){\n\t\t\t\tTable(Source:src_land_registry, Columns: \"ID=_id,$owner$=_owner,$area_size$=_area,$address$=_address,$consideration_value$(INR)=_cons,$legal_status$=_legal,$encumbrance_certificate$=_encumberance,=_admin\")\n\t\t\t\tIf(#isSearch#==1){\n\t\t\t\t\tForm(text-center){\n\t\t\t\t\t\tButton(Page: #this#, PageParams:\"isSearch=0\", Class: btn btn-primary btn-oval){\n\t\t\t\t\t\t\tLangRes(view_all)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tDiv(panel-footer){\n\t\t\t\tDiv(clearfix){\n\t\t\t\t\tForm(pull-right){\n\t\t\t\t\t\tButton(Page: land_registry_add, Class: btn btn-primary, Body: $add$)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        }
    ],
    "contracts": [
        {
            "Name": "DemoContract",
            "Value": "contract DemoContract {\n    data {\n        SomeText string\n    }\n    \n    conditions {\n        $member = DBFind(\"members\").WhereId($key_id).Row()\n        if !$member {\n            info \"Member not found\"\n        }\n    }\n    action {\n        DBInsert(\"demo_page_table\", \"member_name,member_id,some_text\", $member[\"member_name\"], $member[\"id\"], $SomeText)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "Notifications_Single_Send",
            "Value": "contract Notifications_Single_Send {\n    data {\n        member_id int\n        icon_name string\n        text_header string\n        text_body string\n        page_name string\n        params_val string\n    }\n\n    conditions {\n\t\t$member_map = DBFind(\"members\").Where(\"id = $\", $member_id).Row()\n\t\t\n\t\tif ($member_map[\"id\"] == nil){\n\t\t\twarning \"Member not found\"\n\t\t}\n    }\n\n    action {\n\t\t$notification_id = DBInsert(`notifications`, `icon,header_text,body_text,page_name,notification_type,recipient_id,recipient_name,recipient_avatar,timestamp date_create,page_params`, \n\t\t\t$icon_name, $text_header, $text_body, $page_name, 1, $member_id, $member_map[\"member_name\"], $member_map[\"avatar\"], $block_time, $params_val)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "Profile_Edit",
            "Value": "contract Profile_Edit {\n    data {\n        Username string\n        Kid int \"optional\"\n    }\n    \n    conditions {\n        $id = 0\n        if $Kid == 0{\n            $Kid = $key_id\n        }\n        $member = DBFind(\"members\").Where(\"id=?\",$Kid).Row()\n        if $member {\n            $id = Int($member[\"id\"])\n        }\n    }\n    \n    action {\n        if $id != 0{\n            DBUpdate(\"members\", $id, \"member_name\", $Username)\n        }else{\n            DBInsert(\"members\", \"id,member_name\", $Kid, $Username)\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "Notifications_Single_Close",
            "Value": "contract Notifications_Single_Close {\n    data {\n\t    notific_id int\n    }\n\n    conditions {\n    }\n\n    action {\n        DBUpdate(`notifications`, $notific_id, `closed,timestamp finished_processing_time,finished_processing_id`, 1, $block_time, $key_id) \n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "DemoNotificationSingle",
            "Value": "contract DemoNotificationSingle {\n    data {\n        MemberId int\n        SomeText string\n    }\n    \n    conditions {}\n    \n    action {\n        var icon, header, body, page, params string\n        icon = \"fa-bell\"\n        header = \"You have got a message\"\n        body = $SomeText\n        page = \"demo_page_message\"\n        params = Sprintf(\"SomeText=%v\", $SomeText)\n\n        Notifications_Single_Send(\"member_id,icon_name,text_header,text_body,page_name,params_val\", $MemberId, icon, header, body, page, params)\n    }\n}\n",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "MembersAutoreg",
            "Value": "contract MembersAutoreg {\n    conditions {\n    }\n    \n    action {\n        var keys map\n        keys = DBFind(\"keys\")\n        \n        var k, i int\n        while k<Len(keys){\n            var key, key_member, member array\n            key = keys[k]\n            \n            var id int\n            id = Int(key[\"id\"])\n            key_member = DBFind(\"members\").Where(\"id=?\",id).Row()\n            if !key_member {\n                var name string\n                \n                while true{\n                    name = Sprintf(\"member_%v\", i)\n                    member = DBFind(\"members\").Where(\"member_name=?\", name).Row()\n                    if !member{\n                        break\n                    }\n                    i = i+1\n                }\n                if EcosysParam(\"founder_account\")== id{\n                    name = \"founder\"\n                }\n                Profile_Edit(\"Username,Avatar,Kid\", name, \"\", id)\n            }\n            k=k+1\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "extractLocales",
            "Value": "contract extractLocales {\n    data {\n    }\n\n    conditions {\n    }\n\n    action {\n\n        Println(\"=======================================================\")\n\n        var page_map map\n        page_map = DBFind(\"pages\").Where(\"id=$\", 25).Row()\n\n        if page_map{\n            var ln int\n            var page_code string\n            var page_code_temp string\n\n            page_code = Str(page_map[\"value\"])\n\n            page_code = Replace(page_code, \" \", \"\")\n            page_code = Replace(page_code, \"#\", \"\")\n            page_code = Replace(page_code, \".\", \"\")\n            page_code = Replace(page_code, \"-\", \"\")\n            page_code = Replace(page_code, \",\", \"\")\n            page_code = Replace(page_code, \":\", \"\")\n            page_code = Replace(page_code, \"{\", \"\")\n            page_code = Replace(page_code, \"}\", \"\")\n            page_code = Replace(page_code, \"=\", \"\")\n            page_code = Replace(page_code, `\t`, \"\")\n            page_code = Replace(page_code, \"\\n\", \"\")\n            page_code = Replace(page_code, \"\\r\", \"\")\n            page_code = Replace(page_code, `\"`, \"\")\n            page_code = Replace(page_code, \"Span(\", \"\")\n            page_code = Replace(page_code, \"Div(\", \"\")\n            page_code = Replace(page_code, \"P(\", \"\")\n\n            page_code_temp = page_code\n            ln = Size(page_code)\n            //Println(ln)\n\n            var s,f int\n            var res string\n\n            var i int\n            while(i < ln){\n\n                if (s==0){\n                    if HasPrefix(page_code_temp, \"$\") {\n                        s = i+1\n                    }\n                    if HasPrefix(page_code_temp, \"LangRes\") {\n                        s = i+8\n                    }\n                } else {\n                    if HasPrefix(page_code_temp, \"$\") {\n                        f = i-s\n                    }\n                    if HasPrefix(page_code_temp, \")\") {\n                        f = i-s\n                    }\n                }\n\n                page_code_temp = Substr(page_code_temp, 1, ln-2)\n\n                if (s>0 && f>0){\n                    res = Substr(page_code, s, f)\n                    s = 0;\n                    f = 0;\n\n                    DBInsert(\"log\", \"name\", res)\n                    //Println(res)\n                }\n\n                i = i + 1\n            }\n        }\n\n\n\n        \n\n\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_registry_Add",
            "Value": "contract land_registry_Add{\n    data{\n        OwnerId int\n        Coords string // {\"coords\":[{\"lat\":float,\"lng\":float},],\"area\": float,\"address\": string}\n        BuildingsUseClass int\n        LandNature int\n        RegistrationDate string \"optional\"\n    }\n    \n    func conditions{\n        var member map\n        member = DBFind(\"members\").Where(\"id = ?\", $OwnerId).Row()\n        if !member {\n            warning \"Member account for Owner not found\"\n        }\n        $coordsMap = JSONToMap($Coords)\n        $coordsAddress = $coordsMap[\"address\"]\n        $area = $coordsMap[\"area\"]\n        $area = Sprintf(\"%.0f\", $area)\n        \n        if !$coordsAddress {\n            info \"Please input address\"\n        }\n        if $area <= 0 {\n            info \"Please use map for input of the area coordinates\"\n        }\n    }\n    \n    func action{\n        var icon, header, body, page, params, roleParams, coords_address string\n        var closureType, landId, landUse, landLocalBody, area int\n        landId = DBInsert(\"land_registry\", \"owner_id,address,area,buildings_use_class,map_coords,land_use,timestamp date_create,delete,land_nature,land_local_body,registration_date,timestamp modification_date\", $OwnerId, $coordsAddress, $area, $BuildingsUseClass, $Coords, landUse, $block_time, 0, $LandNature, landLocalBody, $RegistrationDate, $block_time)\n        \n        DBInsert(\"land_registry_ownership\", \"step, timestamp date_creat, timestamp date_signing, lend_object_id, owner_id, owner_new_id\", -1, $block_time, $block_time, landId, $OwnerId, $OwnerId)\n        \n        icon = \"fa fa-bell-o\"\n        header = \"Department of Legal Affairs: $new_land$\"\n        body = \"$need_your_processing$\"\n        \n        var keys_map map\n        keys_map = DBFind(\"keys\").Where(\"id != ?\", $key_id).Order(\"id\").Row()\n\n        var key_for_send int\n        if keys_map{\n            key_for_send = Int(keys_map[\"id\"])\n        } else {\n            key_for_send = $key_id\n        }\n\n        //notify depart\n        params = Sprintf(\"LandId=%v,admin=1\", landId)\n        page = \"land_registry_edit\"\n        Notifications_Single_Send(\"member_id,icon_name,text_header,text_body,page_name,params_val\", key_for_send,icon,header,body,page,params)\n        \n        //notify owner\n        header = \"New Land: need price\"\n        params = Sprintf(\"LandId=%v\", landId)\n        page = \"land_registry_edit\"\n        Notifications_Single_Send(\"member_id,icon_name,text_header,text_body,page_name,params_val\", $key_id,icon,header,body,page,params)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_registry_Delete",
            "Value": "contract land_registry_Delete{\n    data{\n        LandId int\n    }\n    \n    func conditions{}\n    \n    func action{\n        DBUpdate(\"land_registry\", $LandId, \"delete\", \"1\")\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_registry_SecondRequest",
            "Value": "contract land_registry_SecondRequest{\n    data{\n        LandId int\n    }\n    \n    func action{\n        var icon, header, body, page, notifyParams, params string\n        notifyParams = \"role_id,closure_type,icon_name,text_header,text_body,page_name,params_val\"\n        icon = \"fa-bell\"\n        header = \"$new_land$\"\n        body = \"$need_your_processing$\"\n        params = Sprintf(\"LandId=%v,admin=1,second_request=1\", $LandId)\n        page = \"land_registry_edit\"\n        Notifications_Single_Send(\"member_id,icon_name,text_header,text_body,page_name,params_val\", $key_id,icon,header,body,page,params)        \n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_registry_UpdateAdmin",
            "Value": "contract land_registry_UpdateAdmin{\n    data {\n        LandId int\n        EncumbranceCertificate int\n        LegalStatus int\n        NotificId int\n    }\n    func conditions {\n        $land = DBFind(\"land_registry\").Where(\"id=?\", $LandId).Row()\n        if !$land{\n            warning \"Land not found in registry\"\n        }\n        $name = DBFind(\"members\").Where(\"id=?\", $key_id).One(\"member_name\")\n    }\n    \n    func action { \n        DBUpdate(\"land_registry\", $LandId, \"legal_status,encumbrance_certificate\", $LegalStatus, $EncumbranceCertificate)\n        Notifications_Single_Close(\"notific_id\", $NotificId)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_registry_UpdateOwner",
            "Value": "contract land_registry_UpdateOwner{\n    data{\n        LandId int\n        NotificId string \"optional\"\n        Price string\n    }\n    \n    func conditions{\n        $Price = Int($Price)\n        $NotificId = Int($NotificId)\n        var entry map\n        entry = DBFind(\"land_registry\").Where(\"id=? and owner_id=?\",$LandId, $key_id).Row()\n        if !entry{\n            info \"You cant change this Land\"\n        }\n    }\n    \n    func action{\n        DBUpdate(\"land_registry\", $LandId, \"price,timestamp modification_date\", $Price, $block_time)\n        if $NotificId > 0{\n            Notifications_Single_Close(\"notific_id\", $NotificId)\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "referendums_accept",
            "Value": "contract referendums_accept {\n    data {\n        referendum_id int\n    }\n\n    conditions {\n        $referendums_map = DBFind(\"referendums\").Where(\"id=$\", $referendum_id).Row()\n        if ($referendums_map[\"id\"] == nil) {\n            warning \"Referendum not found\"\n        }\n\n\t\t$participant_id = DBFind(\"referendums_participants\").Where(\"referendum_id=$ and member_id=$\", $referendum_id, $key_id).One(\"id\")\n        if ($participant_id != nil){\n\t\t\twarning \"You already voted\"\n\t\t}\n\n        $votes_total = Int($referendums_map[\"votes_total\"])\n        $votes_accept = Int($referendums_map[\"votes_accept\"])\n        $votes_reject = Int($referendums_map[\"votes_reject\"])\n        $percent_accept = Int($referendums_map[\"percent_accept\"])\n        $percent_reject = Int($referendums_map[\"percent_reject\"])\n    }\n\n    action {\n        $votes_total = $votes_total + 1\n        $votes_accept = $votes_accept + 1\n\n        $percent_accept = $votes_accept * 100 / $votes_total\n        $percent_reject = 100 - $percent_accept\n\n        DBUpdate(\"referendums\", $referendum_id, \"votes_total,votes_accept,votes_reject,percent_accept,percent_reject\", $votes_total, $votes_accept, $votes_reject, $percent_accept, $percent_reject)\n        DBInsert(\"referendums_participants\", \"referendum_id,member_id,decision\", $referendum_id, $key_id, 1)\n\n        var params string\n        params = \"referendum_id=\" + Str($referendum_id)\n        $notific_id = DBFind(\"notifications\").Where(\"page_name=$ and page_params=$ and recipient_id=$ and closed=$\", \"referendums_view\", params, $key_id, 0).One(\"id\")\n        if ($notific_id != nil){\n            Notifications_Single_Close(\"notific_id\", Int($notific_id))\n\t\t}\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "referendums_add",
            "Value": "contract referendums_add {\n    data {\n        referendum_name string\n        question string\n    }\n\n    conditions {}\n\n    action {\n        $referendum_id = DBInsert(`referendums`, `name,question`, $referendum_name, $question)\n\n        $ret_member = DBFind(\"members\").Where(\"id != $\", 0).Order(\"id\")\n        $i = 0\n        while($i < Len($ret_member)){\n            $vals_member = $ret_member[$i]\n            \n\t\t\tvar params string\n\t\t\tparams = \"referendum_id=\" + Str($referendum_id)\n            \n\t\t\tNotifications_Single_Send(\"member_id,icon_name,text_header,text_body,page_name,params_val\", \n\t\t\t\t\t\t\t\t$vals_member[\"id\"], \"fa-check\", \"Referendum\", $referendum_name, \"referendums_view\", params)\n\n            $i = $i + 1\n        } \n\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "referendums_reject",
            "Value": "contract referendums_reject {\n    data {\n        referendum_id int\n    }\n\n    conditions {\n        $referendums_map = DBFind(\"referendums\").Where(\"id=$\", $referendum_id).Row()\n        if ($referendums_map[\"id\"] == nil) {\n            warning \"Referendum not found\"\n        }\n\n\t\t$participant_id = DBFind(\"referendums_participants\").Where(\"referendum_id=$ and member_id=$\", $referendum_id, $key_id).One(\"id\")\n        if ($participant_id != nil){\n\t\t\twarning \"You already voted\"\n\t\t}\n\n        $votes_total = Int($referendums_map[\"votes_total\"])\n        $votes_accept = Int($referendums_map[\"votes_accept\"])\n        $votes_reject = Int($referendums_map[\"votes_reject\"])\n        $percent_accept = Int($referendums_map[\"percent_accept\"])\n        $percent_reject = Int($referendums_map[\"percent_reject\"])\n    }\n\n    action {\n        $votes_total = $votes_total + 1\n        $votes_reject = $votes_reject + 1\n\n        $percent_accept = $votes_accept * 100 / $votes_total\n        $percent_reject = 100 - $percent_accept\n\n        DBUpdate(\"referendums\", $referendum_id, \"votes_total,votes_accept,votes_reject,percent_accept,percent_reject\", $votes_total, $votes_accept, $votes_reject, $percent_accept, $percent_reject)\n        DBInsert(\"referendums_participants\", \"referendum_id,member_id,decision\", $referendum_id, $key_id, -1)\n\n        var params string\n        params = \"referendum_id=\" + Str($referendum_id)\n        $notific_id = DBFind(\"notifications\").Where(\"page_name=$ and page_params=$ and recipient_id=$ and closed=$\", \"referendums_view\", params, $key_id, 0).One(\"id\")\n        if ($notific_id != nil){\n            Notifications_Single_Close(\"notific_id\", Int($notific_id))\n\t\t}\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        }
    ],
    "data": [],
    "languages": [
        {
            "Name": "add",
            "Conditions": "",
            "Trans": "{\"en\": \"Add\", \"ru\": \"Добавить\"}"
        },
        {
            "Name": "add_new_record",
            "Conditions": "",
            "Trans": "{\"en\":\"Add new record\",\"ru\":\"Добавить новую запись\"}"
        },
        {
            "Name": "add_role",
            "Conditions": "",
            "Trans": "{\"en\": \"Add role\", \"ru\": \"Добавить роль\"}"
        },
        {
            "Name": "address",
            "Conditions": "",
            "Trans": "{\"en\":\"Address\",\"ru\":\"Адрес\"}"
        },
        {
            "Name": "applications",
            "Conditions": "",
            "Trans": "{\"en\":\"Applications\",\"ru\":\"Приложения\"}"
        },
        {
            "Name": "area_size",
            "Conditions": "",
            "Trans": "{\"en\":\"Area size\",\"ru\":\"Размер\"}"
        },
        {
            "Name": "ask_request_second",
            "Conditions": "",
            "Trans": "{\"en\":\"Do you want to send a second request?\",\"ru\":\"Вы хотите отправить повторный запрос?\"}"
        },
        {
            "Name": "attention",
            "Conditions": "",
            "Trans": "{\"en\": \"ATTENTION! The page has not received parameters and is unavailable for viewing.\", \"ru\": \"ВНИМАНИЕ! Страница не получила параметров и не доступна для просмотра.\"}"
        },
        {
            "Name": "avatar",
            "Conditions": "",
            "Trans": "{\"en\": \"Avatar\", \"ru\": \"Фото\"}"
        },
        {
            "Name": "back",
            "Conditions": "",
            "Trans": "{\"en\": \"Back\", \"ru\": \"Назад\"}"
        },
        {
            "Name": "buildings_use_class",
            "Conditions": "",
            "Trans": "{\"en\":\"Buildings use class\",\"ru\":\"Класс используемых зданий\"}"
        },
        {
            "Name": "cancel",
            "Conditions": "",
            "Trans": "{\"en\":\"Cancel\",\"ru\":\"Отмена\"}"
        },
        {
            "Name": "change",
            "Conditions": "",
            "Trans": "{\"en\": \"Change\", \"ru\": \"Изменить\"}"
        },
        {
            "Name": "close",
            "Conditions": "",
            "Trans": "{\"en\": \"Close\", \"ru\": \"Закрыть\"}"
        },
        {
            "Name": "code",
            "Conditions": "",
            "Trans": "{\"en\":\"Code\",\"ru\":\"Код\"}"
        },
        {
            "Name": "confirm",
            "Conditions": "",
            "Trans": "{\"en\":\"Confirm\",\"ru\":\"Подтвердить\"}"
        },
        {
            "Name": "consideration_value",
            "Conditions": "",
            "Trans": "{\"en\":\"Consideration value\",\"ru\":\"Справедливая стоимость\"}"
        },
        {
            "Name": "create",
            "Conditions": "",
            "Trans": "{\"en\": \"Create\", \"ru\": \"Создать\"}"
        },
        {
            "Name": "demo_sendContract",
            "Conditions": "",
            "Trans": "{\"en\":\"Send to contract\",\"ru\":\"Передача в контракт\"}"
        },
        {
            "Name": "demo_sendMessage",
            "Conditions": "",
            "Trans": "{\"en\":\"Send a text parameter to a notification\",\"ru\":\"Передача текстового параметра в оповещении\"}"
        },
        {
            "Name": "demo_sendPage",
            "Conditions": "",
            "Trans": "{\"en\":\"Send to page\",\"ru\":\"Передача на страницу\"}"
        },
        {
            "Name": "demo_title",
            "Conditions": "",
            "Trans": "{\"en\":\"Demonstration\",\"ru\":\"Демонстрация\"}"
        },
        {
            "Name": "depart_role1",
            "Conditions": "",
            "Trans": "{\"en\":\"Department of Land Resources\",\"ru\":\"Департамент земельных ресурсов\"}"
        },
        {
            "Name": "depart_role2",
            "Conditions": "",
            "Trans": "{\"en\":\"Department of Legal Affairs\",\"ru\":\"Департамент по правовым вопросам\"}"
        },
        {
            "Name": "depart_role3",
            "Conditions": "",
            "Trans": "{\"en\":\"Department of Revenue\",\"ru\":\"Департамент налогов и сборов\"}"
        },
        {
            "Name": "department_of_land_resources",
            "Conditions": "",
            "Trans": "{\"en\":\"Department of Land Resources\",\"ru\":\"Отдел земельных ресурсов\"}"
        },
        {
            "Name": "description",
            "Conditions": "",
            "Trans": "{\"en\": \"Description\", \"ru\": \"Описание\"}"
        },
        {
            "Name": "edit_contract",
            "Conditions": "",
            "Trans": "{\"en\":\"Edit contract\",\"ru\":\"Редактировать контракт\"}"
        },
        {
            "Name": "edit_page",
            "Conditions": "",
            "Trans": "{\"en\":\"Edit page\",\"ru\":\"Редактировать страницу\"}"
        },
        {
            "Name": "editing_profile",
            "Conditions": "",
            "Trans": "{\"en\": \"Editing profile\", \"ru\": \"Редактирование профиля\"}"
        },
        {
            "Name": "encumbrance_certificate",
            "Conditions": "",
            "Trans": "{\"en\":\"Encumbrance certificate\",\"ru\":\"Сертификат обременения\"}"
        },
        {
            "Name": "id",
            "Conditions": "",
            "Trans": "{\"en\": \"ID\", \"ru\": \"ID\"}"
        },
        {
            "Name": "input",
            "Conditions": "",
            "Trans": "{\"en\":\"Input\",\"ru\":\"Ввод\"}"
        },
        {
            "Name": "land_nature",
            "Conditions": "",
            "Trans": "{\"en\":\"Nature\",\"ru\":\"Тип\"}"
        },
        {
            "Name": "land_record",
            "Conditions": "",
            "Trans": "{\"en\":\"Land record\",\"ru\":\"Земельная запись\"}"
        },
        {
            "Name": "land_records",
            "Conditions": "",
            "Trans": "{\"en\":\"Land Registry\",\"ru\":\"Земельный реестр\"}"
        },
        {
            "Name": "land_records_add",
            "Conditions": "",
            "Trans": "{\"en\":\"Land Record adding\",\"ru\":\"Добавление земельной записи\"}"
        },
        {
            "Name": "land_records_edit",
            "Conditions": "",
            "Trans": "{\"en\":\"Land record edit\",\"ru\":\"Редактирование земельной записи\"}"
        },
        {
            "Name": "land_use",
            "Conditions": "",
            "Trans": "{\"en\":\"Land use\",\"ru\":\"Землепользование\"}"
        },
        {
            "Name": "legal_status",
            "Conditions": "",
            "Trans": "{\"en\":\"Legal status\",\"ru\":\"Правовой статус\"}"
        },
        {
            "Name": "member_id",
            "Conditions": "",
            "Trans": "{\"en\": \"Member ID\", \"ru\": \"ID члена\"}"
        },
        {
            "Name": "name",
            "Conditions": "",
            "Trans": "{\"en\": \"Name\", \"ru\": \"Название\"}"
        },
        {
            "Name": "need_your_processing",
            "Conditions": "",
            "Trans": "{\"en\":\"Need your processing\",\"ru\":\"Нужна ваша обработка\"}"
        },
        {
            "Name": "new_land",
            "Conditions": "",
            "Trans": "{\"en\":\"New land\",\"ru\":\"Новая земля\"}"
        },
        {
            "Name": "new_voting",
            "Conditions": "",
            "Trans": "{\"en\": \"New voting\", \"ru\": \"Новое голосование\"}"
        },
        {
            "Name": "no",
            "Conditions": "",
            "Trans": "{\"en\":\"No\",\"ru\":\"Нет\"}"
        },
        {
            "Name": "no_problem",
            "Conditions": "",
            "Trans": "{\"en\":\"No Issues\",\"ru\":\"Нет проблем\"}"
        },
        {
            "Name": "notifications",
            "Conditions": "",
            "Trans": "{\"en\": \"Notifications\", \"ru\": \"Уведомления\"}"
        },
        {
            "Name": "owner",
            "Conditions": "",
            "Trans": "{\"en\":\"Owner\",\"ru\":\"Владелец\"}"
        },
        {
            "Name": "price",
            "Conditions": "",
            "Trans": "{\"en\":\"Price\",\"ru\":\"Цена\"}"
        },
        {
            "Name": "problem",
            "Conditions": "",
            "Trans": "{\"en\":\"Have Issues\",\"ru\":\"Проблемы\"}"
        },
        {
            "Name": "profile_edit",
            "Conditions": "",
            "Trans": "{\n    \"en\": \"Profile edit\",\n    \"ru\": \"Редактирование профиля\"\n}"
        },
        {
            "Name": "record_add_date",
            "Conditions": "",
            "Trans": "{\"en\":\"Record Add Date\",\"ru\":\"Дата добавления записи\"}"
        },
        {
            "Name": "referendum",
            "Conditions": "",
            "Trans": "{\"en\":\"Referendum\",\"ru\":\"Референдум\"}"
        },
        {
            "Name": "registration_date",
            "Conditions": "",
            "Trans": "{\"en\":\"Registration Date\",\"ru\":\"Дата регистрации\"}"
        },
        {
            "Name": "result",
            "Conditions": "",
            "Trans": "{\"en\":\"Result\",\"ru\":\"Результат\"}"
        },
        {
            "Name": "save",
            "Conditions": "",
            "Trans": "{\"en\": \"Save\", \"ru\": \"Сохранить\"}"
        },
        {
            "Name": "send_contract",
            "Conditions": "",
            "Trans": "{\"en\":\"Send to contract\",\"ru\":\"Отправить в контракт\"}"
        },
        {
            "Name": "send_notify",
            "Conditions": "",
            "Trans": "{\"en\":\"Send Notification\",\"ru\":\"Отправить оповещение\"}"
        },
        {
            "Name": "send_page",
            "Conditions": "",
            "Trans": "{\"en\":\"Send to page\",\"ru\":\"Отправить на страницу\"}"
        },
        {
            "Name": "send_request",
            "Conditions": "",
            "Trans": "{\"en\":\"Send request\",\"ru\":\"Послать запрос\"}"
        },
        {
            "Name": "total_votes",
            "Conditions": "",
            "Trans": "{\"en\":\"Total votes\",\"ru\":\"Всего проголосовало\"}"
        },
        {
            "Name": "undefined",
            "Conditions": "",
            "Trans": "{\"en\":\"Undefined\",\"ru\":\"Не определено\"}"
        },
        {
            "Name": "user_info",
            "Conditions": "",
            "Trans": "{\"en\": \"User information\", \"ru\": \"Информация о пользователе\"}"
        },
        {
            "Name": "username",
            "Conditions": "",
            "Trans": "{\"en\": \"Username\", \"ru\": \"Никнейм\"}"
        },
        {
            "Name": "view_all",
            "Conditions": "",
            "Trans": "{\"en\": \"View all\", \"ru\": \"Посмотреть все\"}"
        },
        {
            "Name": "votes_taken_accept",
            "Conditions": "",
            "Trans": "{\"ru\":\"Положительных голосов\",\"en\":\"Positive votes\"}"
        },
        {
            "Name": "votes_taken_reject",
            "Conditions": "",
            "Trans": "{\"ru\":\"Отрицательных голосов\",\"en\":\"Negative votes\"}"
        },
        {
            "Name": "want_save",
            "Conditions": "",
            "Trans": "{\"en\":\"Do you want to save changes?\",\"ru\":\"Действительно хотите сохранить\"}"
        },
        {
            "Name": "yes",
            "Conditions": "",
            "Trans": "{\"en\":\"Yes\",\"ru\":\"Да\"}"
        }
    ],
    "menus": [
        {
            "Name": "Applications",
            "Value": "MenuItem(Title:$referendum$, Page:referendums_list, Icon:\"fa fa-gavel\")\nMenuItem(Title: $land_records$, Page: land_registry_records,Icon: \"fa icon-home\")",
            "Conditions": "ContractAccess(\"@1EditMenu\")"
        },
        {
            "Name": "default_menu",
            "Value": "MenuItem(Title: $demo_sendPage$, Page: demo_page_sendPage, Icon: fa fa-envelope-open-o)\nMenuItem(Title: $demo_sendContract$, Page: demo_page_sendContract, Icon:fa fa-envelope-o)\nMenuItem(Title: $demo_sendMessage$, Page: demo_page_sendMessage, Icon:fa fa-paper-plane-o)\nMenuItem(Title: $notifications$, Page: demo_notifications, Icon:fa fa-inbox)\nMenuItem(Title: $profile_edit$, Page: profile_edit, Icon:fa fa-address-card-o)\nMenuItem(Title: $applications$, Page: applications_list, Icon:fa fa-list-ul)",
            "Conditions": "ContractAccess(\"@1EditMenu\")"
        }
    ],
    "pages": [
        {
            "Name": "applications_list",
            "Value": "Div(Class: content-wrapper){\n\n\tSetTitle($applications$)\n\n    Div(Class: row df f-valign){\n        Div(Class: col-md-3)\n        Div(Class: col-md-6){\n\n            Data(src_parameters,\"id,name\"){\n                1,$referendum$\n                2,$land_records$\n            }.Custom(custom_link){\n                If(#id#==1){\n                    LinkPage(Page: referendums_list){        \n                        Div(media-box){\n                            Div(Class: pull-left){\n                                Em(Class: fa fa-2x fa-gavel text-primary)\n                            } \n                            Div(media-box-body clearfix){ \n                                Div(Class: h5 text-bold, Body: #name#)\n                            }\n                        }\n                    }\n                }\n                If(#id#==2){\n                    LinkPage(Page: land_registry_records){        \n                        Div(media-box){\n                            Div(Class: pull-left){\n                                Em(Class: fa fa-2x icon-home text-primary)\n                            } \n                            Div(media-box-body clearfix){ \n                                Div(Class: h5 text-bold, Body: #name#)\n                            }\n                        }\n                    }\n                }\n            }.Custom(custom_value){\n                SysParam(#name#)\n            }.Custom(actions){\n                Span(Class: text-center text-bold, Body: \"Installed\")\n            }\n            \n            Table(src_parameters, \"=custom_link,=actions\")\n\n\t\t}\n\t\tDiv(Class: col-md-3)\n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "Applications"
        },
        {
            "Name": "demo_notifications",
            "Value": "DBFind(Name: notifications, Source: noti_s).Where(\"closed=0 and notification_type=1 and recipient_id=#key_id#\")\nSetTitle($notifications$)\nDiv(content-wrapper){\n    Div(row){\n        Div(col-sm-8 col-sm-offset-2 col-lg-6 col-lg-offset-3){\n            Div(panel panel-primary){\n                Div(panel-heading){$notifications$}\n                Div(panel-body){\n                    ForList(noti_s){\n                        Div(Class: list-group-item){\n                            LinkPage(Page: #page_name#, PageParams: \"notific_id=#id#,notific_type=#notification_type#,notific_header=#header_text#,#page_params#\"){\n                                Div(media-box){\n                                    Div(Class: pull-left){\n                                        Em(Class: fa #icon# fa-1x text-info)\n                                    }\n                                    Div(media-box-body clearfix){\n                                        Div(Class: m0 text-normal, Body: #header_text#)\n                                        Div(Class: m0 text-muted h6, Body: #body_text#)\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu"
        },
        {
            "Name": "demo_page_message",
            "Value": "If(#notific_id#>0){\n    SetTitle($demo_sendMessage$)\n    Div(content-wrapper){\n        Div(row){\n            Div(col-xs-8 col-xs-offset-2 col-lg-6 col-lg-offset-3){\n                Div(panel panel-primary){\n                    Div(panel-heading){$result$}\n                    Div(panel-body){\n                        Div(row){\n                            Div(col-sm-10 col-sm-offset-1 alert alert-default){\n                                Div(){Header: #notific_header#}\n                                Div(){SomeText: #SomeText#}\n                            }\n                            \n                        }.Style(display: flex;align-items: flex-end;)\n                    }\n                    Div(panel-footer clearfix){\n                        Div(pull-right text-right){\n                            Button(Page: demo_page_sendMessage, Class: btn btn-primary, Contract:Notifications_Single_Close, Params:\"notific_id=#notific_id#\", Body: $close$)\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu"
        },
        {
            "Name": "demo_page_sendContract",
            "Value": "Include(demo_block_sendContract)",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu"
        },
        {
            "Name": "demo_page_sendMessage",
            "Value": "Include(demo_block_sendMessage)",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu"
        },
        {
            "Name": "demo_page_sendPage",
            "Value": "Include(demo_block_sendPage)",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu"
        },
        {
            "Name": "land_registry_add",
            "Value": "Div(content-wrapper){\n    Div(breadcrumb){\n        Div(){\n            LinkPage(LangRes(land_records), land_registry_records)\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\n            Span(LangRes(land_records_add), text-muted)\n        }\n    }\n    SetTitle($department_of_land_resources$)\n    \n    Div(row df f-valign){\n        Div(col-sm-8 col-sm-offset-2 text-left){\n            Div(panel panel-primary){\n                Div(panel-heading, Body: LangRes(add_new_record))\n                Form(){\n                    Div(list-group-item){\n                        Div(row df f-valign){\n                            Div(col-md-3 mt-sm text-right){\n                                Strong(LangRes(address))\n                            }\n                            Div(col-md-9 mc-sm text-center){\n                                InputMap(Name: Coords,Type: polygon, MapType: hybrid, Value: `{\"zoom\":8, \"center\":{\"lat\":51.500,\"lng\":-0.125}}`)\n                            }\n                        }\n                    }\n                    Div(list-group-item){\n                        Div(row df f-valign){\n                            Div(col-md-3 mt-sm text-right){\n                                Strong(LangRes(owner))\n                            }\n                            Div(col-md-9 mb-sm text-left){\n                                DBFind(Name: members, Source: src_owners)\n                                Select(Name: OwnerId, Source: src_owners, ValueColumn: id, NameColumn: member_name, Class: form-control m-b)\n                            }\n                        }\n                        Div(row df f-valign){\n                            Div(col-md-3 mt-sm text-right){\n                                Strong(LangRes(land_nature))\n                            }\n                            Div(col-md-9 mb-sm text-left){\n                                EcosysParam(Name: land_nature, Source: src_nature)\n                                Select(Name: LandNature, Source: src_nature, Class: form-control, ValueColumn: id, NameColumn: name)\n                            }\n                        }\n                        Div(row df f-valign){\n                            Div(col-md-3 mt-sm text-right){\n                                Strong(LangRes(buildings_use_class))\n                            }\n                            Div(col-md-9 mc-sm text-left){\n                                EcosysParam(Name: land_buildings_use_class, Source: use_class)\n                                Select(Name: BuildingsUseClass, Source: use_class, Class: form-control, ValueColumn: id, NameColumn: name)\n                            }\n                        }\n                    }\n                    Div(panel-footer){\n                        Div(clearfix){\n                            Div(pull-right){\n                                Div(btn-group){\n                                    Input(Name: RegistrationDate, Type: hidden, Value: Now(datetime))\n                                    Button(Page: land_registry_records, Body: LangRes(back), Class: btn btn-default btn-pill-left)\n                                    Button(Body: LangRes(add), Class: btn btn-primary btn-pill-right, Contract: land_registry_Add, Page: land_registry_records)\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Menu": "Applications"
        },
        {
            "Name": "land_registry_edit",
            "Value": "Include(land_registry_edit)",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Menu": "Applications"
        },
        {
            "Name": "land_registry_records",
            "Value": "SetTitle($land_records$)\nSetVar(this, land_registry_records)\nInclude(land_registry_records)",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Menu": "Applications"
        },
        {
            "Name": "land_registry_view",
            "Value": "If(GetVar(notific_val_int)){\n    SetVar(LandId, #notific_val_int#)\n}.Else{}\n\nIf(GetVar(notific_id)){}.Else{SetVar(notific_id,0)}\n\nSetVar(title,$land_record$)\n\nIf(#LandId#>0){}.Else{SetVar(LandId, 1)}\n\nIf(GetVar(LandId)){\n    DBFind(Name: land_registry, Source: src_entry).WhereId(#LandId#).Vars(entry)\n    DBFind(Name: land_registry_ownership, Source: src_land_ownership).Where(lend_object_id=#LandId#).Vars(ownership)\n    \n    DBFind(Name: members, Source: src_owner).Where(id=#ownership_owner_id#).Vars(owner)\n}\nSetTitle(#title#)\n\nDiv(content-wrapper){\n    Div(breadcrumb){\n        Div(){\n            LinkPage(Body:$land_records$,Page: land_registry_records)\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\n            Span(#title#, text-muted)\n        }\n    }\n    If(GetVar(LandId)){\n        Div(row df f-valign){\n            Div(col-sm-8 col-sm-offset-2 col-lg-6 col-lg-offset-3 mt-sm text-left){\n                Div(panel panel-default){\n                    Form(){\n                        Div(Class: list-group-item text-center){\n                            Span(Class: h3, Body: $land_record$ #GetVar(LandId))\t\n                        }\n                        Div(list-group-item){\n                            Map(MapType: hybrid, Hmap:300, Value: #entry_map_coords#)\n                        }\n                        Div(list-group-item){\n                            Div(row df f-valign){\n                                Div(col-md-5 mt-sm text-right h5){\n                                    Strong($owner$:)\n                                }\n                                Div(col-md-6 mt-sm text-left h5){\n                                    Div(){\n                                        Span(#owner_member_name#)\n                                    }\n                                }\n                            }\n                            Div(row df f-valign){\n                                Div(col-md-5 mt-sm text-right h5){\n                                    Strong($area_size$)\n                                    (Span(m).(2).Style(vertical-align: super;font-size:small;)):\n                                }\n                                Div(col-md-7 mt-sm text-left h5){#entry_area#}\n                            }\n                            Div(row df f-valign){\n                                Div(col-md-5 mt-sm text-right h5){\n                                    Strong($address$:)\n                                }\n                                Div(col-md-7 mt-sm text-left h5){#entry_address#}\n                            }\n                            \n                            Div(row df f-valign){\n                                Div(col-md-5 mt-sm text-right h5){Strong($record_add_date$:)}\n                                Div(col-md-7 mt-sm text-left h5){DateTime(#entry_date_create#)}\n                            }\n                            \n                            Div(row df){\n                                Div(col-md-5 mt-sm text-right h5){Strong($buildings_use_class$:)}\n                                Div(col-md-7 mt-sm text-left h5){\n                                    EcosysParam(Name: buildings_use_class, Index: #entry_buildings_use_class#)\n                                }\n                            }\n                            \n                            Div(row df){\n                                Div(col-md-5 mt-sm text-right h5){Strong($land_nature$:)}\n                                Div(col-md-7 mt-sm text-left h5){\n                                    EcosysParam(Name: land_nature, Index: #entry_land_nature#)\n                                }\n                            }\n                        }\n\t\t\t\t\t\tDiv(list-group-item){\n                            DBFind(Name: notifications, Source: src_alert).Where(page_params='LandId=#LandId#,second_request=1' and closed=0).Vars(alert)\n                            Div(row df){\n                                Div(col-md-5 mt-lg text-right h5){Strong($legal_status$:)}\n                                Div(col-md-3 mt-lg text-left h5){\n                                    If(GetVar(alert_id)){\n                                        SetVar(alert, 1)\n                                    }.Else{\n                                        SetVar(alert, 0)\n                                    }\n                                    Span(EcosysParam(Name: legal_status, Index: #entry_legal_status#)).Style(margin-right:10px;)\n                                }\n                                Div(col-md-4 mc-sm text-right h5){\n                                    If(And(#entry_legal_status#!=1, #alert#==0)){\n                                        Button(Contract: land_registry_SecondRequest, Body:$send_request$, Params: \"LandId=#LandId#\", Class: btn btn-default, Page: land_registry_view, PageParams: \"LandId=#LandId#\").Alert(Text:$ask_request_second$, ConfirmButton:$confirm$, CancelButton:$cancel$)\n                                    }\n                                }\n                            }\n                        }\n\t\t\t\t\t\tDiv(list-group-item){\n                            Div(row df){\n                                Div(col-md-5 mt-lg text-right h5){Strong($encumbrance_certificate$:)}\n                                Div(col-md-3 mt-lg text-left h5){\n                                    Span(EcosysParam(Name: land_ec_status, Index: #entry_encumbrance_certificate#)).Style(padding-right:10px;)\n                                }\n                                Div(col-md-4 mc-sm text-right h5){\n                                    If(And(#entry_encumbrance_certificate#!=1, #alert#==0)){\n                                        Button(Contract: land_registry_SecondRequest, Body:$send_request$, Params: \"LandId=#LandId#\", Class: btn btn-default, Page: land_registry_view, PageParams: \"LandId=#LandId#\").Alert(Text:$ask_request_second$, ConfirmButton:$confirm$, CancelButton:$cancel$)\n                                    }\n                                }\n                            }\n                        }\n\t\t\t\t\t\tDiv(list-group-item){\n                            Div(row df f-valign){\n                                Div(col-md-5 mt-lg text-right h5){Strong($consideration_value$:)}\n                                Div(col-md-3 mt-lg text-left h5){\n                                    If(#entry_price#>0){\n                                        Span(#entry_price# INR).Style(padding-right:10px;)\n                                    }.Else{\n                                        $undefined$\n                                    }\n                                }\n                                Div(col-md-4 mc-sm text-right h5){\n                                    If(#ownership_owner_id#==#key_id#){\n                                        Button(Page: land_registry_edit, Body:$change$, PageParams: \"LandId=#LandId#\", Class: btn btn-default)\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Menu": "Applications"
        },
        {
            "Name": "notifications",
            "Value": "DBFind(Name: notifications, Source: noti_s).Where(\"closed=0 and notification_type=1 and recipient_id=#key_id#\")\nDBFind(Name: notifications, Source: noti_r).Where(\"closed=0 and notification_type=2 and (started_processing_id=0 or started_processing_id=#key_id#)\")\n\nForList(noti_s){\n        Div(Class: list-group-item){\n            LinkPage(Page: #page_name#, PageParams: \"notific_id=#id#,notific_type=#notification_type#,notific_header=#header_text#,#page_params#\"){        \n                Div(media-box){\n                    Div(Class: pull-left){\n                        Em(Class: fa #icon# fa-1x text-info)\n                    } \n                    Div(media-box-body clearfix){ \n                        Div(Class: m0 text-normal, Body: #header_text#) \n                        Div(Class: m0 text-muted h6, Body: #body_text#)\n                    }\n                }\n            }\n        }\n}\n\nForList(noti_r){\n    DBFind(Name: roles_assign, Source: src_roles).Where(\"member_id=#key_id# and role_id=#role_id# and delete=0\").Vars(prefix)\n    If(#prefix_id# > 0){\n        Div(Class: list-group-item){\n            LinkPage(Page: #page_name#, PageParams: \"notific_id=#id#,notific_type=#notification_type#,notific_header=#header_text#,#page_params#\"){        \n                Div(media-box){\n                    Div(Class: pull-left){\n                        Em(Class: fa #icon# fa-1x text-primary)\n                    } \n                    Div(media-box-body clearfix){ \n                        Div(Class: m0 text-normal, Body: #header_text#) \n                        Div(Class: m0 text-muted h6, Body: #body_text#)\n                    }\n                }\n            }\n        }\n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu"
        },
        {
            "Name": "profile_edit",
            "Value": "SetTitle($profile_edit$)\nDiv(content-wrapper){\n    \n    If(Or(#v_id#>0,#v_id#<0)){\n        DBFind(Name: members, Source: src_member).Where(id=#v_id#).Vars(prefix)\n    }.Else{\n        DBFind(Name: members, Source: src_member).Where(id=#key_id#).Vars(prefix)\n    }\n    \n    Div(row){\n        Div(col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3){\n            Div(panel panel-primary){\n                Div(panel-heading, Body: LangRes(profile_edit))\n                Form(){\n                    Div(list-group-item){\n                        Div(row){\n                            Div(col-md-3 mt-sm text-right){\n                                Label(For: username){\n                                    Span(Body: LangRes(username))\n                                }\n                            }\n                            Div(col-md-9 mc-sm text-left){\n                                Input(Class: form-control, Type: text, Name: Username, Value: #prefix_member_name#)\n                            }\n                        }\n                    }\n                    \n                    Div(panel-footer clearfix){\n                        Div(pull-right){\n                            Input(Type: hidden, Value: 0, Name: Kid)\n                            Button(Body: LangRes(save), Class: btn btn-primary, Contract: Profile_Edit, Page: profile_view).Alert(Text: $want_save$, ConfirmButton: $yes$, CancelButton: $no$, Icon: question)\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu"
        },
        {
            "Name": "profile_view",
            "Value": "Div(Class: content-wrapper){\n\n\tSetTitle($user_info$)\n\tDiv(Class: breadcrumb){\n\t\tSpan(Class: text-muted, Body: LangRes(user_info))\n\t}\n\n    If(Or(#v_member_id#>0,#v_member_id#<0)){\n    }.Else{\n\t\tSetVar(Name: v_member_id, Value: #key_id#)\n    }\n\tDBFind(Name: members, Source: src_member).Where(id=#v_member_id#).Vars(prefix)\n\t\n\tIf(Or(#prefix_id#>0,#prefix_id#<0)){\n    }.Else{\n        SetVar(Name: prefix_member_name, Value: \"\")\n    }\n\n    Div(Class: row df f-valign){\n        Div(Class: col-md-3)\n        Div(Class: col-md-6){\n            Div(Class: panel panel-default){\n                Form(){ \n\t\t\t\t\tDiv(Class: list-group-item text-center){\n\t\t\t\t\t\tSpan(Class: h3, Body: LangRes(user_info))\t\n\t\t\t\t\t}\n\t\t\t\t\tDiv(Class: list-group-item){\n\t\t\t\t\t\tDiv(Class: row df f-valign){\n\t\t\t\t\t\t\tDiv(Class: col-md-12 mt-sm text-center){\n\t\t\t\t\t\t\t\tIf(Or(#prefix_id#>0,#prefix_id#<0)){\n                                    Div(Body: Span(Class: h3 text-bold, Body: #prefix_member_name#))\n\t\t\t\t\t\t\t\t}.Else{\n\t\t\t\t\t\t\t\t\tButton(Class: btn btn-link, Page: profile_edit){\n\t\t\t\t\t\t\t\t\t\tSpan(Class: h3 text-bold, Body: LangRes(editing_profile))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                }\n            }\n\n        }\n        Div(Class: col-md-3)\n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu"
        },
        {
            "Name": "referendums_add",
            "Value": "Div(Class: content-wrapper){\n\n\tSetTitle($referendum$)\n\tDiv(Class: breadcrumb){\n\t\tLinkPage($referendum$, referendums_list)\n\t\tSpan(/).Style(margin-right: 10px; margin-left: 10px;)\n\t\tSpan(Class: text-muted, Body: $new_voting$)\n\t}\n\n    Div(Class: row df f-valign){\n        Div(Class: col-md-3)\n        Div(Class: col-md-6){\n\t\t\n            Div(Class: panel panel-primary){\n                Div(Class: panel-heading, Body: LangRes(new_voting))\n                Form(){\n\n                    Div(Class: list-group-item){\n                        Div(Class: row df f-valign){\n                \t\t\tDiv(Class: col-md-3 mt-sm text-right){\n                                Label(For: referendum_name){\n                                    Span(Body: LangRes(name))\n                                }\n                \t\t\t}\n                \t\t\tDiv(Class: col-md-9 mc-sm text-left){\n                \t\t\t    Input(Name: referendum_name, Class: form-control, Type: text)\n                \t\t\t}\n                        }                   \n                    }\n\n                    Div(Class: list-group-item){\n                        Div(Class: row df f-valign){\n                \t\t\tDiv(Class: col-md-3 mt-lg text-right){\n                                Label(For: question){\n                                    Span(Body: LangRes(description))\n                                }\n                            }\n                \t\t\tDiv(Class: col-md-9 mc-sm text-left){\n                \t\t\t    Input(Name: question, Class: form-control, Type: textarea)\n                \t\t\t}\n                        }                      \n                    }\n\n                    Div(Class: panel-footer clearfix){\n                        Div(Class: pull-right){\n                            Button(Body: LangRes(back), Class: btn btn-default, Page: referendums_list)\n                            Button(Body: LangRes(create), Class: btn btn-primary, Page: referendums_list, Contract: referendums_add)\n                        }\n                    }\n\n                }\n            }\n\t\t}\n\t\tDiv(Class: col-md-3)\n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "Applications"
        },
        {
            "Name": "referendums_list",
            "Value": "Div(Class: content-wrapper){\n    \n    SetTitle($referendum$)\n    \n    If(GetVar(isSearch) == 1){\n        SetVar(Name: v_Where, Value: \"name='#v_Search#' and delete = 0\")\n    }.Else{\n        SetVar(Name: v_Where, Value: \"delete=0\")\n        SetVar(Name: v_Search, Value: \"\")\n    }\n    \n    DBFind(Name: referendums, Source: src_referendums).Custom(custom_id){\n\t\tSpan(#id#)\n    }.Custom(custom_name){\n        LinkPage(Page: referendums_view, PageParams: \"referendum_id=#id#\"){\n            Span(Class: h4 text-bold, Body: #name#)\n        }\n    }.Custom(custom_all){\n        Span(Class: h5, Body: #votes_total#)\n    }.Custom(custom_accept){\n        Span(Class: h5 text-success, Body: #votes_accept# ( #percent_accept# %))\n    }.Custom(custom_reject){\n        Span(Class: h5 text-danger, Body: #votes_reject# ( #percent_reject# %))\n    }.Custom(custom_voting){\n        SetVar(Name: participant_id, Value: 0)\n        DBFind(Name: referendums_participants, Source: src_referendums_participants).Where(\"referendum_id=#id# and member_id=#key_id#\").Vars(participant)\n        If(#participant_id# > 0){\n        }.Else{\n            Div(Class: pull-right){\n                Button(Body: Em(Class: fa fa-thumbs-down), Class: btn btn-danger, Contract: referendums_reject, Params: \"referendum_id=#id#\", Page: referendums_list)\n            }\n            Div(Class: pull-right){\n                Button(Body: Em(Class: fa fa-thumbs-up), Class: btn btn-success, Contract: referendums_accept, Params: \"referendum_id=#id#\", Page: referendums_list)\n            }\n        }\n    }.Custom(custom_question){\n        Span(Class: h6, Body: #question#)\n    }.Where(#v_Where#).Order(id)\n    \n    Div(Class: panel panel-primary){\n        Form(){\n            Div(Class: list-group-item){\n                Div(Class: row df f-valign){\n                    Div(Class: col-md-1 mt-sm text-right){\n                        Label(For: Search){\n                            Span(Body: LangRes(name))\n                        }\n                    }\n                    Div(Class: col-md-11 mc-sm){\n                        Div(Class: input-group){\n                            Input(Class: form-control, Type: text, Name: Search, Value: #v_Search#)\n                            Div(Class: input-group-btn){\n                                Button(Body: Em(Class: fa fa-search), Class: btn btn-default, Page: referendums_list, PageParams: \"isSearch=1,v_Search=Val(Search)\")\n                            }\n                        }\n                    }\n                }\n            }\n            \n            Div(Class: list-group-item){\n                Table(src_referendums, \"$id$=custom_id,$name$=custom_name,$description$=custom_question,$votes_taken_accept$=custom_accept,$votes_taken_reject$=custom_reject,$total_votes$=custom_all,=custom_voting\")\n                If(GetVar(isSearch) == 1){\n                    Div(Class: text-center){\n                        Button(Body: $view_all$, Class: btn btn-primary, Page: referendums_list, PageParams: \"isSearch=0\")\n                    }\n                }\n            }\n            \n            Div(Class: panel-footer clearfix){\n                Div(Class: pull-right){\n                    Button(Body: LangRes(create), Class: btn btn-primary, Page: referendums_add)\n                }\n            }\n            \n        }\n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "Applications"
        },
        {
            "Name": "referendums_view",
            "Value": "Div(Class: content-wrapper){\n    If(#referendum_id# > 0){\n\n        DBFind(Name: referendums, Source: src_referendums).Where(\"id=#referendum_id#\").Vars(instance)\n        DBFind(Name: referendums_participants, Source: src_referendums_participants).Where(\"referendum_id=#referendum_id# and member_id=#key_id#\").Vars(participant)\n\n        SetTitle($referendum$: #instance_name#)\n        Div(Class: breadcrumb){\n            LinkPage($referendum$, referendums_list)\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\n            Span(Class: text-muted, Body: #instance_name#)\n        }\n\n        Div(Class: row df f-valign){\n            Div(Class: col-md-2)\n            Div(Class: col-md-8){\n\n                Div(Class: panel panel-default){\n                    Form(){ \n\n                        Div(Class: list-group-item text-center){\n                            P(Class: h2 text-bold m0, Body: #instance_name#)\n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-12 mt-sm){\n\t\t\t\t\t\t\t\t\tP(Class: h5 text-muted m0, Body: LangRes(total_votes): #instance_votes_total#)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n                        }\n                        Div(Class: list-group-item text-center){\n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-2 mt-sm)\n                                Div(Class: col-md-8 mt-sm){\n\t\t\t\t\t\t\t\t\tP(Class: h4 text-normal m0, Body: #instance_question#)\n\t\t\t\t\t\t\t\t}\n                                Div(Class: col-md-2 mt-sm)\n\t\t\t\t\t\t\t}\n                        }\n                        Div(Class: list-group-item text-center){\n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-2 mt-sm )\n                                Div(Class: col-md-4 mt-sm text-left){\n\t\t\t\t\t\t\t\t\tP(Class: h5 text-success m0, Body: LangRes(votes_taken_accept))\n                                }\n                                Div(Class: col-md-4 mt-sm text-right){\n\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: LangRes(votes_taken_reject))\n                                }\n                                Div(Class: col-md-2 mt-sm)\n                            }\n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-2 mt-sm )\n                                Div(Class: col-md-8 mt-sm text-center){\n                                    If(Or(#instance_percent_accept#>0,#instance_percent_reject#>0)){\n                                        Div().Style(background-color:green;height:10px;display:inline-block;width:#instance_percent_accept#%)\n                                        Div().Style(background-color:red;height:10px;display:inline-block;width:#instance_percent_reject#%)\n                                    }.Else{\n                                        Div().Style(background-color:LightGray;height:10px;display:inline-block;width:100%)\n                                    }\n                                }\n                                Div(Class: col-md-2 mt-sm)\n                            }\n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-2 mt-sm )\n                                Div(Class: col-md-4 mt-sm text-left){\n                                    P(Class: h5 text-success m0, Body: #instance_percent_accept# % (#instance_votes_accept#))\n                                }\n                                Div(Class: col-md-4 mt-sm text-right){\n                                    P(Class: h5 text-danger m0, Body: #instance_percent_reject# % (#instance_votes_reject#))\n                                }\n                                Div(Class: col-md-2 mt-sm)\n                            }\n\t\t\t\t\t\t}\n                        If(#participant_id# > 0){\n                        }.Else{\n                            Div(Class: list-group-item text-center){\n                                Div(Class: row df f-valign){\n                                    Div(Class: col-md-1 mt-sm )\n                                    Div(Class: col-md-5 mt-sm text-center){\n                                        Button(Body: Em(Class: fa fa-thumbs-up), Class: btn btn-success, Contract: referendums_accept, Params: \"referendum_id=#referendum_id#\", Page: referendums_view, PageParams: \"referendum_id=#referendum_id#\")\n                                    }\n                                    Div(Class: col-md-5 mt-sm text-center){\n                                        Button(Body: Em(Class: fa fa-thumbs-down), Class: btn btn-danger, Contract: referendums_reject, Params: \"referendum_id=#referendum_id#\", Page: referendums_view, PageParams: \"referendum_id=#referendum_id#\")\n                                    }\n                                    Div(Class: col-md-1 mt-sm)\n                                }\n                            }\n                        }\n\n                    }\n                }\n\n            }\n            Div(Class: col-md-2)\n        }   \n    }.Else{\n        Div(Class: md-12 alert alert-danger text-center){\n            Span(Body: LangRes(attention))\n        }\n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "Applications"
        }
    ],
    "parameters": [
        {
            "Name": "buildings_use_class",
            "Value": "Shops,Financial and professional services,Restaurants and cafes,Business,Hotels,Dwellinghouses,Non-residential institutions,No",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "business_scope",
            "Value": "Agriculture,Financial services,Entertainment and mass media,Industrial manufacturing,Real estate,Retail,Transportation,Utilities,Service businesses",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_buildings_use_class",
            "Value": "Shops,Financial and professional services,Restaurants and cafes,Business,Hotels,Dwellinghouses,Non-residential institutions,No",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_ec_status",
            "Value": "No Issues,Have Issues",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_local_body",
            "Value": "Minor Gram Panchayat,Major Gram Panchayat,Other Municipality/Notified Area,Municipal Corporation",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_nature",
            "Value": "0101 Sale Deed,0111 AGREEMENT OF SALE CUM GPA,0202 Mortgage without Possession,0206 Mortgage deed by small farmer for Agrl.loans in f/o PAC/Bank,0208 Deposit of Title Deeds,0302 Gift Settlement in f/o family member,0303 Gift Settlement in f/o others,0304 Gift Settlement for Charitable/religious purposes,0401 Partition,0402 Partition among Family Members,0505 RECEIPT(R.T.D.M),0701 Lease Deed,0801 Rectification Deed,0803 Cancellation Deed",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_use",
            "Value": "01 Residential-U,09 URBAN VacantLand(Residential)-U,21 Dry land-R,26 Wet Land double crop-R,27 Wet Land single crop-R,30 Coconut Garden-R",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "land_yes_no",
            "Value": "no_problem,problem",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "legal_status",
            "Value": "No Issues,Title Not Clear,Multiple Owner Claims,Khata Not Clear",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "notification_closure",
            "Value": "single,multiple",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "notification_icon",
            "Value": "fa-bell,fa-comment,fa-envelope,fa-bookmark,fa-check,fa-exclamation-triangle,fa-info-circle",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "notification_type",
            "Value": "single,role",
            "Conditions": "ContractConditions(\"MainCondition\")"
        }
    ],
    "tables": [
        {
            "Name": "demo_page_table",
            "Columns": "[{\"name\":\"member_name\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"member_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"some_text\",\"type\":\"text\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"
        },
        {
            "Name": "land_registry",
            "Columns": "[{\"name\":\"address\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"land_use\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"land_nature\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"modification_date\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"tax_receipt_and_bills\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"encumbrance_certificate\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"area\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"delete\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"price_gov_value\",\"type\":\"money\",\"conditions\":\"true\"},{\"name\":\"buildings_use_class\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"price_market_value\",\"type\":\"money\",\"conditions\":\"true\"},{\"name\":\"owner_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"map_coords\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"date_create\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"legal_status\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"land_local_body\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"registration_date\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"price\",\"type\":\"money\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"
        },
        {
            "Name": "land_registry_ownership",
            "Columns": "[{\"name\":\"dep3_approved\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"lend_object_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"price\",\"type\":\"money\",\"conditions\":\"true\"},{\"name\":\"owner_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"date_signing\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"owner_new_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"step\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"date_creat\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"owner_type\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"dep2_approved\",\"type\":\"number\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"
        },
        {
            "Name": "referendums",
            "Columns": "[{\"name\":\"percent_accept\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"percent_reject\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"name\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"delete\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"question\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"votes_total\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"votes_accept\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"votes_reject\",\"type\":\"number\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"
        },
        {
            "Name": "referendums_participants",
            "Columns": "[{\"name\":\"decision\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"member_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"referendum_id\",\"type\":\"number\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"
        }
    ]
}