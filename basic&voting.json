{"blocks":[],"contracts":[{"Name":"Notifications_Roles_Finishing","Value":"contract Notifications_Roles_Finishing{\n    data {\n\t    notific_id int\n    }\n\n    conditions {\n\t\t$notifications_map = DBFind(\"notifications\").Where(\"id=$\", $notific_id).Row()\n\t\tif ($notifications_map[\"id\"] == nil){\n\t\t\twarning \"Notification not found\"\n\t\t}\n\t\t\n        if ( Int($notifications_map[\"started_processing_id\"]) == 0 ){\n            warning \"Sorry, processing of this notification has not yet begun\"  \n        }\n        if ( Int($notifications_map[\"started_processing_id\"]) != $key_id ){\n            warning \"Sorry, processing of this notice began another member\"   \n        }\n        if ( (Int($notifications_map[\"finished_processing_id\"]) != 0) || (Int($notifications_map[\"closed\"]) \u003e 0) ){\n            warning \"Sorry, this notification has already been closed before\"  \n        }\n\t\t\n\t\t$assign_id = DBFind(`roles_assign`).Where(`role_id=$ and member_id=$ and delete=$`, Int($notifications_map[\"role_id\"]), $key_id, 0).One(\"id\")\n        if ($assign_id == 0){\n            warning \"Sorry, you are not part of the role for which this notification is intended\"  \n        }\n    }\n\n    action {\n        DBUpdate(`notifications`, $notific_id, `timestamp finished_processing_time,finished_processing_id,closed`, $block_time, $key_id, 1) \n    }\n}","Conditions":"ContractConditions(\"MainCondition\")"},{"Name":"Notifications_Roles_Processing","Value":"contract Notifications_Roles_Processing {\n    data {\n\t    notific_id int\n    }\n\n    conditions {\n\t\t$notifications_map = DBFind(\"notifications\").Where(\"id=$\", $notific_id).Row()\n\t\tif ($notifications_map[\"id\"] == nil){\n\t\t\twarning \"Notification not found\"\n\t\t}\n\t\t\n        if ( Int($notifications_map[\"started_processing_id\"]) != 0){\n            warning \"Sorry, processing of this notification has already begun\"  \n        }\n\t\t\n\t\t$assign_id = DBFind(`roles_assign`).Where(`role_id=$ and member_id=$ and delete=$`, Int($notifications_map[\"role_id\"]), $key_id, 0).One(\"id\")\n        if ($assign_id == 0){\n            warning \"Sorry, you are not part of the role for which this notification is intended\"  \n        }\n    }\n\n    action {\n        DBUpdate(`notifications`, $notific_id, `timestamp started_processing_time,started_processing_id`, $block_time, $key_id) \n    }\n}","Conditions":"ContractConditions(\"MainCondition\")"},{"Name":"Notifications_Single_Send","Value":"contract Notifications_Single_Send {\n    data {\n        member_id int\n        icon_name string\n        text_header string\n        text_body string\n        page_name string\n        params_val string\n    }\n\n    conditions {\n\t\t$member_map = DBFind(\"member\").Where(\"id = $\", $member_id).Row()\n\t\t\n\t\tif ($member_map[\"id\"] == nil){\n\t\t\twarning \"Member not found\"\n\t\t}\n    }\n\n    action {\n\t\t$notification_id = DBInsert(`notifications`, `icon,header_text,body_text,page_name,notification_type,recipient_id,recipient_name,recipient_avatar,timestamp date_create,page_params`, \n\t\t\t$icon_name, $text_header, $text_body, $page_name, 1, $member_id, $member_map[\"member_name\"], $member_map[\"avatar\"], $block_time, $params_val)\n    }\n}","Conditions":"ContractConditions(`MainCondition`)"},{"Name":"Notifications_Single_Close","Value":"contract Notifications_Single_Close {\n    data {\n\t    notific_id int\n    }\n\n    conditions {\n    }\n\n    action {\n        DBUpdate(`notifications`, $notific_id, `closed,timestamp finished_processing_time,finished_processing_id`, 1, $block_time, $key_id) \n    }\n}","Conditions":"ContractConditions(`MainCondition`)"},{"Name":"Notifications_Roles_Send","Value":"contract Notifications_Roles_Send {\n    data {\n        role_id int\n        closure_type int\n\n        icon_name string\n        text_header string\n        text_body string\n        page_name string\n        params_val string \n    }\n\n    conditions {\n\t\t$assign_id = DBFind(`roles_assign`).Where(`role_id=$ and delete=$`, $role_id, 0).One(\"id\")\n        if ($assign_id == nil){\n\t\t\twarning \"Role does not contain members\"\n\t\t}\n    }\n\n    action {\n        //closure_type - Single\n        if ($closure_type == 1){\n\t\t\t$role_name = DBFind(\"roles_list\").Where(\"id=$\", $role_id).One(\"role_name\")\n\t\t\n            $notification_id = DBInsert(`notifications`, `icon,header_text,body_text,page_name,notification_type,role_id,role_name,timestamp date_create,page_params`, \n                $icon_name, $text_header, $text_body, $page_name, 2, $role_id, $role_name, $block_time, $params_val)\n        } \n\t\t//closure_type - Multiple \n\t\telse {\n            $ret_role = DBFind(\"roles_assign\").Columns(\"member_id\").Where(\"role_id = $ and delete = $\", $role_id, 0).Order(\"id\")\n\n            $len_role = Len($ret_role)\n            $i_role = 0\n            while($i_role \u003c $len_role){\n                var vals_role map\n                vals_role = $ret_role[$i_role] \n\n                Notifications_Single_Send(\"member_id,icon_name,text_header,text_body,page_name,params_val\", \n                                vals_role[\"member_id\"], $icon_name, $text_header, $text_body, $page_name, $params_val)\n\n                $i_role = $i_role + 1\n            }\n        }\n    }\n}","Conditions":"ContractConditions(\"MainCondition\")"},{"Name":"Profile_Edit","Value":"contract Profile_Edit {\n    data {\n\t    member_name string\n        avatar string \"image\"\n    }\n\n    conditions {\n    }\n\n    action {\n\t\t$member_id = DBFind(\"member\").Where(\"id = $\", $key_id).One(\"id\")\n        if ($member_id != nil){\n            DBUpdate(`member`, Int($member_id), `member_name,avatar`, $member_name, $avatar)\n        } \n        else{\n            DBInsert(`member`, `id,member_name,avatar`, $key_id, $member_name, $avatar)\n        }\n    }\n}","Conditions":"ContractConditions(`MainCondition`)"},{"Name":"RoleConditions","Value":"contract RoleConditions {\n    data{\n        role string\n    }\n    conditions {\n        $assigned_id = DBFind(\"roles_assign\").Where(\"role_name=? and member_id=? and delete=0\", $role, $key_id).One(\"id\")\n\t\tif ($assigned_id == nil){\n            warning Sprintf(\"This action allowed only for role: %v\", $role)\n        }\n    }\n}","Conditions":"ContractConditions(\"MainCondition\")"},{"Name":"Roles_Assign","Value":"contract Roles_Assign {\n    data {\n\t    role_id int\n\t\tmember_id int\n    }\n\n    conditions {\n        $role_map = DBFind(\"roles_list\").Where(\"id = $\", $role_id).Row()\n        $member_map = DBFind(\"member\").Where(\"id = $\", $member_id).Row()\n        $appointer_map = DBFind(\"member\").Where(\"id = $\", $key_id).Row()\t\n\t\n\t\tif ($role_map[\"id\"] == nil){\n\t\t\twarning \"Role not found\"\n\t\t}\n\t\tif ($member_map[\"id\"] == nil){\n\t\t\twarning \"Member not found\"\n\t\t}\n\t\tif ($appointer_map[\"id\"] == nil){\n\t\t\twarning \"Appointer not found\"\n\t\t}\n\t\t\n\t\tif ( Int($role_map[\"delete\"]) == 1 ){\n\t\t\twarning \"This role has been deleted. The appointment of members is impossible\"\n\t\t}\t\t\n\t\tif ( Int($role_map[\"role_type\"]) != 1 ){\n\t\t\twarning \"This role is not assignable. The appointment of members is impossible\"\n\t\t}\n\t\tif ( Int($role_map[\"creator_id\"]) != $key_id ){\n\t\t\twarning \"Sorry, you are not the creator of this role. The appointment of members is impossible\"  \n\t\t}\n\t\t\n\t\t$assign_id = DBFind(`roles_assign`).Where(`role_id=$ and member_id=$ and delete=$`, $role_id, $member_id, 0).One(\"id\")\n\t\tif ($assign_id != nil){\n\t\t\twarning \"This member has already been added\" \n\t\t}\t\t\n    }\n\n    action {\n\t\tDBInsert(`roles_assign`, `role_id,role_type,role_name,member_id,member_name,member_avatar,appointed_by_id,appointed_by_name,timestamp date_start,delete`, \n\t\t\t$role_id, $role_map[\"role_type\"], $role_map[\"role_name\"], $member_id, $member_map[\"member_name\"], $member_map[\"avatar\"], $key_id, $appointer_map[\"member_name\"], $block_time, 0)\n\t}\n}","Conditions":"ContractConditions(`MainCondition`)"},{"Name":"Roles_Create","Value":"contract Roles_Create {\n\tdata {\n\t\trole_name string\n\t\trole_type int\n\t}\n\n\tconditions {\n\t\tif ($role_type == 3){\n\t\t\twarning \"System role can not be created\"\n\t\t}\n\n\t\t$member_map = DBFind(\"member\").Where(\"id = $\", $key_id).Row()\n\t\tif ($member_map[\"id\"] == nil){\n\t\t\twarning \"You are not a member of the ecosystem\"\n\t\t}\n\t}\n\n\taction { \n\t\tDBInsert(`roles_list`, `role_name,role_type,creator_id,creator_name,creator_avatar,timestamp date_create,delete`, \n\t\t\t\t$role_name, $role_type, $key_id, $member_map[\"member_name\"], $member_map[\"avatar\"], $block_time, 0)\n\t}\n}","Conditions":"ContractConditions(`MainCondition`)"},{"Name":"Roles_Unassign","Value":"contract Roles_Unassign {\n    data {\n\t    row_id int\n    }\n\n    conditions {\n\t\t$assign_map = DBFind(`roles_assign`).Where(`id=$`, $row_id).Row()\n\t\tif ($assign_map[\"id\"] == nil){\n\t\t\twarning \"Role not found for the specified member\"\n\t\t}\n\n\t\t$role_map = DBFind(\"roles_list\").Where(\"id=$\", Int($assign_map[\"role_id\"])).Row()\n\t\tif ($role_map[\"id\"] == nil){\n\t\t\twarning \"Role not found in the roles registry\"\n\t\t}\n\n\t\tif (Int($role_map[\"creator_id\"]) != $key_id){\n\t\t\twarning \"Sorry, you are not the creator of this role\"\n\t\t}\t\n    }\n\n    action {\n\t\tDBUpdate(`roles_assign`, $row_id, `delete,timestamp date_end`, 1, $block_time)\n    }\n}","Conditions":"ContractConditions(`MainCondition`)"},{"Name":"Roles_Del","Value":"contract Roles_Del {\n    data {\n\t    role_id int\n    }\n\n    conditions {\n\t\t$role_map = DBFind(\"roles_list\").Where(\"id=$\", $role_id).Row()\n\t\t\n\t\tif ($role_map[\"id\"] == nil){\n\t\t\twarning \"Role not found\"\n\t\t}\t\n\t\n\t\tif (Int($role_map[\"role_type\"]) == 3){\n\t\t\twarning \"System role can not be removed\"  \n\t\t}\n\t\tif (Int($role_map[\"creator_id\"]) != $key_id){\n\t\t\twarning \"Sorry, you are not the creator of this role\"\n\t\t}\n    }\n\n    action {\n\t\t$ret_assign = DBFind(\"roles_assign\").Columns(\"id\").Where(\"role_id = $ and delete = $\", $role_id, 0).Order(\"id\")\n\n\t\t$len_assign = Len($ret_assign)\n\t\t$i_assign = 0\n\t\twhile($i_assign \u003c $len_assign){\n\t\t\t$vals_assign = $ret_assign[$i_assign] \n\t\t\tRoles_Unassign(\"row_id\", Int($vals_assign[\"id\"]))\n\t\t\t$i_assign = $i_assign + 1\n\t\t} \n\n\t\tDBUpdate(`roles_list`, $role_id, `delete,timestamp date_delete`, 1, $block_time)\n    }\n}","Conditions":"ContractConditions(`MainCondition`)"},{"Name":"voting_UpdateDataForGraphs","Value":"contract voting_UpdateDataForGraphs {\n    data {\n        votingID int\n    }\n\n    conditions {\n\t\t$voting_map = DBFind(\"voting_instances\").Where(\"id=$\", $votingID).Row()\n\t\tif ($voting_map[\"id\"] == nil){\n\t\t\twarning \"Voting is not found\"\n\t\t}\t\n\t\t\n\t\t$number_participants = Int($voting_map[\"number_participants\"])  // number of participants\n\t\t$number_voters       = Int($voting_map[\"number_voters\"])        // number of voters\n\t\t$volume              = Int($voting_map[\"volume\"])               // percentage of votes for this vote\n    }\n\n    action {\n\t\t// increment count of voters\n\t\t$number_voters = $number_voters + 1\n\t\t\n\t\t// calculate the percentage of the ratio of the number of voters to the number of participants (for the graph)\n\t\t$percent_voters = ($number_voters * 100) / $number_participants\n\t\tif ($percent_voters \u003e 100) {$percent_voters = 100}\n\t\t\n\t\t// update progress\n\t\t$percent_success = ($percent_voters * 100) / $volume\n\t\tif ($percent_success \u003e 100) {$percent_success = 100}\n\t\t\n\t\t// update the flag of success\n\t\t$flag_success = 0\n\t\tif ($percent_success == 100) {$flag_success = 1}\n\n\t\tDBUpdate(`voting_instances`, $votingID, `number_voters,percent_voters,percent_success,flag_success`, \n\t\t\t\t$number_voters, $percent_voters, $percent_success, $flag_success)\n    } \n}","Conditions":"ContractConditions(`MainCondition`)"},{"Name":"voting_RejectDecision","Value":"contract voting_RejectDecision {\n    data {\n        votingID int\n    }\n\n    conditions {\n\t\t$voting_map = DBFind(\"voting_instances\").Where(\"id=$\", $votingID).Row()\n\t\tif ($voting_map[\"id\"] == nil){\n\t\t\twarning \"Voting is not found\"\n\t\t}\n\t\t\n\t\t// check the participant of the voting\n\t\t$participant_id = DBFind(`voting_participants`).Where(\"voting_id=$ and member_id=$\", $votingID, $key_id).One(\"id\")\n\t\tif ($participant_id == nil){\n\t\t\twarning \"You are not a participant in this voting\"\n\t\t}\n    }\n\n    action {\n\t\t// if notifications have been sent, then close it\n\t\tif ( Int($voting_map[\"flag_notifics\"]) == 1 ){\n\t\t\tvar params string\n\t\t\tparams = \"notific_param=\" + Str($votingID)\t\n\t\t\t$notific_id = DBFind(`notifications`).Where(\"recipient_id=$ and page_name=$ and page_params=$ and closed=$\", $key_id, \"voting_view\", params, 0).One(\"id\")\n\t\t\tif ($notific_id != nil){\n\t\t\t\tNotifications_Single_Close(\"notific_id\", Int($notific_id))\n\t\t\t}\n\t\t}\n\n\t\t// check the decision\n\t\tif ( Int($voting_map[\"flag_decision\"]) == 1 ){\n\t\t\twarning \"Decision was taken. Voting is now not possible\"\n\t\t} \n\t\t\n\t\t// check start-end of voting time\n\t\t$voting_start = DBFind(`voting_instances`).Where(\"id=$ and startdate \u003c now()\", $votingID).One(\"id\")\n\t\t$voting_end   = DBFind(`voting_instances`).Where(\"id=$ and enddate   \u003e now()\", $votingID).One(\"id\")\n\t\tif ($voting_start == nil){\n\t\t\twarning \"Voting has not yet begun. Try again later, please\"\n\t\t}\n\t\tif ($voting_end == nil){\n\t\t\twarning \"Voting has expired. Voting is now not possible\"\n\t\t}\n\t\t\n\t\t//-----------------------------------------------------------------------------------------------\n\n\t\t// write the result of the voting\n\t\tDBUpdate(`voting_participants`, Int($participant_id), `timestamp decision_date, decision`, $block_time, -1)\n\n\t\tvoting_UpdateDataForGraphs(\"votingID\", $votingID)\n    }\n}","Conditions":"ContractConditions(`MainCondition`)"},{"Name":"voting_CheckDecision","Value":"contract voting_CheckDecision {\n    data {\n        votingID int\n    }\n\n    conditions {\n\t\t$voting_map = DBFind(\"voting_instances\").Where(\"id=$ and enddate \u003c now()\", $votingID).Row()\n\t\tif ($voting_map[\"id\"] == nil){\n\t\t\twarning \"Voting has not expired. Try again later, please\"\n\t\t}\n\t\tif ( Int($voting_map[\"creator_id\"]) != $key_id ){\n\t\t\twarning \"Only creator the voting can check decision\"\n\t\t}\t\n\t\n\t\t$type_voting\t\t\t = Int($voting_map[\"type_voting\"])\t\t\t\t\t// type of voting - system or custom\n\t\t$number_voters           = Int($voting_map[\"number_voters\"])                // number of participants who have already voted\n\t\t$optional_role_vacancies = Int($voting_map[\"optional_role_vacancies\"])      // number of vacancies for the role\n\t\t$voting_name             = string($voting_map[\"name\"])                      // voting name\n\t\t$quorum                  = Int($voting_map[\"quorum\"])                       // quorum value\n\t\t$optional_role_id        = Int($voting_map[\"optional_role_id\"])             // role id\n\t\t$contract_accept         = string($voting_map[\"optional_contract_accept\"])  // contract accept \n\t\t$contract_reject         = string($voting_map[\"optional_contract_reject\"])  // contract reject \n\t\t$flag_success\t\t\t = Int($voting_map[\"flag_success\"])             \t// flag of success\n\t\t$typedecision\t\t\t = Int($voting_map[\"typedecision\"])       \t\t\t// type of decision\n\t\t\n\t\t$chech_id = DBFind(\"voting_subject\").Where(\"voting_id=$\", $votingID).One(\"id\")\n\t\tif ($chech_id == nil){\n\t\t\twarning \"Subject of voting is not found\"\n\t\t}\n    }\n\n    action {\n\t\t// if notifications have been sent, then close it\n\t\tvar params string\n\t\tparams = \"notific_param=\" + Str($votingID)\t\n\t\t$ret_notifics = DBFind(\"notifications\").Where(\"page_name=$ and page_params=$ and closed=$\", \"voting_view\", params, 0)\n\t\t$i1 = 0\n\t\twhile($i1 \u003c Len($ret_notifics)){\n\t\t\t$vals_notifics = $ret_notifics[$i1] \n\t\t\tNotifications_Single_Close(\"notific_id\", Int($vals_notifics[\"id\"]))\n\t\t\t$i1 = $i1 + 1\n\t\t} \n\n\t\t//if the flag of success = true (enough participants to make a decision)\n\t\tif ($flag_success == 1){\n\t\t\tif ( ($typedecision == 1) || ($typedecision == 2) ){\n\t\t\t\t$number_inserts = 0     // number of candidates who have already been added (for comparison with the number of vacancies)\n\t\t\t\t$flag_decision = -1     // none of the candidates has been added yet\n\t\t\t\t\n\t\t\t\t$ret_subject = DBFind(\"voting_subject\").Where(\"voting_id=$\", $votingID).Order(\"number_accept DESC\")\n\t\t\t\t$i2 = 0\n\t\t\t\twhile($i2 \u003c Len($ret_subject)){\n\t\t\t\t\t$vals_subject = $ret_subject[$i2]\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t// if there are still vacancies\n\t\t\t\t\tif ($number_inserts \u003c $optional_role_vacancies)\n\t\t\t\t\t{\n\t\t\t\t\t\t// calculate the percentage to compare it with the quorum\n\t\t\t\t\t\t$v_percent =  Int($vals_subject[\"number_accept\"]) * 100 / $number_voters\n\t\t\t\t\t\t// if percentage \u003e= quorum values, then this candidate must be added to the role\n\t\t\t\t\t\tif ($v_percent \u003e= $quorum)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// get role name\n\t\t\t\t\t\t\t$role_name = DBFind(`roles_list`).Where(\"id=$\", $optional_role_id).One(\"role_name\")\n\t\t\t\t\t\t\tif ($role_name != nil){\n\t\t\t\t\t\t\t\t// add a candidate to the role\n\t\t\t\t\t\t\t\tDBInsert(`roles_assign`, `role_id,role_name,member_id,member_name,member_avatar,timestamp date_start,appointed_by_id,appointed_by_name`, \n\t\t\t\t\t\t\t\t\t$optional_role_id, string($role_name), Int($vals_subject[\"member_id\"]), string($vals_subject[\"member_name\"]), string($vals_subject[\"member_avatar\"]), $block_time, $votingID, $voting_name) \n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// increment of the counter of candidates\n\t\t\t\t\t\t\t\t$number_inserts = $number_inserts + 1\n\t\t\t\t\t\t\t\t// if at least one of the candidates was added to the role, then the voting decision is considered successful\n\t\t\t\t\t\t\t\t$flag_decision = 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$i2 = $i2 + 1\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tDBUpdate(`voting_instances`, $votingID, `flag_decision`, $flag_decision)\n\t\t\t\n\t\t\t\t// starting optional contract\n\t\t\t\tif ($flag_decision == 1){\n\t\t\t\t\tif ($contract_accept != \"\"){\n\t\t\t\t\t\tvar par map\n\t\t\t\t\t\tCallContract($contract_accept, par) \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif ($contract_reject != \"\"){\n\t\t\t\t\t\tvar par map\n\t\t\t\t\t\tCallContract($contract_reject, par) \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif ($typedecision == 3){\n\t\t\t\t$number_accept = DBFind(`voting_subject`).Where(\"voting_id=$\", $votingID).One(\"number_accept\")\n\t\t\t\tif ($number_accept != nil){\n\t\t\t\t\t// calculate the percentage to compare it with the quorum\n\t\t\t\t\t$v_percent =  Int($number_accept)  * 100 / $number_voters\n\t\t\t\t\t\n\t\t\t\t\t// if percentage \u003e= quorum values, then this document will be approved\n\t\t\t\t\tif ($v_percent \u003e= $quorum){\n\t\t\t\t\t\t$flag_decision = 1\n\t\t\t\t\t}\n\t\t\t\t\t// otherwise the document will be rejected\n\t\t\t\t\telse{\n\t\t\t\t\t\t$flag_decision = -1    \n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tDBUpdate(`voting_instances`, $votingID, `flag_decision`, $flag_decision)\n\t\t\t\t\n\t\t\t\t\t// starting optional contract\n\t\t\t\t\tif ($flag_decision == 1){\n\t\t\t\t\t\tif ($contract_accept != \"\"){\n\t\t\t\t\t\t\tvar par map\n\t\t\t\t\t\t\tCallContract($contract_accept, par) \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif ($contract_reject != \"\"){\n\t\t\t\t\t\t\tvar par map\n\t\t\t\t\t\t\tCallContract($contract_reject, par) \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif ($typedecision == 4){\n\t\t\t\t$subject_map = DBFind(\"voting_subject\").Where(\"voting_id=$\", $votingID).Row()\n\t\t\t\tif ($subject_map[\"id\"] != nil){\n\t\t\t\t\t$number_accept = Int($subject_map[\"number_accept\"])\n\t\t\t\t\t\n\t\t\t\t\t// calculate the percentage to compare it with the quorum\n\t\t\t\t\t$v_percent =  $number_accept  * 100 / $number_voters\n\t\t\t\t\t\n\t\t\t\t\t// if percentage \u003e= quorum values, then this document will be approved\n\t\t\t\t\tif ($v_percent \u003e= $quorum){\n\t\t\t\t\t\t$flag_decision = 1\n\t\t\t\t\t\t\n\t\t\t\t\t\t$decisionTable  = string($subject_map[\"formal_decision_table\"])\n\t\t\t\t\t\t$decisionId     = Int($subject_map[\"formal_decision_tableid\"])\n\t\t\t\t\t\t$decisionColumn = string($subject_map[\"formal_decision_column\"])\n\t\t\t\t\t\t$decisionValue  = string($subject_map[\"formal_decision_colvalue\"])\n\t\t\t\t\t\t\n\t\t\t\t\t\t// type of voting - custom\n\t\t\t\t\t\tif ($type_voting == 1){\n\t\t\t\t\t\t\t// ALWAYS CHECK THE PERMISSION\n\t\t\t\t\t\t\tDBUpdate($decisionTable, $decisionId, $decisionColumn, $decisionValue)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// type of voting - system\n\t\t\t\t\t\tif ($type_voting == 2){\n\t\t\t\t\t\t\tDBUpdateSysParam($decisionColumn, $decisionValue, ``)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// otherwise the document will be rejected\n\t\t\t\t\telse{\n\t\t\t\t\t\t$flag_decision = -1    \n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tDBUpdate(`voting_instances`, $votingID, `flag_decision`, $flag_decision)\n\t\t\t\t\n\t\t\t\t\t// starting optional contract\n\t\t\t\t\tif ($flag_decision == 1){\n\t\t\t\t\t\tif ($contract_accept != \"\"){\n\t\t\t\t\t\t\tvar par map\n\t\t\t\t\t\t\tCallContract($contract_accept, par) \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif ($contract_reject != \"\"){\n\t\t\t\t\t\t\tvar par map\n\t\t\t\t\t\t\tCallContract($contract_reject, par) \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif ($typedecision == 5){\n\t\t\t\t$subject_map = DBFind(\"voting_subject\").Where(\"voting_id=$\", $votingID).Row()\n\t\t\t\tif ($subject_map[\"id\"] != nil){\n\t\t\t\t\t$number_accept = Int($subject_map[\"number_accept\"])\n\t\t\t\t\t\n\t\t\t\t\t// calculate the percentage to compare it with the quorum\n\t\t\t\t\t$v_percent =  $number_accept  * 100 / $number_voters\n\t\t\t\t\t\n\t\t\t\t\t$con_accept  = string($subject_map[\"contract_accept\"])\n\t\t\t\t\t$con_reject  = string($subject_map[\"contract_reject\"])    \n\t\t\t\t\t\n\t\t\t\t\t// if percentage \u003e= quorum values, then this document will be approved\n\t\t\t\t\tif ($v_percent \u003e= $quorum){\n\t\t\t\t\t\t$flag_decision = 1\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar par map\n\t\t\t\t\t\tCallContract($con_accept, par)\n\t\t\t\t\t}\n\t\t\t\t\t// otherwise the document will be rejected\n\t\t\t\t\telse{\n\t\t\t\t\t\t$flag_decision = -1  \n\n\t\t\t\t\t\tvar par map\n\t\t\t\t\t\tCallContract($con_reject, par)  \t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tDBUpdate(`voting_instances`, $votingID, `flag_decision`, $flag_decision)\n\t\t\t}\n\t\t}\n\t\t// decision can not be made (not enough participants to make a decision)\n\t\telse {\n\t\t\tDBUpdate(`voting_instances`, $votingID, `flag_decision`, -2)   \n\t\t}\n    }\n}","Conditions":"ContractConditions(`MainCondition`)"},{"Name":"voting_Invite","Value":"contract voting_Invite {\n    data {\n        votingID int\n        var_id int      //0, member_id, role_id\n    }\n\n    conditions {\n\t\t$voting_map = DBFind(\"voting_instances\").Where(\"id=$ and enddate \u003e now()\", $votingID).Row()\t\n\t\tif ($voting_map[\"id\"] == nil){\n\t\t\twarning \"Voting has expired. Can not add new participants\"\n\t\t}\n\t\n\t\t$type_participants = Int($voting_map[\"typeparticipants\"])\n\t\t$number_participants = Int($voting_map[\"number_participants\"])\n\t\n\t\tif (($number_participants \u003e 1) \u0026\u0026 (Int($voting_map[\"type_voting\"]) == 2)){\n\t\t\twarning \"This vote is a system. Add new participants are not possible\"\n\t\t}\n\n\t\tif ($type_participants == 2){       //list of candidates\n\t\t\t$participant_id = DBFind(\"voting_participants\").Where(\"voting_id=$ and member_id=$\", $votingID, $var_id).One(\"id\")\n\t\t\tif ($participant_id != nil){\t\t\n\t\t\t\twarning \"Member has already been added before\"\n\t\t\t}\n\t\t}\n\n\t\tif ($type_participants == 3){       //list of candidates\n\t\t\t$participant_id = DBFind(\"voting_participants\").Where(\"voting_id=$\", $votingID).One(\"id\")\n\t\t\tif ($participant_id != nil){\t\t\n\t\t\t\twarning \"Voting participants have already been added before\"\n\t\t\t}\n\t\t}\n    }\n\n    action {\n\t\tif ($type_participants == 1){\n\t\t\t$ret_member = DBFind(\"member\").Where(\"id != $\", 0).Order(\"id\")\n\t\t\t$i = 0\n\t\t\twhile($i \u003c Len($ret_member)){\n\t\t\t\t$vals_member = $ret_member[$i]\n\t\t\t\t\n\t\t\t\tDBInsert(`voting_participants`, `voting_id, member_id, member_name, member_avatar, decision`, $votingID, $vals_member[\"id\"], $vals_member[\"member_name\"], $vals_member[\"avatar\"], 0)  \n\t\t\t\t$number_participants = $number_participants + 1\n\t\t\t\t$i = $i + 1\n\t\t\t} \n\t\t}\n\n\t\tif ($type_participants == 2){\n\t\t\t$member_map = DBFind(\"member\").Where(\"id = $\", $var_id).Row()\n\t\t\tif ($member_map[\"id\"] != nil){\n\t\t\t\tDBInsert(`voting_participants`, `voting_id, member_id, member_name, member_avatar, decision`, $votingID, $var_id, $member_map[\"member_name\"], $member_map[\"avatar\"], 0)  \n\t\t\t\t$number_participants = $number_participants + 1\n\t\t\t}\n\t\t}\n\n\t\tif ($type_participants == 3){\n\t\t\t$ret_member = DBFind(\"roles_assign\").Columns(\"member_id,member_name,member_avatar\").Where(\"role_id=$ and delete=0\", $var_id).Order(\"id\")\n\t\t\t$i = 0\n\t\t\twhile($i \u003c Len($ret_member)){\n\t\t\t\t$vals_member = $ret_member[$i]\n\t\t\t\t\n\t\t\t\tDBInsert(`voting_participants`, `voting_id, member_id, member_name, member_avatar, decision`, $votingID, $vals_member[\"member_id\"], $vals_member[\"member_name\"], $vals_member[\"member_avatar\"], 0)  \n\t\t\t\t$number_participants = $number_participants + 1\n\t\t\t\t$i = $i + 1\n\t\t\t} \n\t\t}\n\n\t\tDBUpdate(`voting_instances`, $votingID, `number_participants`, $number_participants)\n    }\n}","Conditions":"ContractConditions(\"MainCondition\")"},{"Name":"voting_Delete","Value":"contract voting_Delete {\n    data {\n        votingID int\n    }\n\n    conditions {\n\t\t$voting_map = DBFind(\"voting_instances\").Where(\"id=? and startdate \u003e now()\", $votingID).Row()\n\t\tif ($voting_map[\"id\"] == nil){\n\t\t\twarning \"Voting already started. Delete voting impossible\"\n\t\t}\t\n\t\t\n\t\tif (Int($voting_map[\"creator_id\"]) != $key_id){\n\t\t\twarning \"You are not the creator of the voting\"\n\t\t}\n    }\n\n    action {\n\t\tDBUpdate(`voting_instances`, $votingID, `delete`, 1)\n    }\n}","Conditions":"ContractConditions(\"MainCondition\")"},{"Name":"voting_CreateNew","Value":"contract voting_CreateNew {\n    data {\n        voting_name string\n        type_voting int\n        description string\n        type_participants int\n        type_decision int\n        now_date string \"date\"\n        start_time string \"date\"\n        start_date string \"date\"\n        end_date string \"date\"\n        end_time string \"date\"\n        volume int\n        quorum int\n    }\n\n    func conditions {\n        $start_date = $start_date + \" \"+ $start_time \n        $end_date = $end_date + \" \"+ $end_time \n\n        if ( $now_date \u003e= $start_date ){\n            warning \"Voting start date is less than the current date\"\n        }\n        \n        if ( $start_date \u003e= $end_date ){\n            warning \"Voting end date is less than the start date\"\n        }\n        \n        if ( ($volume \u003c 50) || ($volume \u003e 100) ){\n            warning \"Volume should be in the range from 50 to 100\"  \n        }\n        \n        if ( ($quorum \u003c 5) || ($quorum \u003e 100) ){\n            warning \"Quorum should be in the range from 5 to 100\"  \n        }\n\n\t\t$member_map = DBFind(\"member\").Where(\"id=$\", $key_id).Row()\n\t\tif ($member_map[\"id\"] == nil){\n\t\t\twarning \"You are not a member of the ecosystem\"\n\t\t}\n    }\n\n    func action {\n\t\t$voting_id = DBInsert(`voting_instances`, `name,type_voting,description,typeparticipants,typedecision,startdate,enddate,volume,quorum,creator_id,creator_name,creator_avatar,flag_success,percent_success,number_participants,number_voters,flag_decision,flag_notifics,delete`, \n\t\t\t\t\t$voting_name, $type_voting, $description, $type_participants, $type_decision, $start_date, $end_date, $volume, $quorum, $key_id, $member_map[\"member_name\"], $member_map[\"avatar\"], 0, 0, 0, 0, 0, 0, 0)\n\t\n\t\t// if all members are voting participants\n\t\tif ($type_participants==1){\n\t\t\tvoting_Invite(\"votingID,var_id\", $voting_id, 0)\n\t\t}\n\t}\n}","Conditions":"ContractConditions(\"MainCondition\")"},{"Name":"voting_AcceptDecision","Value":"contract voting_AcceptDecision {\n    data {\n        votingID int\n    }\n\n    conditions {\n\t\t$voting_map = DBFind(\"voting_instances\").Where(\"id=$\", $votingID).Row()\n\t\tif ($voting_map[\"id\"] == nil){\n\t\t\twarning \"Voting is not found\"\n\t\t}\n\t\t$subject_map = DBFind(\"voting_subject\").Where(\"voting_id=$\", $votingID).Row()\n\t\tif ($subject_map[\"id\"] == nil){\n\t\t\twarning \"Subject of voting is not found\"\n\t\t}\n\t\t\n\t\t// check the participant of the voting\n\t\t$participant_id = DBFind(`voting_participants`).Where(\"voting_id=$ and member_id=$\", $votingID, $key_id).One(\"id\")\n\t\tif ($participant_id == nil){\n\t\t\twarning \"You are not a participant in this voting\"\n\t\t}\n    }\n\n    action {\n\t\t// if notifications have been sent, then close it\n\t\tif ( Int($voting_map[\"flag_notifics\"]) == 1 ){\n\t\t\tvar params string\n\t\t\tparams = \"notific_param=\" + Str($votingID)\t\n\t\t\t$notific_id = DBFind(`notifications`).Where(\"recipient_id=$ and page_name=$ and page_params=$ and closed=$\", $key_id, \"voting_view\", params, 0).One(\"id\")\n\t\t\tif ($notific_id != nil){\n\t\t\t\tNotifications_Single_Close(\"notific_id\", Int($notific_id))\n\t\t\t}\n\t\t}\n\n\t\t// check the decision\n\t\tif ( Int($voting_map[\"flag_decision\"]) == 1 ){\n\t\t\twarning \"Decision was taken. Voting is now not possible\"\n\t\t} \n\t\t\n\t\t// check start-end of voting time\n\t\t$voting_start = DBFind(`voting_instances`).Where(\"id=$ and startdate \u003c now()\", $votingID).One(\"id\")\n\t\t$voting_end   = DBFind(`voting_instances`).Where(\"id=$ and enddate   \u003e now()\", $votingID).One(\"id\")\n\t\tif ($voting_start == nil){\n\t\t\twarning \"Voting has not yet begun. Try again later, please\"\n\t\t}\n\t\tif ($voting_end == nil){\n\t\t\twarning \"Voting has expired. Voting is now not possible\"\n\t\t}\n\t\t\n\t\t//-----------------------------------------------------------------------------------------------\n\n\t\t// write the result of the voting\n\t\tDBUpdate(`voting_participants`, Int($participant_id), `timestamp decision_date, decision`, $block_time, 1)\n\n\t\t// increment count of accept\n\t\t$subject_id     = Int($subject_map[\"id\"])\n\t\t$number_accept  = Int($subject_map[\"number_accept\"])\n\t\t$number_accept   = $number_accept + 1\n\t\tDBUpdate(`voting_subject`, $subject_id, `number_accept`, $number_accept)\n\n\t\tvoting_UpdateDataForGraphs(\"votingID\", $votingID)\n    }\n}","Conditions":"ContractConditions(`MainCondition`)"},{"Name":"voting_SendNotifics","Value":"contract voting_SendNotifics {\n    data {\n        votingID int\n    }\n\n    conditions {\n\t\t$voting_id = DBFind(`voting_instances`).Where(\"id=$ and enddate \u003e now()\", $votingID).One(\"id\")\n        if ($voting_id == nil){\n\t\t\twarning \"Voting has expired. Notifications can not be sent\"\n\t\t}\n\t\n\t\t$voting_map = DBFind(\"voting_instances\").Where(\"id=$ and startdate \u003c now()\", $votingID).Row()\n\t\tif ($voting_map[\"id\"] == nil){\n\t\t\twarning \"Voting has not yet begun. Try again later, please\"\n\t\t}\t\n\t\t\n\t\tif( Int($voting_map[\"creator_id\"]) != $key_id ){\n\t\t\twarning \"You are not the creator of the voting\"\n\t\t}\n\t\tif( Int($voting_map[\"flag_notifics\"]) == 1 ){\n\t\t\twarning \"Notifications have already been sent\"\n\t\t}\n\t\t\n\t\t$voting_name = string($voting_map[\"name\"])\n    }\n\n    action {\n\t\t$ret_participants = DBFind(\"voting_participants\").Where(\"voting_id=$ and decision=$\", $votingID, 0)\n\t\t$i = 0\n\t\twhile($i \u003c Len($ret_participants)){\n\t\t\t$vals_participants = $ret_participants[$i]\n\t\t\t$recipient = Int($vals_participants[\"member_id\"])\n\t\t\t\n\t\t\tvar params string\n\t\t\tparams = \"notific_param=\" + Str($votingID)\n\t\t\t\n\t\t\tNotifications_Single_Send(\"member_id,icon_name,text_header,text_body,page_name,params_val\", \n\t\t\t\t\t\t\t\t$recipient, \"fa-check\", \"Voting\", $voting_name, \"voting_view\", params)\n\t\t\t$i = $i + 1\n\t\t}\n\t\t\n\t\tDBUpdate(`voting_instances`, $votingID, `flag_notifics`, 1)\n    }\n}","Conditions":"ContractConditions(`MainCondition`)"},{"Name":"voting_SubjectCheckFulldata","Value":"contract voting_SubjectCheckFulldata {\n    data {\n        votingID int\n    }\n\n    conditions {\n\t\t$voting_map = DBFind(\"voting_instances\").Where(\"id=?\", $votingID).Row()\n\t\tif ($voting_map[\"id\"] == nil){\n\t\t\twarning \"Voting is not found\"\n\t\t}\t\n\t\t\n\t\t$subject_map = DBFind(\"voting_subject\").Where(\"voting_id=?\", $votingID).Row()\n\t\tif ($subject_map[\"id\"] == nil){\n\t\t\twarning \"Subject of voting is not found\"\n\t\t}\n\t\t\n\t\t$typedecision = Int($voting_map[\"typedecision\"])\n    }\n\n    action {\n\t\tif ( ($typedecision == 1) || ($typedecision == 2) ){\n\t\t\tif ( (Int($voting_map[\"optional_number_cands\"]) \u003e 0) \u0026\u0026 (Int($voting_map[\"optional_role_vacancies\"]) \u003e 0) \u0026\u0026 (Int($voting_map[\"optional_role_id\"])  \u003e 0) ){\n\t\t\t\tDBUpdate(`voting_instances`, $votingID, `flag_fulldata`, 1)\n\t\t\t} \n\t\t}\n\n\t\tif ($typedecision == 3){\n\t\t\tif ( (string($subject_map[\"text_document\"]) != \"\") \u0026\u0026 (string($subject_map[\"text_doc_hash\"]) != \"\") ){\n\t\t\t\tDBUpdate(`voting_instances`, $votingID, `flag_fulldata`, 1)\n\t\t\t} \n\t\t}\n\n\t\tif ($typedecision == 4){\n\t\t\tif ( (string($subject_map[\"formal_decision_description\"]) != \"\") \u0026\u0026 (string($subject_map[\"formal_decision_table\"])  != \"\") \u0026\u0026 \n\t\t\t\t (string($subject_map[\"formal_decision_tableid\"])     != \"\") \u0026\u0026 (string($subject_map[\"formal_decision_column\"]) != \"\") \u0026\u0026 \n\t\t\t\t (string($subject_map[\"formal_decision_colvalue\"])    != \"\") ){\n\t\t\t\tDBUpdate(`voting_instances`, $votingID, `flag_fulldata`, 1)\n\t\t\t} \n\t\t}\n\n\t\tif ($typedecision == 5){\n\t\t\tif ( (string($subject_map[\"contract_accept\"]) != \"\") \u0026\u0026 (string($subject_map[\"contract_reject\"]) != \"\") ){\n\t\t\t\tDBUpdate(`voting_instances`, $votingID, `flag_fulldata`, 1)\n\t\t\t} \n\t\t}\n    }\n}","Conditions":"ContractConditions(\"MainCondition\")"},{"Name":"voting_SubjectCandidates","Value":"contract voting_SubjectCandidates {\n    data {\n        votingID int\n        memberID int\n    }\n\n    conditions {\n\t\t$voting_map = DBFind(\"voting_instances\").Where(\"id=$ and startdate \u003e now()\", $votingID).Row()\n\t\tif ($voting_map[\"id\"] == nil){\n\t\t\twarning \"Voting already started. New candidate can not be added\"\n\t\t}\t\t\n\n\t\tif ( (Int($voting_map[\"flag_fulldata\"]) == 1) \u0026\u0026 (Int($voting_map[\"type_voting\"]) == 2) ){\n\t\t\twarning \"This vote is a system. Change settings not allowed\"\n\t\t}\n\t\t\n        if($memberID == 0){\n            $memberID = $key_id\n        }\n\t\t\n\t\t$subject_id = DBFind(\"voting_subject\").Where(\"voting_id=$ and member_id=$\", $votingID, $memberID).One(\"id\")\n\t\tif ($subject_id != nil){\n\t\t\twarning \"This candidature for this role has already been added before\"\n\t\t}\n\t\n\t\t$member_map = DBFind(\"member\").Where(\"id = $\", $memberID).Row()\n\t\tif ($member_map[\"id\"] == nil){\n\t\t\twarning \"Member not found\"\n\t\t}\n\t\t\n\t\t$optional_number_cands = Int($voting_map[\"optional_number_cands\"])\n    }\n\n    action {\n\t\tDBInsert(`voting_subject`, `member_id,member_name,member_avatar,voting_id`, $memberID, $member_map[\"member_name\"], $member_map[\"avatar\"], $votingID)\n\t\n\t\t$optional_number_cands = $optional_number_cands + 1\n\t\tDBUpdate(`voting_instances`, $votingID, `optional_number_cands`, $optional_number_cands)\n\n\t\tvoting_SubjectCheckFulldata(\"votingID\", $votingID)\n    }\n}","Conditions":"ContractConditions(\"MainCondition\")"},{"Name":"voting_SubjectContract","Value":"contract voting_SubjectContract {\n    data {\n        votingID int\n        \n        contract_reject string\n        contract_accept string\n    }\n\n    conditions {\n\t\t$voting_map = DBFind(\"voting_instances\").Where(\"id=? and startdate \u003e now()\", $votingID).Row()\n\t\tif ($voting_map[\"id\"] == nil){\n\t\t\twarning \"Voting already started. Can not edit document\"\n\t\t}\t\t\n\t\tif ( (Int($voting_map[\"flag_fulldata\"]) == 1) \u0026\u0026 (Int($voting_map[\"type_voting\"]) == 2) ){\n\t\t\twarning \"This vote is a system. Change settings not allowed\"\n\t\t}\n    }\n\n    action {\n\t\t$subject_id = DBFind(\"voting_subject\").Where(\"voting_id = $\", $votingID).One(\"id\")\n\t\tif ($subject_id != nil){\n\t\t\tDBUpdate(`voting_subject`, Int($subject_id), `contract_accept,contract_reject`, $contract_accept, $contract_reject)\n\t\t} else {\n\t\t\tDBInsert(`voting_subject`, `voting_id,contract_accept,contract_reject`, $votingID, $contract_accept, $contract_reject)\n\t\t}\n\t\t\n\t\tvoting_SubjectCheckFulldata(\"votingID\", $votingID)\n    }\n}","Conditions":"ContractConditions(\"MainCondition\")"},{"Name":"voting_SubjectDocument","Value":"contract voting_SubjectDocument {\n    data {\n        votingID int\n        \n        text_document string\n        \n        contract_reject string \"optional\"\n        contract_accept string \"optional\"\n    }\n\n    conditions {\n\t\t$voting_map = DBFind(\"voting_instances\").Where(\"id=? and startdate \u003e now()\", $votingID).Row()\n\t\tif ($voting_map[\"id\"] == nil){\n\t\t\twarning \"Voting already started. Can not edit document\"\n\t\t}\t\t\n\t\tif ( (Int($voting_map[\"flag_fulldata\"]) == 1) \u0026\u0026 (Int($voting_map[\"type_voting\"]) == 2) ){\n\t\t\twarning \"This vote is a system. Change settings not allowed\"\n\t\t}\t\n\n\t\t$hash = Sha256($text_document)\n    }\n\n    action {\n\t\t$subject_id = DBFind(\"voting_subject\").Where(\"voting_id = $\", $votingID).One(\"id\")\n\t\tif ($subject_id != nil){\n\t\t\tDBUpdate(`voting_subject`, Int($subject_id), `text_document, text_doc_hash`, $text_document, $hash)\n\t\t} else {\n\t\t\tDBInsert(`voting_subject`, `text_document, text_doc_hash, voting_id`, $text_document, $hash, $votingID)\n\t\t}\n\t\n\t\tDBUpdate(`voting_instances`, $votingID, `optional_contract_accept,optional_contract_reject`, $contract_accept, $contract_reject)\n\t\tvoting_SubjectCheckFulldata(\"votingID\", $votingID)\n    }\n}","Conditions":"ContractConditions(\"MainCondition\")"},{"Name":"voting_SubjectFormal","Value":"contract voting_SubjectFormal {\n    data {\n        votingID int\n        \n        description string\n        table_to_written string\n        row_id string\n        column_name string\n        written_value string\n        \n        contract_reject string \"optional\"\n        contract_accept string \"optional\"\n    }\n\n    conditions {\n\t\t$voting_map = DBFind(\"voting_instances\").Where(\"id=? and startdate \u003e now()\", $votingID).Row()\n\t\tif ($voting_map[\"id\"] == nil){\n\t\t\twarning \"Voting already started. Can not edit document\"\n\t\t}\t\t\n\t\tif ( (Int($voting_map[\"flag_fulldata\"]) == 1) \u0026\u0026 (Int($voting_map[\"type_voting\"]) == 2) ){\n\t\t\twarning \"This vote is a system. Change settings not allowed\"\n\t\t}\n    }\n\n    action {\n\t\t$subject_id = DBFind(\"voting_subject\").Where(\"voting_id = $\", $votingID).One(\"id\")\n\t\tif ($subject_id != nil){\n\t\t\tDBUpdate(`voting_subject`, Int($subject_id), `formal_decision_description,formal_decision_table,formal_decision_tableid,formal_decision_column,formal_decision_colvalue`, \n\t\t\t\t$description, $table_to_written, $row_id, $column_name, $written_value)\n\t\t} else {\n\t\t\tDBInsert(`voting_subject`, `voting_id,formal_decision_description,formal_decision_table,formal_decision_tableid,formal_decision_column,formal_decision_colvalue`, \n\t\t\t\t$votingID, $description, $table_to_written, $row_id, $column_name, $written_value)\n\t\t}\n\n\t\tDBUpdate(`voting_instances`, $votingID, `optional_contract_accept,optional_contract_reject`, $contract_accept, $contract_reject)\n\t\tvoting_SubjectCheckFulldata(\"votingID\", $votingID)\n    }\n}","Conditions":"ContractConditions(\"MainCondition\")"},{"Name":"voting_SubjectSettings","Value":"contract voting_SubjectSettings {\n    data {\n        votingID int\n        \n        roleID int\n        vacancies int\n        \n        contract_reject string \"optional\"\n        contract_accept string \"optional\"\n    }\n\n    conditions {\n        if ($vacancies \u003c 1){\n            warning \"Number of vacancies can not be less than 1\"\n        }\n\t\t\n\t\t$voting_map = DBFind(\"voting_instances\").Where(\"id=? and startdate \u003e now()\", $votingID).Row()\n\t\tif ($voting_map[\"id\"] == nil){\n\t\t\twarning \"Voting already started. Change settings not allowed\"\n\t\t}\t\t\n\t\tif ( (Int($voting_map[\"flag_fulldata\"]) == 1) \u0026\u0026 (Int($voting_map[\"type_voting\"]) == 2) ){\n\t\t\twarning \"This vote is a system. Change settings not allowed\"\n\t\t}\t\n\t\n\t\t$role_map = DBFind(\"roles_list\").Where(\"id=? and delete=0\", $roleID).Row()\n\t\tif ($role_map[\"id\"] == nil){\n\t\t\twarning \"Specified role not found\"\n\t\t}\t\n\t\tif (Int($role_map[\"role_type\"]) != 2){\n\t\t\twarning \"The chosen role is not elective or has been removed\"\n\t\t}\n    }\n\n    action {\n        DBUpdate(`voting_instances`, $votingID, `optional_role_id,optional_role_vacancies,optional_contract_accept,optional_contract_reject`, \n                $roleID, $vacancies, $contract_accept, $contract_reject)\n\n        voting_SubjectCheckFulldata(\"votingID\", $votingID)\n    }\n}","Conditions":"ContractConditions(\"MainCondition\")"},{"Name":"voting_AcceptCandidates","Value":"contract voting_AcceptCandidates {\n    data {\n        votingID int\n        candidateID int\n    }\n\n    conditions {\n\t\t$voting_map = DBFind(\"voting_instances\").Where(\"id=$\", $votingID).Row()\n\t\tif ($voting_map[\"id\"] == nil){\n\t\t\twarning \"Voting is not found\"\n\t\t}\n\t\t$subject_map = DBFind(\"voting_subject\").Where(\"voting_id=$ and member_id=$\", $votingID, $candidateID).Row()\n\t\tif ($subject_map[\"id\"] == nil){\n\t\t\twarning \"Subject of voting is not found\"\n\t\t}\n\t\t\n\t\t// check the participant of the voting\n\t\t$participant_id = DBFind(`voting_participants`).Where(\"voting_id=$ and member_id=$\", $votingID, $key_id).One(\"id\")\n\t\tif ($participant_id == nil){\n\t\t\twarning \"You are not a participant in this voting\"\n\t\t}\n    }\n\n    action {\n\t\t// if notifications have been sent, then close it\n\t\tif ( Int($voting_map[\"flag_notifics\"]) == 1 ){\n\t\t\tvar params string\n\t\t\tparams = \"notific_param=\" + Str($votingID)\t\t\n\t\t\t$notific_id = DBFind(`notifications`).Where(\"recipient_id=$ and page_name=$ and page_params=$ and closed=$\", $key_id, \"voting_view\", params, 0).One(\"id\")\n\t\t\tif ($notific_id != nil){\n\t\t\t\tNotifications_Single_Close(\"notific_id\", Int($notific_id))\n\t\t\t}\n\t\t}\n\n\t\t// check the decision\n\t\tif ( Int($voting_map[\"flag_decision\"]) == 1 ){\n\t\t\twarning \"Decision was taken. Voting is now not possible\"\n\t\t} \n\t\t\n\t\t// check start-end of voting time\n\t\t$voting_start = DBFind(`voting_instances`).Where(\"id=$ and startdate \u003c now()\", $votingID).One(\"id\")\n\t\t$voting_end   = DBFind(`voting_instances`).Where(\"id=$ and enddate   \u003e now()\", $votingID).One(\"id\")\n\t\tif ($voting_start == nil){\n\t\t\twarning \"Voting has not yet begun. Try again later, please\"\n\t\t}\n\t\tif ($voting_end == nil){\n\t\t\twarning \"Voting has expired. Voting is now not possible\"\n\t\t}\n\t\t\n\t\t//-----------------------------------------------------------------------------------------------\n\n\t\t// write the result of the voting\n\t\tDBUpdate(`voting_participants`, Int($participant_id), `timestamp decision_date, decision`, $block_time, $candidateID)\n\n\t\t// increment count of accept\n\t\t$subject_id     = Int($subject_map[\"id\"])\n\t\t$number_accept  = Int($subject_map[\"number_accept\"])\n\t\t$number_accept   = $number_accept + 1\n\t\tDBUpdate(`voting_subject`, $subject_id, `number_accept`, $number_accept)\n\n\t\tvoting_UpdateDataForGraphs(\"votingID\", $votingID)\n    }\n}","Conditions":"ContractConditions(`MainCondition`)"}],"data":[],"languages":[{"Name":"accept","Conditions":"","Trans":"{\"en\": \"Accept\", \"ru\": \"Принять\"}"},{"Name":"accept_request_member","Conditions":"","Trans":"{\"en\": \"Accept the request of this member?\", \"ru\": \"Принять запрос этого члена?\"}"},{"Name":"accepted","Conditions":"","Trans":"{\"en\": \"Accepted\", \"ru\": \"Принят\"}"},{"Name":"account","Conditions":"","Trans":"{\"en\": \"Account\", \"ru\": \"Счет\"}"},{"Name":"accounts","Conditions":"","Trans":"{\"en\": \"Accounts\", \"ru\": \"Счета\"}"},{"Name":"actions","Conditions":"","Trans":"{\"en\": \"Actions\", \"ru\": \"Действия\"}"},{"Name":"active","Conditions":"","Trans":"{\"en\": \"Active\", \"ru\": \"Активно\"}"},{"Name":"add","Conditions":"","Trans":"{\"en\": \"Add\", \"ru\": \"Добавить\"}"},{"Name":"add_member","Conditions":"","Trans":"{\"en\": \"Add member\", \"ru\": \"Добавить члена\"}"},{"Name":"add_role","Conditions":"","Trans":"{\"en\": \"Add role\", \"ru\": \"Добавить роль\"}"},{"Name":"admin_tools","Conditions":"","Trans":"{\"en\": \"Admin tools\", \"ru\": \"Инструменты администратора\"}"},{"Name":"agency","Conditions":"","Trans":"{\"en\": \"Agency\", \"ru\": \"Агенский\"}"},{"Name":"all","Conditions":"","Trans":"{\"en\": \"All\", \"ru\": \"Все\"}"},{"Name":"amount","Conditions":"","Trans":"{\"en\": \"Amount\", \"ru\": \"Сумма\"}"},{"Name":"apply","Conditions":"","Trans":"{\"en\": \"Apply\", \"ru\": \"Подать\"}"},{"Name":"appointed","Conditions":"","Trans":"{\"en\": \"Appointed\", \"ru\": \"Назначен\"}"},{"Name":"appointment_impossible","Conditions":"","Trans":"{\"ru\":\"*Эта роль не является назначаемой. Назначение членов невозможно\",\"en\":\"*This role is not assignable. The appointment of members is impossible\"}"},{"Name":"assign","Conditions":"","Trans":"{\"en\": \"Assign\", \"ru\": \"Назначить\"}"},{"Name":"assigned","Conditions":"","Trans":"{\"en\": \"Assigned\", \"ru\": \"Назначен\"}"},{"Name":"assigned_role","Conditions":"","Trans":"{\"en\": \"Assigned\", \"ru\": \"Назначаемая\"}"},{"Name":"at","Conditions":"","Trans":"{\"en\": \"at\", \"ru\": \"в\"}"},{"Name":"attention","Conditions":"","Trans":"{\"en\": \"ATTENTION! The page has not received parameters and is unavailable for viewing.\", \"ru\": \"ВНИМАНИЕ! Страница не получила параметров и не доступна для просмотра.\"}"},{"Name":"available","Conditions":"","Trans":"{\"en\":\"Available\",\"ru\":\"Доступно\"}"},{"Name":"avatar","Conditions":"","Trans":"{\"en\": \"Avatar\", \"ru\": \"Фото\"}"},{"Name":"back","Conditions":"","Trans":"{\"en\": \"Back\", \"ru\": \"Назад\"}"},{"Name":"balance","Conditions":"","Trans":"{\"en\": \"Balance\", \"ru\": \"Баланс\"}"},{"Name":"begin","Conditions":"","Trans":"{\"en\": \"Begin\", \"ru\": \"Начать\"}"},{"Name":"birthdate","Conditions":"","Trans":"{\"en\": \"Birthdate\", \"ru\": \"Дата рождения\"}"},{"Name":"body_text","Conditions":"","Trans":"{\"en\": \"Body text\", \"ru\": \"Основной текст\"}"},{"Name":"can_apply_voting","Conditions":"","Trans":"{\"en\": \"You can apply for voting\", \"ru\": \"Вы можете подать заявку на голосование\"}"},{"Name":"candidates","Conditions":"","Trans":"{\"en\": \"Candidates\", \"ru\": \"Кандидаты\"}"},{"Name":"change","Conditions":"","Trans":"{\"en\": \"Change\", \"ru\": \"Изменить\"}"},{"Name":"check_expiration","Conditions":"","Trans":"{\"en\": \"Check expiration\", \"ru\": \"Проверить истечение\"}"},{"Name":"close","Conditions":"","Trans":"{\"en\": \"Close\", \"ru\": \"Закрыть\"}"},{"Name":"closure_type","Conditions":"","Trans":"{\"en\": \"Closure type\", \"ru\": \"Тип закрытия\"}"},{"Name":"column_name","Conditions":"","Trans":"{\"en\": \"Column name\", \"ru\": \"Название столбца\"}"},{"Name":"column_name_desc","Conditions":"","Trans":"{\"en\": \"Column name to which the value will be written (Example: onhold)\", \"ru\": \"Название столбца, в который будет записано значение (Пример: onhold)\"}"},{"Name":"company","Conditions":"","Trans":"{\"en\": \"Company\", \"ru\": \"Компания\"}"},{"Name":"confirmation","Conditions":"","Trans":"{\"en\":\"Confirmation\",\"ru\":\"Подтверждение\"}"},{"Name":"contract_accept","Conditions":"","Trans":"{\"en\": \"Contract of accept\", \"ru\": \"Контракт при принятии\"}"},{"Name":"contract_accept_des","Conditions":"","Trans":"{\"en\": \"Name of the contract, which should be started if the decision is accepted\", \"ru\": \"Название контракта, который должен быть запущен, если решение будет одобрено\"}"},{"Name":"contract_accepted","Conditions":"","Trans":"{\"en\": \"Contractaccept\", \"ru\": \"Контракт принят\"}"},{"Name":"contract_reject","Conditions":"","Trans":"{\"en\": \"Contract of reject\", \"ru\": \"Контракт при отклонении\"}"},{"Name":"contract_reject_des","Conditions":"","Trans":"{\"en\": \"Name of the contract, which should be started if the decision is rejected\", \"ru\": \"Название контракта, который должен быть запущен, если решение будет отклонено\"}"},{"Name":"contract_rejected","Conditions":"","Trans":"{\"en\": \"Contract reject\", \"ru\": \"Контракт отклонен\"}"},{"Name":"create","Conditions":"","Trans":"{\"en\": \"Create\", \"ru\": \"Создать\"}"},{"Name":"create_account","Conditions":"","Trans":"{\"en\": \"Create account\", \"ru\": \"Создать счет\"}"},{"Name":"created","Conditions":"","Trans":"{\"en\": \"Created\", \"ru\": \"Создан\"}"},{"Name":"creator","Conditions":"","Trans":"{\"en\": \"Creator\", \"ru\": \"Кто создал\"}"},{"Name":"dashboard","Conditions":"","Trans":"{\"en\": \"Dashboard\", \"ru\": \"Приборная панель\"}"},{"Name":"date_end","Conditions":"","Trans":"{\"en\": \"Date end\", \"ru\": \"Дата окончания\"}"},{"Name":"date_start","Conditions":"","Trans":"{\"en\": \"Date start\", \"ru\": \"Дата начала\"}"},{"Name":"decision","Conditions":"","Trans":"{\"en\": \"Decision\", \"ru\": \"Решение\"}"},{"Name":"decision_accept","Conditions":"","Trans":"{\"en\": \"Decision accept\", \"ru\": \"Решение одобрено\"}"},{"Name":"decision_reject","Conditions":"","Trans":"{\"en\": \"Decision reject\", \"ru\": \"Решение отклонено\"}"},{"Name":"deleted","Conditions":"","Trans":"{\"en\": \"Deleted\", \"ru\": \"Удалено\"}"},{"Name":"description","Conditions":"","Trans":"{\"en\": \"Description\", \"ru\": \"Описание\"}"},{"Name":"description_desc","Conditions":"","Trans":"{\"en\": \"Text description of the subject of voting\", \"ru\": \"Текстовое описание предмета голосования\"}"},{"Name":"did_not_vote","Conditions":"","Trans":"{\"en\": \"Did not vote\", \"ru\": \"Не голосовал\"}"},{"Name":"document_accept","Conditions":"","Trans":"{\"en\": \"Document accept\", \"ru\": \"Документ одобрен\"}"},{"Name":"document_reject","Conditions":"","Trans":"{\"en\": \"Document reject\", \"ru\": \"Документ отклонен\"}"},{"Name":"editing_profile","Conditions":"","Trans":"{\"en\": \"Editing profile\", \"ru\": \"Редактирование профиля\"}"},{"Name":"elective","Conditions":"","Trans":"{\"en\": \"Elective\", \"ru\": \"Выбран\"}"},{"Name":"elective_role","Conditions":"","Trans":"{\"en\": \"Elective\", \"ru\": \"Выборная\"}"},{"Name":"emission","Conditions":"","Trans":"{\"en\": \"Emission\", \"ru\": \"Эмиссия\"}"},{"Name":"emission_account_not_found","Conditions":"","Trans":"{\"en\":\"System emission account is not found\",\"ru\":\"Системный эмиссионный счет не найден\"}"},{"Name":"empty","Conditions":"","Trans":"{\"en\": \"[no]\", \"ru\": \"[нет]\"}"},{"Name":"execute","Conditions":"","Trans":"{\"en\": \"Execute\", \"ru\": \"Выполнить\"}"},{"Name":"expiration","Conditions":"","Trans":"{\"en\": \"Expiration\", \"ru\": \"Окончание\"}"},{"Name":"expiration_only_visitor","Conditions":"","Trans":"{\"en\": \"Expiration only for visitor\", \"ru\": \"Окончание только для посетителя\"}"},{"Name":"expired","Conditions":"","Trans":"{\"en\": \"Expired\", \"ru\": \"Истекло\"}"},{"Name":"female","Conditions":"","Trans":"{\"en\": \"Female\", \"ru\": \"Женский\"}"},{"Name":"filled","Conditions":"","Trans":"{\"en\": \"Filled\", \"ru\": \"Заполнено\"}"},{"Name":"finished","Conditions":"","Trans":"{\"en\": \"Finished\", \"ru\": \"Завершено\"}"},{"Name":"gender","Conditions":"","Trans":"{\"en\": \"Gender\", \"ru\": \"Пол\"}"},{"Name":"header","Conditions":"","Trans":"{\"en\": \"Header\", \"ru\": \"Заголовок\"}"},{"Name":"icon","Conditions":"","Trans":"{\"en\": \"Icon\", \"ru\": \"Иконка\"}"},{"Name":"id","Conditions":"","Trans":"{\"en\": \"ID\", \"ru\": \"ID\"}"},{"Name":"impossible","Conditions":"","Trans":"{\"en\": \"Impossible\", \"ru\": \"Не возможно\"}"},{"Name":"limited","Conditions":"","Trans":"{\"en\": \"Limited\", \"ru\": \"Ограничены\"}"},{"Name":"lists_of_roles","Conditions":"","Trans":"{\"en\": \"Lists of roles and\", \"ru\": \"Список ролей и\"}"},{"Name":"male","Conditions":"","Trans":"{\"en\": \"Male\", \"ru\": \"Мужской\"}"},{"Name":"member","Conditions":"","Trans":"{\"en\": \"Member\", \"ru\": \"Член\"}"},{"Name":"member_id","Conditions":"","Trans":"{\"en\": \"Member ID\", \"ru\": \"ID члена\"}"},{"Name":"member_name","Conditions":"","Trans":"{\"en\":\"Full name\",\"ru\":\"Полное имя\"}"},{"Name":"members","Conditions":"","Trans":"{\"en\": \"Members\", \"ru\": \"Члены\"}"},{"Name":"membership","Conditions":"","Trans":"{\"en\": \"Membership\", \"ru\": \"Членство\"}"},{"Name":"membership_management","Conditions":"","Trans":"{\"en\": \"Membership management and\", \"ru\": \"Управление членами и\"}"},{"Name":"membership_requests","Conditions":"","Trans":"{\"en\": \"Membership requests\", \"ru\": \"Запросы на членство\"}"},{"Name":"membership_roles_notifications","Conditions":"","Trans":"{\"en\": \"Membership, roles, notifications\", \"ru\": \"Членство, роли, уведомления\"}"},{"Name":"multiple","Conditions":"","Trans":"{\"en\": \"Multiple\", \"ru\": \"Множественные\"}"},{"Name":"my_account","Conditions":"","Trans":"{\"en\": \"My account\", \"ru\": \"Мой счет\"}"},{"Name":"name","Conditions":"","Trans":"{\"en\": \"Name\", \"ru\": \"Название\"}"},{"Name":"name_first","Conditions":"","Trans":"{\"en\": \"First name\", \"ru\": \"Имя\"}"},{"Name":"name_last","Conditions":"","Trans":"{\"en\": \"Last name\", \"ru\": \"Фамилия\"}"},{"Name":"name_middle","Conditions":"","Trans":"{\"en\": \"Middle name\", \"ru\": \"Отчество\"}"},{"Name":"new_role","Conditions":"","Trans":"{\"en\": \"New role\", \"ru\": \"Новая роль\"}"},{"Name":"new_voting","Conditions":"","Trans":"{\"en\": \"New voting\", \"ru\": \"Новое голосование\"}"},{"Name":"no","Conditions":"","Trans":"{\"en\":\"No\",\"ru\":\"Нет\"}"},{"Name":"no_expiration","Conditions":"","Trans":"{\"en\": \"No expiration\", \"ru\": \"Без окончания\"}"},{"Name":"not_enough_votes","Conditions":"","Trans":"{\"en\": \"Not enough votes\", \"ru\": \"Недостаточно голосов\"}"},{"Name":"notifications","Conditions":"","Trans":"{\"en\": \"Notifications\", \"ru\": \"Уведомления\"}"},{"Name":"notifics","Conditions":"","Trans":"{\"en\": \"Notifications\", \"ru\": \"Уведомления\"}"},{"Name":"num_members","Conditions":"","Trans":"{\"en\": \"Number of members\", \"ru\": \"Количество членов\"}"},{"Name":"onhold","Conditions":"","Trans":"{\"en\": \"onHold\", \"ru\": \"Закрыт\"}"},{"Name":"optional","Conditions":"","Trans":"{\"en\": \"[Optional]\", \"ru\": \"[Необязательный]\"}"},{"Name":"page_name","Conditions":"","Trans":"{\"en\": \"Page name\", \"ru\": \"Название страницы\"}"},{"Name":"params","Conditions":"","Trans":"{\"en\":\"Parameters\",\"ru\":\"Параметры\"}"},{"Name":"participants","Conditions":"","Trans":"{\"en\": \"Participants\", \"ru\": \"Участники\"}"},{"Name":"participants_add","Conditions":"","Trans":"{\"en\": \"Add participants\", \"ru\": \"Добавить участников\"}"},{"Name":"pending_notifics","Conditions":"","Trans":"{\"en\": \"Pending notifications\", \"ru\": \"Ожидающие уведомления\"}"},{"Name":"person","Conditions":"","Trans":"{\"en\": \"Person\", \"ru\": \"Персональный\"}"},{"Name":"possible","Conditions":"","Trans":"{\"en\": \"Possible\", \"ru\": \"Возможно\"}"},{"Name":"processing","Conditions":"","Trans":"{\"en\": \"Processing\", \"ru\": \"Обработка\"}"},{"Name":"profile","Conditions":"","Trans":"{\"en\": \"Profile\", \"ru\": \"Профиль\"}"},{"Name":"progress","Conditions":"","Trans":"{\"en\": \"Progress\", \"ru\": \"Прогресс\"}"},{"Name":"recipient","Conditions":"","Trans":"{\"en\": \"Recipient\", \"ru\": \"Получатель\"}"},{"Name":"recipient_account","Conditions":"","Trans":"{\"en\": \"Recipient account\", \"ru\": \"Счет получателя\"}"},{"Name":"reject","Conditions":"","Trans":"{\"en\": \"Reject\", \"ru\": \"Отклонить\"}"},{"Name":"rejected","Conditions":"","Trans":"{\"en\": \"Rejected\", \"ru\": \"Отклонено\"}"},{"Name":"request","Conditions":"","Trans":"{\"en\": \"Request\", \"ru\": \"Запрос\"}"},{"Name":"role","Conditions":"","Trans":"{\"en\": \"Role\", \"ru\": \"Роль\"}"},{"Name":"role_notifics","Conditions":"","Trans":"{\"en\": \"Role notifications\", \"ru\": \"Ролевые уведомления\"}"},{"Name":"roles","Conditions":"","Trans":"{\"en\": \"Roles\", \"ru\": \"Роли\"}"},{"Name":"rollback","Conditions":"","Trans":"{\"en\": \"Rollback\", \"ru\": \"Откат\"}"},{"Name":"row_id","Conditions":"","Trans":"{\"en\": \"Row ID\", \"ru\": \"ID строки\"}"},{"Name":"row_id_desc","Conditions":"","Trans":"{\"en\": \"Row ID to which the value will be written (Example: 14)\", \"ru\": \"ID строки, в которую будет записано значение (Пример: 14)\"}"},{"Name":"save","Conditions":"","Trans":"{\"en\": \"Save\", \"ru\": \"Сохранить\"}"},{"Name":"select_member","Conditions":"","Trans":"{\"en\": \"Select a member to add\", \"ru\": \"Укажите члена, чтобы добавить\"}"},{"Name":"select_role","Conditions":"","Trans":"{\"en\": \"Select a role to add all members of this role\", \"ru\": \"Выберите роль, чтобы добавить всех участников этой роли\"}"},{"Name":"send","Conditions":"","Trans":"{\"en\": \"Send\", \"ru\": \"Отправить\"}"},{"Name":"sender_account","Conditions":"","Trans":"{\"en\":\"Sender account\",\"ru\":\"Счет отправителя\"}"},{"Name":"single","Conditions":"","Trans":"{\"en\": \"Single\", \"ru\": \"Одиночные\"}"},{"Name":"single_and_role","Conditions":"","Trans":"{\"en\": \"Single and Role\", \"ru\": \"Одиночные и ролевые\"}"},{"Name":"single_notifics","Conditions":"","Trans":"{\"en\": \"Single notifications\", \"ru\": \"Одиночные уведомления\"}"},{"Name":"started","Conditions":"","Trans":"{\"en\": \"Started\", \"ru\": \"Начато\"}"},{"Name":"status","Conditions":"","Trans":"{\"en\": \"Status\", \"ru\": \"Статус\"}"},{"Name":"subject_voting","Conditions":"","Trans":"{\"en\": \"Subject of voting\", \"ru\": \"Предмет голосования\"}"},{"Name":"subject_voting_edit","Conditions":"","Trans":"{\"en\": \"Edit subject of voting\", \"ru\": \"Редактировать предмет голосования\"}"},{"Name":"success","Conditions":"","Trans":"{\"en\": \"Success\", \"ru\": \"Успешно\"}"},{"Name":"sys_emission","Conditions":"","Trans":"{\"en\":\"sys-emission\",\"ru\":\"Эмиссия (системный)\"}"},{"Name":"sys_trash","Conditions":"","Trans":"{\"en\":\"sys-trash\",\"ru\":\"Корзина (системный)\"}"},{"Name":"system_role","Conditions":"","Trans":"{\"en\":\"System\",\"ru\":\"Системная\"}"},{"Name":"system_tokens","Conditions":"","Trans":"{\"en\": \"System of tokens\", \"ru\": \"Система токенов\"}"},{"Name":"table_to_written","Conditions":"","Trans":"{\"en\": \"Table name\", \"ru\": \"Название таблицы\"}"},{"Name":"table_to_written_desc","Conditions":"","Trans":"{\"en\": \"Table to which the value will be written (Example: accounts)\", \"ru\": \"Таблица, в которую будет записано значение (Пример: accounts)\"}"},{"Name":"test_page","Conditions":"","Trans":"{\"en\": \"Test page\", \"ru\": \"Тестовая страница\"}"},{"Name":"text_document","Conditions":"","Trans":"{\"en\": \"Text of the document\", \"ru\": \"Текст документа\"}"},{"Name":"their_members","Conditions":"","Trans":"{\"en\": \"their members\", \"ru\": \"их члены\"}"},{"Name":"tokens","Conditions":"","Trans":"{\"en\": \"Tokens\", \"ru\": \"Токены\"}"},{"Name":"tokens_rollback","Conditions":"","Trans":"{\"en\": \"Tokens rollback\", \"ru\": \"Удаление токенов\"}"},{"Name":"tokens_transfer","Conditions":"","Trans":"{\"en\": \"Tokens transfer\", \"ru\": \"Перевод токенов\"}"},{"Name":"tranche","Conditions":"","Trans":"{\"en\":\"Tranche\",\"ru\":\"Транш\"}"},{"Name":"trash_account_not_found","Conditions":"","Trans":"{\"en\":\"System trash account is not found\",\"ru\":\"Системный счет корзины не найден\"}"},{"Name":"type","Conditions":"","Trans":"{\"en\": \"Type\", \"ru\": \"Тип\"}"},{"Name":"type_voting_custom","Conditions":"","Trans":"{\"en\":\"Custom\",\"ru\":\"Пользовательское\"}"},{"Name":"type_voting_system","Conditions":"","Trans":"{\"en\":\"System\",\"ru\":\"Системное\"}"},{"Name":"unlimited","Conditions":"","Trans":"{\"en\": \"Unlimited\", \"ru\": \"Не ограничены\"}"},{"Name":"user_info","Conditions":"","Trans":"{\"en\": \"User information\", \"ru\": \"Информация о пользователе\"}"},{"Name":"username","Conditions":"","Trans":"{\"en\": \"Username\", \"ru\": \"Никнейм\"}"},{"Name":"vacancies","Conditions":"","Trans":"{\"en\": \"Vacancies\", \"ru\": \"Вакансии\"}"},{"Name":"value_number","Conditions":"","Trans":"{\"en\": \"Value number\", \"ru\": \"Значение (число)\"}"},{"Name":"value_string","Conditions":"","Trans":"{\"en\": \"Value string\", \"ru\": \"Значение (строка)\"}"},{"Name":"view","Conditions":"","Trans":"{\"en\": \"View\", \"ru\": \"Просмотр\"}"},{"Name":"view_all","Conditions":"","Trans":"{\"en\": \"View all\", \"ru\": \"Посмотреть все\"}"},{"Name":"visitor","Conditions":"","Trans":"{\"en\": \"Visitor\", \"ru\": \"Посетитель\"}"},{"Name":"visitor_rights","Conditions":"","Trans":"{\"en\": \"Visitor (with SR)\", \"ru\": \"Посетитель (с правами)\"}"},{"Name":"vote","Conditions":"","Trans":"{\"en\": \"Vote\", \"ru\": \"Голосовать\"}"},{"Name":"vote_for_candidate","Conditions":"","Trans":"{\"en\": \"Vote for the candidate\", \"ru\": \"Проголосовал за кандидата\"}"},{"Name":"voted","Conditions":"","Trans":"{\"en\": \"Voted\", \"ru\": \"Проголосовавшие\"}"},{"Name":"voting","Conditions":"","Trans":"{\"en\": \"Voting\", \"ru\": \"Голосование\"}"},{"Name":"voting_decisions_candidate_manual","Conditions":"","Trans":"{\"en\": \"Role candidates with manual registration of participants\", \"ru\": \"Ролевые кандидаты с ручной регистрацией участников\"}"},{"Name":"voting_decisions_candidate_requests","Conditions":"","Trans":"{\"en\": \"Role candidates with registration of participants by request\", \"ru\": \"Ролевые кандидаты с регистрацией участников по запросу\"}"},{"Name":"voting_decisions_contract","Conditions":"","Trans":"{\"en\": \"Performance of the contract\", \"ru\": \"Выполнение контракта\"}"},{"Name":"voting_decisions_db","Conditions":"","Trans":"{\"en\": \"Formal decision\", \"ru\": \"Формальное решение\"}"},{"Name":"voting_decisions_document","Conditions":"","Trans":"{\"en\": \"Document approval\", \"ru\": \"Утверждение документа\"}"},{"Name":"voting_graph_progress","Conditions":"","Trans":"{\"en\": \"Graph of the percentages of votes needed to make a decision\", \"ru\": \"График процента голосов, необходимых для принятия решения\"}"},{"Name":"voting_graph_voted","Conditions":"","Trans":"{\"en\": \"Graph of the proportion of voters from the total number of participants\", \"ru\": \"График отношения проголосовавших от общего числа участников\"}"},{"Name":"voting_participants_everybody","Conditions":"","Trans":"{\"en\": \"Anybody\", \"ru\": \"Все\"}"},{"Name":"voting_participants_manual","Conditions":"","Trans":"{\"en\": \"Choose manually\", \"ru\": \"Ручной выбор\"}"},{"Name":"voting_participants_role","Conditions":"","Trans":"{\"en\": \"By role\", \"ru\": \"По роли\"}"},{"Name":"voting_quorum","Conditions":"","Trans":"{\"en\": \"Quorum\", \"ru\": \"Кворум\"}"},{"Name":"voting_quorum_desc","Conditions":"","Trans":"{\"en\": \"Percentage value of votes for a decision (from 5 to 100)\", \"ru\": \"Процентная доля голосов для принятия решения (от 5 до 100)\"}"},{"Name":"voting_volume","Conditions":"","Trans":"{\"en\": \"Volume\", \"ru\": \"Объем\"}"},{"Name":"voting_volume_desc","Conditions":"","Trans":"{\"en\": \"Percentage value of votes to fulfill requirements of this voting (from 50 to 100)\", \"ru\": \"Процентная доля голосов для выполнения этого голосования (от 50 до 100)\"}"},{"Name":"waiting","Conditions":"","Trans":"{\"en\": \"Waiting\", \"ru\": \"Ожидание\"}"},{"Name":"want_accept_contract","Conditions":"","Trans":"{\"en\": \"Do you want to accept this contract?\", \"ru\": \"Вы хотите принять этот контракт?\"}"},{"Name":"want_accept_decision","Conditions":"","Trans":"{\"en\": \"Are you sure you want to accept decision?\", \"ru\": \"Вы уверены, что хотите принять решение?\"}"},{"Name":"want_accept_document","Conditions":"","Trans":"{\"en\": \"Are you sure you want to accept document?\", \"ru\": \"Вы уверены, что хотите принять документ?\"}"},{"Name":"want_assign_member_to_role","Conditions":"","Trans":"{\"en\":\"Do you want to assign this member of the ecosystem to this role?\",\"ru\":\"Вы хотите назначить этого члена экосистемы на эту роль?\"}"},{"Name":"want_change_status","Conditions":"","Trans":"{\"en\": \"Do you want to change the status of this member?\", \"ru\": \"Вы хотите изменить статус этого члена?\"}"},{"Name":"want_check_decision","Conditions":"","Trans":"{\"en\": \"Do you want to check decision?\", \"ru\": \"Вы хотите проверить решение?\"}"},{"Name":"want_check_tokens","Conditions":"","Trans":"{\"en\": \"Do you want to check the expiration of the tokens?\", \"ru\": \"Вы хотите проверить истечение токенов?\"}"},{"Name":"want_close_account","Conditions":"","Trans":"{\"en\": \"Do you want to close this account?\", \"ru\": \"Вы хотите закрыть этот счет?\"}"},{"Name":"want_close_notification","Conditions":"","Trans":"{\"en\": \"Do you want to close this notification?\", \"ru\": \"Вы хотите закрыть это уведомление?\"}"},{"Name":"want_create_new_account","Conditions":"","Trans":"{\"en\":\"Do you want to create a new account?\",\"ru\":\"Вы хотите создать новый счет?\"}"},{"Name":"want_create_new_role","Conditions":"","Trans":"{\"en\":\"Do you want to create a new role?\",\"ru\":\"Вы хотите создать новую роль?\"}"},{"Name":"want_delete_from_role","Conditions":"","Trans":"{\"en\": \"Are you sure you want to delete this member from the role?\", \"ru\": \"Вы уверены, что хотите удалить этого члена из роли?\"}"},{"Name":"want_delete_member","Conditions":"","Trans":"{\"en\": \"Do you want to delete this member?\", \"ru\": \"Вы хотите удалить этого члена?\"}"},{"Name":"want_delete_role","Conditions":"","Trans":"{\"en\": \"Do you want to delete this role?\", \"ru\": \"Вы хотите удалить эту роль?\"}"},{"Name":"want_delete_tokens","Conditions":"","Trans":"{\"en\": \"Do you want to delete this tokens?\", \"ru\": \"Вы хотите удалить эти токены?\"}"},{"Name":"want_delete_voting","Conditions":"","Trans":"{\"en\": \"Do you want to delete this voting?\", \"ru\": \"Вы хотите удалить это голосование?\"}"},{"Name":"want_finish_processing","Conditions":"","Trans":"{\"en\": \"Do you want to finish processing this notification?\", \"ru\": \"Вы хотите завершить обработку этого уведомления?\"}"},{"Name":"want_make_emission","Conditions":"","Trans":"{\"en\":\"Do you want to make an emission?\",\"ru\":\"Вы хотите выполнить эмиссию?\"}"},{"Name":"want_reject_contract","Conditions":"","Trans":"{\"en\": \"Do you want to reject this contract?\", \"ru\": \"Вы хотите отклонить этот контракт?\"}"},{"Name":"want_reject_decision","Conditions":"","Trans":"{\"en\": \"Are you sure you want to reject decision?\", \"ru\": \"Вы уверены, что хотите отклонить решение?\"}"},{"Name":"want_reject_document","Conditions":"","Trans":"{\"en\": \"Are you sure you want to reject document?\", \"ru\": \"Вы уверены, что хотите отклонить документ?\"}"},{"Name":"want_reject_request","Conditions":"","Trans":"{\"en\": \"Do you want to reject the request?\", \"ru\": \"Вы хотите отклонить запрос?\"}"},{"Name":"want_release_tokens","Conditions":"","Trans":"{\"en\":\"Do you want to release new tokens?\",\"ru\":\"Вы хотите выпустить новые токены?\"}"},{"Name":"want_return_member","Conditions":"","Trans":"{\"en\": \"Do you want to return this member?\", \"ru\": \"Вы хотите восстановить этого члена?\"}"},{"Name":"want_rollback_tokens","Conditions":"","Trans":"{\"en\":\"Do you want to rollback the tokens?\",\"ru\":\"Вы хотите откатить токены?\"}"},{"Name":"want_save_changes","Conditions":"","Trans":"{\"en\":\"Do you want to save the changes?\",\"ru\":\"Вы хотите сохранить изменения?\"}"},{"Name":"want_send_notific_voters","Conditions":"","Trans":"{\"en\": \" Do you want to send a notification to all the voters?\", \"ru\": \"Вы хотите отправить уведомление всем участникам голосования?\"}"},{"Name":"want_send_tokens","Conditions":"","Trans":"{\"en\":\"Do you want to send tokens?\",\"ru\":\"Вы хотите отправить токены?\"}"},{"Name":"want_start_processing","Conditions":"","Trans":"{\"en\": \"Do you want to start processing this notification?\", \"ru\": \"Вы хотите начать обработку этого уведомления?\"}"},{"Name":"want_vote_for_candidate","Conditions":"","Trans":"{\"en\": \"Are you sure you want to vote for this candidate?\", \"ru\": \"Вы уверены, что хотите проголосовать за этого кандидата?\"}"},{"Name":"written_value","Conditions":"","Trans":"{\"en\": \"Written value\", \"ru\": \"Записываемое значение\"}"},{"Name":"written_value_desc","Conditions":"","Trans":"{\"en\": \"Value to be written to the table (Example: 1)\", \"ru\": \"Значение, которое должно быть записано в таблицу (Пример: 1)\"}"},{"Name":"yes","Conditions":"","Trans":"{\"en\":\"Yes\",\"ru\":\"Да\"}"},{"Name":"сlosed","Conditions":"","Trans":"{\"en\": \"Closed\", \"ru\": \"Закрыто\"}"}],"menus":[{"Name":"default_menu","Value":"MenuItem(Title:$voting$, Page:voting_list, Icon:\"fa icon-pin\")","Conditions":"ContractAccess(\"@1EditMenu\")"},{"Name":"membership_menu","Value":"MenuItem(Title:$membership$, Page:members_list, Icon:\"fa icon-people\")\r\nMenuItem(Title:$roles$, Page:roles_list, Icon:\"fa icon-list\")\r\nMenuItem(Title:$single_notifics$, Page:notifications_single, Icon:\"fa icon-bell\")\r\nMenuItem(Title:$role_notifics$, Page:notifications_roles, Icon:\"fa icon-bell\")\r\nMenuItem(Title:$test_page$, Page:notifications_testpage, Icon:\"icon-settings\")","Conditions":"ContractAccess(\"@1EditMenu\")"}],"pages":[{"Name":"members_list","Value":"Div(Class: content-wrapper){\r\n\r\n\tSetTitle($membership$)\r\n\tDiv(breadcrumb){\r\n\t\tSpan(Class: text-muted, Body: $membership$)\r\n\t}\r\n\r\n    If(GetVar(isSearch) == 1){\r\n        SetVar(Name: v_Where, Value: \"member_name='#v_Search#'\")\r\n    }.Else{\r\n        SetVar(Name: v_Where, Value: \"id!=0\")\r\n        SetVar(Name: v_Search, Value: \"\")\r\n    }\r\n\r\n    DBFind(Name: member, Source: src_member).Custom(custom_username){\r\n        LinkPage(Page: profile_view, PageParams: \"v_member_id=#id#\"){\r\n            Image(Src: \"#avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\r\n            Span(Class: h5 text-bold, Body: #member_name#)\r\n        }\r\n\t}.Custom(custom_member_id){\r\n        Span(Body: Address(#id#))\r\n    }.Where(#v_Where#).Order(\"member_name\")\r\n\r\n    Div(Class: panel panel-primary){\r\n        Form(){\r\n            Div(Class: list-group-item){\r\n                Div(Class: row df f-valign){\r\n                    Div(Class: col-md-1 mt-sm text-right){\r\n                        Label(For: Search){\r\n                            Span(Body: LangRes(username))\r\n                        }\r\n                    }\r\n                    Div(Class: col-md-11 mc-sm){\r\n                        Div(Class: input-group){\r\n                            Input(Class: form-control, Type: text, Name: Search, Value: #v_Search#)\r\n                            Div(Class: input-group-btn){\r\n                                Button(Body: Em(Class: fa fa-search), Class: btn btn-default, Page: members_list, PageParams: \"isSearch=1,v_Search=Val(Search)\")\r\n                            }\r\n                        }\r\n                    }\r\n                }  \r\n            }\r\n\r\n            Div(Class: list-group-item){ \r\n                Table(Source: src_member, Columns: \"$username$=custom_username,$id$=id,$member_id$=custom_member_id\")\r\n                If(GetVar(isSearch) == 1){\r\n                    Div(Class: text-center){  \r\n                        Button(Body: $view_all$, Class: btn btn-primary, Page: members_list, PageParams: \"isSearch=0\")\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }           \r\n    }\r\n\r\n}","Conditions":"ContractAccess(\"@1EditPage\")","Menu":"default_menu"},{"Name":"notifications","Value":"DBFind(Name: notifications, Source: noti_s).Where(\"closed=0 and notification_type=1 and recipient_id=#key_id#\")\r\nDBFind(Name: notifications, Source: noti_r).Where(\"closed=0 and notification_type=2 and (started_processing_id=0 or started_processing_id=#key_id#)\")\r\n\r\nForList(noti_s){\r\n        Div(Class: list-group-item){\r\n            LinkPage(Page: #page_name#, PageParams: \"notific_id=#id#,notific_type=#notification_type#,notific_header=#header_text#,#page_params#\"){        \r\n                Div(media-box){\r\n                    Div(Class: pull-left){\r\n                        Em(Class: fa #icon# fa-1x text-info)\r\n                    } \r\n                    Div(media-box-body clearfix){ \r\n                        Div(Class: m0 text-normal, Body: #header_text#) \r\n                        Div(Class: m0 text-muted h6, Body: #body_text#)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n}\r\n\r\nForList(noti_r){\r\n    DBFind(Name: roles_assign, Source: src_roles).Where(\"member_id=#key_id# and role_id=#role_id# and delete=0\").Vars(prefix)\r\n    If(#prefix_id# \u003e 0){\r\n        Div(Class: list-group-item){\r\n            LinkPage(Page: #page_name#, PageParams: \"notific_id=#id#,notific_type=#notification_type#,notific_header=#header_text#,#page_params#\"){        \r\n                Div(media-box){\r\n                    Div(Class: pull-left){\r\n                        Em(Class: fa #icon# fa-1x text-primary)\r\n                    } \r\n                    Div(media-box-body clearfix){ \r\n                        Div(Class: m0 text-normal, Body: #header_text#) \r\n                        Div(Class: m0 text-muted h6, Body: #body_text#)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","Conditions":"ContractAccess(\"@1EditPage\")","Menu":"default_menu"},{"Name":"notifications_roles","Value":"Div(Class: content-wrapper){\r\n\r\n\tSetTitle($role_notifics$)\r\n\tDiv(breadcrumb){\r\n\t\tSpan(Class: text-muted, Body: $role_notifics$)\r\n\t}\r\n\r\n    If(GetVar(isSearch) == 1){\r\n        SetVar(Name: v_Where, Value: \"role_name='#v_Search#' and notification_type=2\")\r\n    }.Else{\r\n        SetVar(Name: v_Where, Value: \"notification_type=2\")\r\n        SetVar(Name: v_Search, Value: \"\")\r\n    }\r\n\r\n    DBFind(Name: notifications, Source: src_notifications).Custom(custom_id){\r\n        If(#closed# == 0){\r\n            Span(Body: #id#)  \r\n        }.Else{\r\n            Span(Body: #id#).Style(color:#A9A9A9;)\r\n        }\r\n    }.Custom(custom_role){\r\n        If(#closed# == 0){\r\n            Span(Body: ID: #role_id# - #role_name#)  \r\n        }.Else{\r\n            Span(Body: ID: #role_id# - #role_name#).Style(color:#A9A9A9;)\r\n        }\r\n    }.Custom(custom_icon){\r\n        If(#closed# == 0){\r\n            Em(Class: fa #icon# fa-2x text-info)\r\n        }.Else{\r\n            Em(Class: fa #icon# fa-2x text-muted)\r\n        }\r\n    }.Custom(custom_page){\r\n        If(#closed# == 0){\r\n            LinkPage(Page: #page_name#, PageParams: \"notific_id=#id#,notific_type=#notification_type#,notific_header=#header_text#,#page_params#\"){\r\n                Span(Class: h5 text-bold, Body: #page_name#)\r\n            }\r\n        }.Else{\r\n            Div(){\r\n                Span(Class: h5 text-muted, Body: #page_name#)\r\n            }\r\n        }\r\n    }.Custom(custom_params){\r\n        If(#closed# == 0){\r\n            Span(Class: h6 m0, Body: \"#page_params#\")  \r\n        }.Else{\r\n            Span(Class: h6 m0, Body: #page_params#).Style(color:#A9A9A9;)\r\n        }\r\n    }.Custom(custom_date_started){\r\n        If(#started_processing_id# == 0){\r\n        }.Else{\r\n            If(#closed# == 0){\r\n                P(Class: m0, Body: DateTime(DateTime: #started_processing_time#, Format: \"DD.MM.YYYY HH:MI\"))\r\n                P(Class: m0 h6, Body: Address(#started_processing_id#))\r\n            }.Else{\r\n                P(Class: m0, Body: DateTime(DateTime: #started_processing_time#, Format: \"DD.MM.YYYY HH:MI\")).Style(color:#A9A9A9;)\r\n                P(Class: m0 h6, Body: Address(#started_processing_id#)).Style(color:#A9A9A9;)\r\n            }\r\n        }\r\n    }.Custom(custom_date_finished){\r\n        If(#finished_processing_id# == 0){\r\n        }.Else{\r\n            P(Class: m0, Body: DateTime(DateTime: #finished_processing_time#, Format: \"DD.MM.YYYY HH:MI\")).Style(color:#A9A9A9;)\r\n            P(Class: m0 h6, Body: Address(#finished_processing_id#)).Style(color:#A9A9A9;)\r\n        }\r\n    }.Custom(custom_status){\r\n        If(#closed# == 0){\r\n            If(#started_processing_id# == 0){\r\n                Span(Body: LangRes(active))\r\n            }.Else{\r\n                Span(Body: LangRes(processing))\r\n            }\r\n        }.Else{\r\n            Span(Body: LangRes(active)).Style(color:#A9A9A9;)\r\n        }\r\n    }.Custom(actions){\r\n        If(#closed# == 0){\r\n            If(#started_processing_id# == 0){\r\n                Button(Body: Em(Class: fa icon-paper-clip), Class: btn btn-danger, Contract: Notifications_Roles_Processing, Params: \"notific_id=#id#\", Page: notifications_roles)\r\n            }.Else{\r\n                Button(Body: Em(Class: fa fa-trash), Class: btn btn-danger, Contract: Notifications_Roles_Finishing, Params: \"notific_id=#id#\", Page: notifications_roles)\r\n            }\r\n        }\r\n    }.Where(#v_Where#).Order(\"closed ASC, id ASC\")\r\n\r\n    Div(Class: panel panel-primary){\r\n        Form(){\r\n            Div(Class: list-group-item){\r\n                Div(Class: row df f-valign){\r\n                    Div(Class: col-md-1 mt-sm text-right){\r\n                        Label(For: Search){\r\n                            Span(Body: LangRes(role))\r\n                        }\r\n                    }\r\n                    Div(Class: col-md-11 mc-sm){\r\n                        Div(Class: input-group){\r\n                            Input(Class: form-control, Type: text, Name: Search, Value: #v_Search#)\r\n                            Div(Class: input-group-btn){\r\n                                Button(Body: Em(Class: fa fa-search), Class: btn btn-default, Page: notifications_roles, PageParams: \"isSearch=1,v_Search=Val(Search)\")\r\n                            }\r\n                        }\r\n                    }\r\n                }  \r\n            }\r\n\r\n            Div(Class: list-group-item){ \r\n                Table(Source: src_notifications, Columns: \"$id$=custom_id,$role$=custom_role,$icon$=custom_icon,$page_name$=custom_page,$params$=custom_params,$started$=custom_date_started,$сlosed$=custom_date_finished,$status$=custom_status,$actions$=actions\")\r\n                If(GetVar(isSearch) == 1){\r\n                    Div(Class: text-center){  \r\n                        Button(Body: $view_all$, Class: btn btn-primary, Page: notifications_roles, PageParams: \"isSearch=0\")\r\n                    }\r\n                }\r\n            }\r\n\r\n            Div(Class: panel-footer clearfix){\r\n                Div(Class: pull-right){\r\n                    Button(Body: LangRes(send), Class: btn btn-primary, Page: notifications_roles_send)\r\n                }\r\n            }\r\n            \r\n        }           \r\n    }\r\n\r\n}","Conditions":"ContractAccess(\"@1EditPage\")","Menu":"default_menu"},{"Name":"notifications_roles_send","Value":"Div(Class: content-wrapper){\r\n\tSetTitle($role_notifics$)\r\n\tDiv(breadcrumb){\r\n\t\tSpan(Class: text-muted, Body: $role_notifics$)\r\n\t}\r\n\r\n    Div(Class: row df f-valign){\r\n        Div(Class: col-md-3)\r\n        Div(Class: col-md-6){\r\n\r\n            Div(Class: panel panel-primary){\r\n                Div(Class: panel-heading, Body: LangRes(role_notifics))\r\n                Form(){\r\n\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                            Div(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: role_id){\r\n                                    Span(Body: LangRes(role))\r\n                                }\r\n                            }\r\n                            Div(Class: col-md-9 mb-sm text-left){\r\n                                DBFind(Name: roles_list, Source: source_roles).Columns(role_name, id).Where(\"delete=0\")\r\n                                Select(Name: role_id, Source: source_roles, NameColumn: role_name, ValueColumn: id)\r\n                            } \r\n                        }\r\n                        Div(Class: row df f-valign){\r\n                            Div(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: closure_type){\r\n                                    Span(Body: LangRes(closure_type))\r\n                                }\r\n                            }\r\n                            Div(Class: col-md-9 mc-sm text-left){\r\n                                EcosysParam(Name: notification_closure, Source: src_closure_type)\r\n                                Select(Name: closure_type, Source: src_closure_type, NameColumn: name, ValueColumn: id)\r\n                            } \r\n                        }\r\n                    }\r\n\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                            Div(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: emission_type){\r\n                                    Span(Body: LangRes(icon))\r\n                                }\r\n                            }\r\n                            Div(Class: col-md-9 mb-sm text-left){\r\n                                EcosysParam(Name: notification_icon, Source: src_icon)\r\n                                Select(Name: icon_name, Source: src_icon, NameColumn: name, ValueColumn: name)\r\n                            } \r\n                        }\r\n                        Div(Class: row df f-valign){\r\n                            Div(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: text_header){\r\n                                    Span(Body: LangRes(header))\r\n                                }\r\n                            }\r\n                            Div(Class: col-md-9 mb-sm text-left){\r\n                                Input(Class: form-control, Value: \"Header text\", Type: text, Name: text_header)\r\n                            } \r\n                        }\r\n                        Div(Class: row df f-valign){\r\n                            Div(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: text_body){\r\n                                    Span(Body: LangRes(body_text))\r\n                                }\r\n                            }\r\n                            Div(Class: col-md-9 mc-sm text-left){\r\n                                Input(Class: form-control, Value: \"Body text\", Type: text, Name: text_body)\r\n                            } \r\n                        }\r\n                    }\r\n\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                            Div(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: page_name){\r\n                                    Span(Body: LangRes(page_name))\r\n                                }\r\n                            }\r\n                            Div(Class: col-md-9 mb-sm text-left){\r\n                                Input(Class: form-control, Value: \"notifications_testpage\", Type: text, Name: page_name)\r\n                            } \r\n                        }\r\n                        Div(Class: row df f-valign){\r\n                            Div(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: params_val){\r\n                                    Span(Body: LangRes(params))\r\n                                }\r\n                            }\r\n                            Div(Class: col-md-9 mc-sm text-left){\r\n                                Input(Class: form-control, Value: \"notific_val_int=11,notific_val_str=string\", Type: text, Name: params_val)\r\n                            } \r\n                        }\r\n                    }\r\n\r\n                    Div(Class: panel-footer clearfix){\r\n                        Div(Class: pull-right){\r\n                            Button(Body: LangRes(back), Class: btn btn-default, Page: notifications_roles)\r\n                            Button(Body: LangRes(send), Class: btn btn-primary, Page: notifications_roles, Contract: Notifications_Roles_Send)\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        Div(Class: col-md-3)\r\n    }\r\n}","Conditions":"ContractAccess(\"@1EditPage\")","Menu":"default_menu"},{"Name":"notifications_single","Value":"Div(Class: content-wrapper){\r\n\r\n\tSetTitle($single_notifics$)\r\n\tDiv(breadcrumb){\r\n\t\tSpan(Class: text-muted, Body: $single_notifics$)\r\n\t}\r\n\r\n    If(GetVar(isSearch) == 1){\r\n        SetVar(Name: v_Where, Value: \"recipient_name='#v_Search#' and notification_type=1\")\r\n    }.Else{\r\n        SetVar(Name: v_Where, Value: \"notification_type=1\")\r\n        SetVar(Name: v_Search, Value: \"\")\r\n    }\r\n\r\n    DBFind(Name: notifications, Source: src_notifications).Custom(custom_id){\r\n        If(#closed# == 0){\r\n            Span(Body: #id#)  \r\n        }.Else{\r\n            Span(Body: #id#).Style(color:#A9A9A9;)\r\n        }\r\n    }.Custom(custom_recipient){\r\n        If(#closed# == 0){\r\n            LinkPage(Page: profile_view, PageParams: \"v_member_id=#recipient_id#\"){\r\n                Image(Src: \"#recipient_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\r\n                Span(Class: h5 text-bold, Body: #recipient_name#)\r\n            }\r\n        }.Else{\r\n            Div(){\r\n                Image(Src: \"#recipient_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\r\n                Span(Class: h5 text-muted, Body: #recipient_name#)\r\n            }\r\n        }\r\n    }.Custom(custom_icon){\r\n        If(#closed# == 0){\r\n            Em(Class: fa #icon# fa-2x text-info)\r\n        }.Else{\r\n            Em(Class: fa #icon# fa-2x text-muted)\r\n        }\r\n    }.Custom(custom_page){\r\n        If(#closed# == 0){\r\n            LinkPage(Page: #page_name#, PageParams: \"notific_id=#id#,notific_type=#notification_type#,notific_header=#header_text#,#page_params#\"){\r\n                Span(Class: h5 text-bold, Body: #page_name#)\r\n            }\r\n        }.Else{\r\n            Div(){\r\n                Span(Class: h5 text-muted, Body: #page_name#)\r\n            }\r\n        }\r\n    }.Custom(custom_params){\r\n        If(#closed# == 0){\r\n            Span(Class: h6 m0, Body: \"#page_params#\")  \r\n        }.Else{\r\n            Span(Class: h6 m0, Body: #page_params#).Style(color:#A9A9A9;)\r\n        }\r\n    }.Custom(custom_date){\r\n        If(#closed# == 0){\r\n        }.Else{\r\n            P(Class: m0, Body: DateTime(DateTime: #finished_processing_time#, Format: \"DD.MM.YYYY HH:MI\")).Style(color:#A9A9A9;)\r\n            P(Class: m0 h6, Body: Address(#finished_processing_id#)).Style(color:#A9A9A9;)\r\n        }\r\n    }.Custom(custom_status){\r\n        If(#closed# == 0){\r\n            Span(Body: LangRes(active))\r\n        }.Else{\r\n            Span(Body: LangRes(active)).Style(color:#A9A9A9;)\r\n        }\r\n    }.Custom(actions){\r\n        If(#closed# == 0){\r\n            Button(Body: Em(Class: fa fa-trash), Class: btn btn-danger, Contract: Notifications_Single_Close, Params: \"notific_id=#id#\", Page: notifications_single)\r\n        }\r\n    }.Where(#v_Where#).Order(\"closed ASC, id ASC\")\r\n\r\n    Div(Class: panel panel-primary){\r\n        Form(){\r\n            Div(Class: list-group-item){\r\n                Div(Class: row df f-valign){\r\n                    Div(Class: col-md-1 mt-sm text-right){\r\n                        Label(For: Search){\r\n                            Span(Body: LangRes(recipient))\r\n                        }\r\n                    }\r\n                    Div(Class: col-md-11 mc-sm){\r\n                        Div(Class: input-group){\r\n                            Input(Class: form-control, Type: text, Name: Search, Value: #v_Search#)\r\n                            Div(Class: input-group-btn){\r\n                                Button(Body: Em(Class: fa fa-search), Class: btn btn-default, Page: notifications_single, PageParams: \"isSearch=1,v_Search=Val(Search)\")\r\n                            }\r\n                        }\r\n                    }\r\n                }  \r\n            }\r\n\r\n            Div(Class: list-group-item){ \r\n                Table(Source: src_notifications, Columns: \"$id$=custom_id,$recipient$=custom_recipient,$icon$=custom_icon,$page_name$=custom_page,$params$=custom_params,$сlosed$=custom_date,$status$=custom_status,$actions$=actions\")\r\n                If(GetVar(isSearch) == 1){\r\n                    Div(Class: text-center){  \r\n                        Button(Body: $view_all$, Class: btn btn-primary, Page: notifications_single, PageParams: \"isSearch=0\")\r\n                    }\r\n                }\r\n            }\r\n\r\n            Div(Class: panel-footer clearfix){\r\n                Div(Class: pull-right){\r\n                    Button(Body: LangRes(send), Class: btn btn-primary, Page: notifications_single_send)\r\n                }\r\n            }\r\n            \r\n        }           \r\n    }\r\n\r\n}","Conditions":"ContractAccess(\"@1EditPage\")","Menu":"default_menu"},{"Name":"notifications_single_send","Value":"Div(Class: content-wrapper){\r\n\tSetTitle($single_notifics$)\r\n\tDiv(breadcrumb){\r\n\t\tSpan(Class: text-muted, Body: $single_notifics$)\r\n\t}\r\n\r\n    Div(Class: row df f-valign){\r\n        Div(Class: col-md-3)\r\n        Div(Class: col-md-6){\r\n\r\n            Div(Class: panel panel-primary){\r\n                Div(Class: panel-heading, Body: LangRes(single_notifics))\r\n                Form(){\r\n\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                            Div(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: role_name){\r\n                                    Span(Body: LangRes(member))\r\n                                }\r\n                            }\r\n                            Div(Class: col-md-9 mc-sm text-left){\r\n                                DBFind(Name: member, Source: source_members).Columns(member_name, id)\r\n                                Select(Name: member_id, Source: source_members, NameColumn: member_name, ValueColumn: id)\r\n                            } \r\n                        }\r\n                    }\r\n\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                            Div(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: emission_type){\r\n                                    Span(Body: LangRes(icon))\r\n                                }\r\n                            }\r\n                            Div(Class: col-md-9 mb-sm text-left){\r\n                                EcosysParam(Name: notification_icon, Source: src_icon)\r\n                                Select(Name: icon_name, Source: src_icon, NameColumn: name, ValueColumn: name)\r\n                            } \r\n                        }\r\n                        Div(Class: row df f-valign){\r\n                            Div(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: text_header){\r\n                                    Span(Body: LangRes(header))\r\n                                }\r\n                            }\r\n                            Div(Class: col-md-9 mb-sm text-left){\r\n                                Input(Class: form-control, Value: \"Header text\", Type: text, Name: text_header)\r\n                            } \r\n                        }\r\n                        Div(Class: row df f-valign){\r\n                            Div(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: text_body){\r\n                                    Span(Body: LangRes(body_text))\r\n                                }\r\n                            }\r\n                            Div(Class: col-md-9 mc-sm text-left){\r\n                                Input(Class: form-control, Value: \"Body text\", Type: text, Name: text_body)\r\n                            } \r\n                        }\r\n                    }\r\n\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                            Div(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: page_name){\r\n                                    Span(Body: LangRes(page_name))\r\n                                }\r\n                            }\r\n                            Div(Class: col-md-9 mb-sm text-left){\r\n                                Input(Class: form-control, Value: \"notifications_testpage\", Type: text, Name: page_name)\r\n                            } \r\n                        }\r\n                        Div(Class: row df f-valign){\r\n                            Div(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: params_val){\r\n                                    Span(Body: LangRes(params))\r\n                                }\r\n                            }\r\n                            Div(Class: col-md-9 mc-sm text-left){\r\n                                Input(Class: form-control, Value: \"notific_val_int=11,notific_val_str=string\", Type: text, Name: params_val)\r\n                            } \r\n                        }\r\n                    }\r\n\r\n                    Div(Class: panel-footer clearfix){\r\n                        Div(Class: pull-right){\r\n                            Button(Body: LangRes(back), Class: btn btn-default, Page: notifications_single)\r\n                            Button(Body: LangRes(send), Class: btn btn-primary, Page: notifications_single, Contract: Notifications_Single_Send)\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        Div(Class: col-md-3)\r\n    }\r\n}","Conditions":"ContractAccess(\"@1EditPage\")","Menu":"default_menu"},{"Name":"notifications_testpage","Value":"Div(Class: content-wrapper){\r\n\r\n\tSetTitle($test_page$)\r\n\tDiv(Class: breadcrumb){\r\n\t\tSpan(Class: text-muted, Body: LangRes(test_page))\r\n\t}\r\n\r\n    If(#notific_id# \u003e 0){\r\n    }.Else{\r\n        Div(Class: md-12 alert alert-danger text-center){\r\n            Span(Body: LangRes(attention))\r\n        }\r\n        SetVar(Name: notific_id, Value: \"0\")\r\n        SetVar(Name: notific_type, Value: \"0\")\r\n        SetVar(Name: notific_header, Value: \"null\")\r\n        SetVar(Name: notific_val_int, Value: \"null\")\r\n        SetVar(Name: notific_val_str, Value: \"null\")\r\n    }\r\n\r\n    Div(Class: row df f-valign){\r\n        Div(Class: col-md-3)\r\n        Div(Class: col-md-6){\r\n            Div(Class: panel panel-default){\r\n                Form(){ \r\n\r\n\t\t\t\t\tDiv(Class: list-group-item text-center){\r\n\t\t\t\t\t\tSpan(Class: h3 , Body: #notific_header#)\t\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tDiv(Class: list-group-item){\r\n\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-right){\r\n\t\t\t\t\t\t\t\tSpan(Class: h4, Body: LangRes(id))\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-left){\r\n\t\t\t\t\t\t\t\tSpan(Class: h4, Body: #notific_id#)\r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-right){\r\n\t\t\t\t\t\t\t\tSpan(Class: h4, Body: LangRes(type))\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-left){\r\n                                If(#notific_type# \u003e 0){\r\n\t\t\t\t\t\t\t\t    Span(Class: h4, Body: EcosysParam(Name: notification_type, Index: #notific_type#))\r\n                                }.Else{\r\n                                    Span(Class: h4, Body: #notific_type#)\r\n                                }\r\n                            } \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tDiv(Class: list-group-item){\r\n\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-right){\r\n\t\t\t\t\t\t\t\tSpan(Class: h4, Body: LangRes(value_number))\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-left){\r\n\t\t\t\t\t\t\t\tSpan(Class: h4, Body: #notific_val_int#)\r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-right){\r\n\t\t\t\t\t\t\t\tSpan(Class: h4, Body: LangRes(value_string))\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-left){\r\n\t\t\t\t\t\t\t\tSpan(Class: h4, Body: #notific_val_str#)\r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\t\t\t\t\r\n\r\n\t\t\t\t\tIf(#notific_type# == 1){\r\n\t\t\t\t\t\tDiv(Class: panel-footer clearfix){\r\n\t\t\t\t\t\t\tDiv(Class: pull-right){\r\n                                Button(Body: LangRes(close), Class: btn btn-danger, Contract: Notifications_Single_Close, Params: \"notific_id=#notific_id#\", Page: notifications_single)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tIf(#notific_type# == 2){\r\n\t\t\t\t\t\tDiv(Class: panel-footer clearfix){\r\n\t\t\t\t\t\t\tDiv(Class: pull-left){\r\n                                Button(Body: LangRes(begin), Class: btn btn-danger, Contract: Notifications_Roles_Processing, Params: \"notific_id=#notific_id#\", Page: notifications_roles)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(Class: pull-right){\r\n                                Button(Body: LangRes(close), Class: btn btn-danger, Contract: Notifications_Roles_Finishing, Params: \"notific_id=#notific_id#\", Page: notifications_roles)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n                }\r\n            }\r\n        }\r\n        Div(Class: col-md-3)\r\n    }\r\n}","Conditions":"ContractAccess(\"@1EditPage\")","Menu":"default_menu"},{"Name":"profile_edit","Value":"Div(Class: content-wrapper){\n\n\tSetTitle($editing_profile$)\n\tDiv(Class: breadcrumb){\n\t\tLinkPage($user_info$, profile_view)\n\t\tSpan(/).Style(margin-right: 10px; margin-left: 10px;)\n\t\tSpan(Class: text-muted, Body: $editing_profile$)\n\t}\n\n\tIf(Or(#v_member_id#\u003e0,#v_member_id#\u003c0)){\n        DBFind(Name: member, Source: src_member).Where(id=#v_member_id#).Vars(prefix)\n    }.Else{\n        DBFind(Name: member, Source: src_member).Where(id=#key_id#).Vars(prefix)\n    }\n\n    If(Or(#prefix_id#\u003e0,#prefix_id#\u003c0)){\n\t\tSetVar(Name: prefix_birthdate, Value: DateTime(DateTime: #prefix_birthdate#, Format: \"YYYY-MM-DD\"))\n    }.Else{\n        SetVar(Name: prefix_member_name, Value: \"\")\n    }\n\n    Div(Class: row df f-valign){\n        Div(Class: col-md-3)\n        Div(Class: col-md-6){\n            Div(Class: panel panel-primary){\n                Div(Class: panel-heading, Body: LangRes(editing_profile))\n                Form(){ \n\n\t\t\t\t\tDiv(Class: list-group-item){\n\t\t\t\t\t\tDiv(Class: row df f-valign){\n\t\t\t\t\t\t\tDiv(Class: col-md-3 mt-sm text-right){\n\t\t\t\t\t\t\t\tLabel(For: username){\n\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(username))\n      \t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tDiv(Class: col-md-9 mc-sm text-left){\n\t\t\t\t\t\t\t\tInput(Class: form-control, Type: text, Name: member_name, Value: #prefix_member_name#)\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tDiv(Class: list-group-item){\n\t\t\t\t\t\tDiv(Class: row df f-valign){\n\t\t\t\t\t\t\tDiv(Class: col-md-3 mt-sm text-right){\n\t\t\t\t\t\t\t\tLabel(For: avatar){\n\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(avatar))\n\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tDiv(col-md-9 mc-sm text-left){\n\t\t\t\t\t\t\t\tImageInput(Name: avatar, Width: 100, Ratio: 1/1)\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                    \n\t\t\t\t\tDiv(Class: panel-footer clearfix){\n\t\t\t\t\t\tDiv(Class: pull-right){\n\t\t\t\t\t\t\tButton(Body: LangRes(save), Class: btn btn-primary, Contract: Profile_Edit , Page: members_list,).Alert(Text: $want_save_changes$, ConfirmButton: $yes$, CancelButton: $no$, Icon: question)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                }\n            }\n        }\n        Div(Class: col-md-3)\n    }\n}","Conditions":"ContractAccess(\"@1EditPage\")","Menu":"default_menu"},{"Name":"profile_view","Value":"Div(Class: content-wrapper){\r\n\r\n\tSetTitle($user_info$)\r\n\tDiv(Class: breadcrumb){\r\n\t\tSpan(Class: text-muted, Body: LangRes(user_info))\r\n\t}\r\n\r\n    If(Or(#v_member_id#\u003e0,#v_member_id#\u003c0)){\r\n    }.Else{\r\n\t\tSetVar(Name: v_member_id, Value: #key_id#)\r\n    }\r\n\tDBFind(Name: member, Source: src_member).Where(id=#v_member_id#).Vars(prefix)\r\n\tDBFind(Name: keys, Source: src_keys).Where(id=#v_member_id#).Vars(tokens)\t\r\n\t\r\n\tIf(Or(#prefix_id#\u003e0,#prefix_id#\u003c0)){\r\n    }.Else{\r\n        SetVar(Name: prefix_member_name, Value: \"\")\r\n    }\r\n\r\n    Div(Class: row df f-valign){\r\n        Div(Class: col-md-3)\r\n        Div(Class: col-md-6){\r\n            Div(Class: panel panel-default){\r\n                Form(){ \r\n\t\t\t\t\tDiv(Class: list-group-item text-center){\r\n\t\t\t\t\t\tSpan(Class: h3, Body: LangRes(user_info))\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tDiv(Class: list-group-item){\r\n\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\tDiv(Class: col-md-12 mt-sm text-center){\r\n\r\n\t\t\t\t\t\t\t\tIf(Or(#prefix_id#\u003e0,#prefix_id#\u003c0)){\r\n\t\t\t\t\t\t\t\t\tIf(#prefix_id# == #key_id#){\r\n\t\t\t\t\t\t\t\t\t\tButton(Class: btn btn-link, Page: profile_edit, PageParams: \"v_member_id=#id#\"){\r\n\t\t\t\t\t\t\t\t\t\t\tImage(Src: \"#prefix_avatar#\", Class: img-circle).Style(width: 100px;  border: 1px solid #5A5D63; margin-bottom: 15px;)\r\n\t\t\t\t\t\t\t\t\t\t\tDiv(Body: Span(Class: h3 text-bold, Body: #prefix_member_name#))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\tImage(Src: \"#prefix_avatar#\", Class: img-circle).Style(width: 100px;  border: 1px solid #5A5D63; margin-bottom: 15px;)\r\n\t\t\t\t\t\t\t\t\t\tDiv(Body: Span(Class: h3 text-bold, Body: #prefix_member_name#))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\tButton(Class: btn btn-link, Page: profile_edit){\r\n\t\t\t\t\t\t\t\t\t\tSpan(Class: h3 text-bold, Body: LangRes(editing_profile))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tDiv(Class: list-group-item){\r\n\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\tDiv(Class: col-md-12 mt-sm text-center){\r\n\t\t\t\t\t\t\t\tSpan(Class: h4 text-bold, Body: Address(#prefix_id#))\r\n\t\t\t\t\t\t\t\tDiv(Class: text-muted m0 h5, Body: LangRes(member_id))\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n        Div(Class: col-md-3)\r\n    }\r\n}","Conditions":"ContractAccess(\"@1EditPage\")","Menu":"default_menu"},{"Name":"roles_assign","Value":"Div(Class: content-wrapper){\r\n\t\r\n    If(#v_role_id# \u003e 0){\r\n\r\n        SetTitle($assign$)\r\n        Div(Class: breadcrumb){\r\n            LinkPage($roles$, roles_list)\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            LinkPage(#v_role_name#, roles_view,, \"v_role_id=#v_role_id#,v_role_name=#v_role_name#\")\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            Span(Class: text-muted, Body: $assign$)\r\n        }\r\n\r\n        Div(Class: row df f-valign){\r\n            Div(Class: col-md-3)\r\n            Div(Class: col-md-6){\r\n\r\n                Div(Class: panel panel-primary){\r\n                    Div(Class: panel-heading, Body: LangRes(assign))\r\n                    Form(){  \r\n\r\n\t\t\t\t\t\tDiv(Class: list-group-item){\r\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\t\tLabel(For: role_id){\r\n\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(role))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-9 mt-sm text-left){\r\n\t\t\t\t\t\t\t\t\tDBFind(Name: roles_list, Source: source_roles).Columns(role_name, role_type, id).Where(\"id=#v_role_id#\").Vars(prefix)\r\n\t\t\t\t\t\t\t\t\tInput(Class: form-control hidden, Type: text, Name: role_id, Value: #prefix_id#)\r\n\t\t\t\t\t\t\t\t\tSpan(Class: h5, Body: #prefix_role_name#)\r\n\t\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tDiv(Class: list-group-item){\r\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\t\tLabel(For: role_id){\r\n\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(type))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-9 mt-sm text-left){\r\n\t\t\t\t\t\t\t\t\tSpan(Class: h5, Body: EcosysParam(Name: roles_types, Index: #prefix_role_type#)\r\n\t\t\t\t\t\t\t\t\tIf(#prefix_role_type# != 1){\r\n\t\t\t\t\t\t\t\t\t\tP(Class: m0 text-danger h6, Body: LangRes(appointment_impossible))\r\n\t\t\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tIf(#prefix_role_type# == 1){\r\n\t\t\t\t\t\t\tDiv(Class: list-group-item){\r\n\t\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\t\t\tLabel(For: role_name){\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(member))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\t\tDBFind(Name: member, Source: source_members).Columns(member_name, id).Custom(custom_username){\r\n                                            Span(Body: #member_name# ( Address(#id#) ) ) \r\n                                        }\r\n\t\t\t\t\t\t\t\t\t\tSelect(Name: member_id, Source: source_members, NameColumn: custom_username, ValueColumn: id)\r\n\t\t\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n                            \r\n                        Div(Class: panel-footer clearfix){\r\n                            Div(Class: pull-right){\r\n                                Button(Body: LangRes(back), Class: btn btn-default, Page: roles_view, PageParams: \"v_role_id=#v_role_id#,v_role_name=#v_role_name#\")\r\n                                If(#prefix_role_type# == 1){\r\n                                    Button(Body: LangRes(assign), Class: btn btn-primary, Page: roles_view, PageParams: \"v_role_id=#v_role_id#,v_role_name=#v_role_name#\", Contract: Roles_Assign).Alert(Text: $want_assign_member_to_role$, ConfirmButton: $yes$, CancelButton: $no$, Icon: question)\r\n                                }\r\n                            }\r\n                        }\r\n                        \r\n                    }\r\n\r\n                }\r\n            }\r\n            Div(Class: col-md-3)\r\n        }\r\n        \r\n    }.Else{\r\n        Div(Class: md-12 alert alert-danger text-center){\r\n            Span(Body: LangRes(attention))\r\n        }\r\n    }\r\n}","Conditions":"ContractAccess(\"@1EditPage\")","Menu":"default_menu"},{"Name":"roles_create","Value":"Div(Class: content-wrapper){\r\n\r\n\tSetTitle($new_role$)\r\n\tDiv(Class: breadcrumb){\r\n\t\tLinkPage($roles$, roles_list)\r\n\t\tSpan(/).Style(margin-right: 10px; margin-left: 10px;)\r\n\t\tSpan(Class: text-muted, Body: $new_role$)\r\n\t}\r\n\r\n    Div(Class: row df f-valign){\r\n        Div(Class: col-md-3)\r\n        Div(Class: col-md-6){\r\n\r\n            Div(Class: panel panel-primary){\r\n                Div(Class: panel-heading, Body: LangRes(new_role))\r\n                Form(){   \r\n\r\n                        Div(Class: list-group-item){\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: role_name){\r\n                                        Span(Body: LangRes(name))\r\n                                    }\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    Input(Class: form-control, Type: text, Name: role_name)\r\n                                } \r\n                            }\r\n                        }\r\n\r\n                        Div(Class: list-group-item){\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: role_type){\r\n                                        Span(Body: LangRes(type))\r\n                                    }\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    EcosysParam(Name: roles_types_short, Source: src_roles)\r\n                                    Select(Name: role_type, Source: src_roles, NameColumn: name, ValueColumn: id)\r\n                                } \r\n                            }\r\n                        }\r\n\r\n                    Div(Class: panel-footer clearfix){\r\n                        Div(Class: pull-right){\r\n                            Button(Body: LangRes(back), Class: btn btn-default, Page: roles_list)\r\n                            Button(Body: LangRes(create), Class: btn btn-primary, Page: roles_list, Contract: Roles_Create).Alert(Text: $want_create_new_role$, ConfirmButton: $yes$, CancelButton: $no$, Icon: question)\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n        Div(Class: col-md-3)\r\n    }\r\n}","Conditions":"ContractAccess(\"@1EditPage\")","Menu":"default_menu"},{"Name":"roles_list","Value":"Div(Class: content-wrapper){\r\n\r\n\tSetTitle($roles$)\r\n\tDiv(breadcrumb){\r\n\t\tSpan(Class: text-muted, Body: $roles$)\r\n\t}\r\n\r\n    If(GetVar(isSearch) == 1){\r\n        SetVar(Name: v_Where, Value: \"role_name='#v_Search#'\")\r\n    }.Else{\r\n        SetVar(Name: v_Where, Value: \"id\u003e0\")\r\n        SetVar(Name: v_Search, Value: \"\")\r\n    }\r\n\r\n    DBFind(Name: roles_list, Source: src_roles_list).Custom(custom_id){\r\n        If(#delete# == 0){\r\n            Span(Body: #id#)  \r\n        }.Else{\r\n            Span(Class: text-muted, Body: #id#)\r\n        }\r\n    }.Custom(custom_creator){\r\n        If(#role_type#==3){\r\n            Div(){\r\n                Span(Class: h5, Body: LangRes(system_role))\r\n            }\r\n        }.Else{\r\n            If(#delete# == 0){\r\n                LinkPage(Page: profile_view, PageParams: \"v_member_id=#creator_id#\"){\r\n                    Image(Src: \"#creator_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\r\n                    Span(Class: h5 text-bold, Body: #creator_name#)\r\n                }\r\n            }.Else{\r\n                Div(){\r\n                    Image(Src: \"#creator_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\r\n                    Span(Class: h5 text-muted, Body: #creator_name#)\r\n                }\r\n            }\r\n        }\r\n    }.Custom(custom_name){\r\n        If(#delete# == 0){\r\n            LinkPage(Page: roles_view, PageParams: \"v_role_id=#id#,v_role_name=#role_name#\"){\r\n                Span(Class: h5 text-bold, Body: #role_name#)\r\n            }\r\n        }.Else{\r\n            Span(Class: h5 text-muted, Body: #role_name#)\r\n        }\r\n\t}.Custom(custom_date){\r\n        If(#delete# == 0){\r\n            Div(Class: h6 m0, Body: DateTime(DateTime: #date_create#, Format: \"DD.MM.YYYY HH:MI\"))\r\n            Div(Class: h6 m0, Body: DateTime(DateTime: #date_delete#, Format: \"DD.MM.YYYY HH:MI\"))\r\n        }.Else{\r\n            Div(Class: h6 m0 text-muted, Body: DateTime(DateTime: #date_create#, Format: \"DD.MM.YYYY HH:MI\"))\r\n            Div(Class: h6 m0 text-muted, Body: DateTime(DateTime: #date_delete#, Format: \"DD.MM.YYYY HH:MI\"))\r\n        }\r\n\t}.Custom(custom_type){\r\n        If(#delete# == 0){\r\n            Span(Body: EcosysParam(Name: roles_types, Index: #role_type#))\r\n        }.Else{\r\n            Span(Class: text-muted, Body: EcosysParam(Name: roles_types, Index: #role_type#))\r\n        }\r\n    }.Custom(custom_status){\r\n        If(#delete# == 0){\r\n            Span(Body: LangRes(active))\r\n        }.Else{\r\n            Span(Class: text-muted, Body: LangRes(deleted))\r\n        }\r\n    }.Custom(actions){\r\n        If(And(#delete#==0,#role_type#!=3)){\r\n            Div(Class: text-center, Body: Button(Body: Em(Class: fa fa-trash), Class: btn btn-danger, Contract: Roles_Del, Params: \"role_id=#id#\", Page: roles_list))\r\n        }\r\n   }.Where(#v_Where#).Order(\"delete ASC, id ASC\")\r\n\r\n    Div(Class: panel panel-primary){\r\n        Form(){\r\n            Div(Class: list-group-item){\r\n                Div(Class: row df f-valign){\r\n                    Div(Class: col-md-1 mt-sm text-right){\r\n                        Label(For: Search){\r\n                            Span(Body: LangRes(name))\r\n                        }\r\n                    }\r\n                    Div(Class: col-md-11 mc-sm){\r\n                        Div(Class: input-group){\r\n                            Input(Class: form-control, Type: text, Name: Search, Value: #v_Search#)\r\n                            Div(Class: input-group-btn){\r\n                                Button(Body: Em(Class: fa fa-search), Class: btn btn-default, Page: roles_list, PageParams: \"isSearch=1,v_Search=Val(Search)\")\r\n                            }\r\n                        }\r\n                    }\r\n                }  \r\n            }\r\n\r\n            Div(Class: list-group-item){ \r\n                Table(Source: src_roles_list, Columns: \"$id$=custom_id,$name$=custom_name,$type$=custom_type,$created$ / $deleted$=custom_date,$status$=custom_status,$creator$=custom_creator,$actions$=actions\")\r\n                If(GetVar(isSearch) == 1){\r\n                    Div(Class: text-center){  \r\n                        Button(Body: $view_all$, Class: btn btn-primary, Page: roles_list, PageParams: \"isSearch=0\")\r\n                    }\r\n                }\r\n            }\r\n\r\n            Div(Class: panel-footer clearfix){\r\n                Div(Class: pull-right){\r\n                    Button(Body: LangRes(create), Class: btn btn-primary, Page: roles_create)\r\n                }\r\n            }\r\n            \r\n        }           \r\n    }\r\n\r\n}","Conditions":"ContractAccess(\"@1EditPage\")","Menu":"default_menu"},{"Name":"roles_view","Value":"Div(Class: content-wrapper){\r\n\t\r\n    If(#v_role_id# \u003e 0){\r\n\r\n        SetTitle($role$: #v_role_name#)\r\n        Div(Class: breadcrumb){\r\n            LinkPage($roles$, roles_list)\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            Span(Class: text-muted, Body: #v_role_name#)\r\n        }\r\n\r\n        DBFind(Name: roles_assign, Source: src_roles_assign).Custom(custom_id){\r\n            If(#delete# == 0){\r\n                Span(Body: #id#)  \r\n            }.Else{\r\n                Span(Class: text-muted, Body: #id#)\r\n            }\r\n        }.Custom(custom_appointed){\r\n            If(#delete# == 0){\r\n                Span(Body: #appointed_by_name#)  \r\n            }.Else{\r\n                Span(Class: text-muted, Body: #appointed_by_name#)\r\n            }\r\n        }.Custom(custom_role_name){\r\n            If(#delete# == 0){\r\n                Span(Body: #role_name#)  \r\n            }.Else{\r\n                Span(Class: text-muted, Body: #role_name#)\r\n            }\r\n        }.Custom(custom_member){\r\n            If(#delete# == 0){\r\n                LinkPage(Page: profile_view, PageParams: \"v_member_id=#member_id#\"){\r\n\t\t\t\t\tIf(#member_avatar# != \"\"){\r\n\t\t\t\t\t\tImage(Src: \"#member_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\r\n\t\t\t\t\t}\r\n                    Span(Class: h5 text-bold, Body: #member_name#)\r\n                }\r\n            }.Else{\r\n                Div(){\r\n\t\t\t\t\tIf(#member_avatar# != \"\"){\r\n\t\t\t\t\t\tImage(Src: \"#member_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\r\n\t\t\t\t\t}\r\n                    Span(Class: h5 text-muted, Body: #member_name#)\r\n                }\r\n            }\r\n        }.Custom(custom_address){\r\n            If(#delete# == 0){\r\n                Span(Body: Address(#member_id#))\r\n            }.Else{\r\n                Span(Class: text-muted, Body: Address(#member_id#))\r\n            }\r\n        }.Custom(custom_type){\r\n            If(#delete# == 0){\r\n                Span(Body: EcosysParam(Name: roles_types, Index: #role_type#))\r\n            }.Else{\r\n                Span(Class: text-muted, Body: EcosysParam(Name: roles_types, Index: #role_type#))\r\n            }\r\n        }.Custom(custom_date){\r\n            If(#delete# == 0){\r\n                Div(Class: h6 m0, Body: DateTime(DateTime: #date_start#, Format: \"DD.MM.YYYY HH:MI\"))\r\n                Div(Class: h6 m0, Body: DateTime(DateTime: #date_end#, Format: \"DD.MM.YYYY HH:MI\"))\r\n            }.Else{\r\n                Div(Class: h6 m0 text-muted, Body: DateTime(DateTime: #date_start#, Format: \"DD.MM.YYYY HH:MI\"))\r\n                Div(Class: h6 m0 text-muted, Body: DateTime(DateTime: #date_end#, Format: \"DD.MM.YYYY HH:MI\"))\r\n            }\r\n        }.Custom(custom_status){\r\n            If(#delete# == 0){\r\n                Span(Body: LangRes(active))\r\n            }.Else{\r\n                Span(Class: text-muted, Body: LangRes(deleted))\r\n            }\r\n        }.Custom(actions){\r\n            If(#delete# == 0){\r\n                Div(Class: text-center, Button(Body: Em(Class: fa fa-trash), Class: btn btn-danger, Contract: Roles_Unassign, Params: \"row_id=#id#\", Page: roles_view, PageParams: \"v_role_id=#v_role_id#,v_role_name=#v_role_name#\"))\r\n            }\r\n        }.Where(\"role_id='#v_role_id#'\").Order(\"delete ASC, id ASC\")\r\n\r\n        Div(Class: panel panel-primary){\r\n            Form(){\r\n                Div(Class: list-group-item){ \r\n                    Table(Source: src_roles_assign, Columns: \"$id$=custom_id,$member$=custom_member,$member_id$=custom_address,$role$=custom_role_name,$type$=custom_type,$appointed$ / $deleted$=custom_date,$appointed$=custom_appointed,$status$=custom_status,$actions$=actions\")\r\n                }\r\n                Div(Class: panel-footer clearfix){\r\n                    Div(Class: pull-right){\r\n                        Button(Body: LangRes(back), Class: btn btn-default, Page: roles_list)\r\n                        Button(Body: LangRes(assign), Class: btn btn-primary, Page: roles_assign, PageParams: \"v_role_id=#v_role_id#,v_role_name=#v_role_name#\")\r\n                    }\r\n                }\r\n            }           \r\n        }\r\n\r\n    }.Else{\r\n        Div(Class: md-12 alert alert-danger text-center){\r\n            Span(Body: LangRes(attention))\r\n        }\r\n    }\r\n\r\n}","Conditions":"ContractAccess(\"@1EditPage\")","Menu":"default_menu"},{"Name":"voting_create","Value":"Div(Class: content-wrapper){\r\n\r\n\tSetTitle($new_voting$)\r\n\tDiv(Class: breadcrumb){\r\n\t\tLinkPage($voting$, voting_list)\r\n\t\tSpan(/).Style(margin-right: 10px; margin-left: 10px;)\r\n\t\tSpan(Class: text-muted, Body: $new_voting$)\r\n\t}\r\n\r\n    Div(Class: row df f-valign){\r\n        Div(Class: col-md-3)\r\n        Div(Class: col-md-6){\r\n\t\t\r\n            Div(Class: panel panel-primary){\r\n                Div(Class: panel-heading, Body: LangRes(new_voting))\r\n                Form(){\r\n\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                \t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: voting_name){\r\n                                    Span(Body: LangRes(name))\r\n                                }\r\n                \t\t\t}\r\n                \t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n                \t\t\t    Input(Name: voting_name, Class: form-control, Type: text, Value: New voting)\r\n                \t\t\t}\r\n                        }                   \r\n                    }\r\n\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                \t\t\tDiv(Class: col-md-3 mt-lg text-right){\r\n                                Label(For: description){\r\n                                    Span(Body: LangRes(description))\r\n                                }\r\n                            }\r\n                \t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n                \t\t\t    Input(Name: description, Class: form-control, Type: textarea, Value: no)\r\n                \t\t\t}\r\n                        }                      \r\n                    }\r\n\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                \t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: type_participants){\r\n                                    Span(Body: LangRes(participants))\r\n                                }\r\n                \t\t\t}\r\n                \t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n                                EcosysParam(Name: type_voting_participants, Source: type_voting_participants)\r\n                \t\t\t    Select(Name: type_participants, Source: type_voting_participants, NameColumn: name, ValueColumn: id)\r\n                \t\t\t}\r\n                        }  \r\n                    }\r\n\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                \t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: type_decision){\r\n                                    Span(Body: LangRes(decision))\r\n                                }\r\n                \t\t\t}\r\n                \t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n                                EcosysParam(Name: type_voting_decisions, Source: type_voting_decisions)\r\n                \t\t\t    Select(Name: type_decision, Source: type_voting_decisions, NameColumn: name, ValueColumn: id)\r\n                \t\t\t}\r\n                        }                       \r\n                    }\r\n\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                \t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: start_date){\r\n                                    Span(Body: LangRes(date_start))\r\n                                }\r\n                            }\r\n                \t\t\tDiv(Class: col-md-5 mc-sm text-left){\r\n                                Input(Name: start_date, Class: form-control, Type: date, Value: Now(\"YYYY-MM-DD\", 3 days))\r\n                            }\r\n                \t\t\tDiv(Class: col-md-4 mc-sm text-left){\r\n                                Input(Name: start_time, Class: form-control, Type: time, Value: Now(\"HH:MI\"))\r\n                            }\r\n                        }                       \r\n                    }\r\n\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                \t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: end_date){\r\n                                    Span(Body: LangRes(date_end))\r\n                                }\r\n                            }\r\n                \t\t\tDiv(Class: col-md-5 mc-sm text-left){\r\n                                Input(Name: end_date, Class: form-control, Type: date, Value: Now(\"YYYY-MM-DD\", 21 days))\r\n                            }\r\n                \t\t\tDiv(Class: col-md-4 mc-sm text-left){\r\n                                Input(Name: end_time, Class: form-control, Type: time, Value: Now(\"HH:MI\"))\r\n                            }\r\n                        }                       \r\n                    }\r\n\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                \t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: volume){\r\n                                    Span(Body: LangRes(voting_volume))\r\n                                }\r\n                            }\r\n                \t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n                                Input(Name: volume, Class: form-control, Type: number, Value: 75)\r\n                                P(Class: m0 text-muted, Body: $voting_volume_desc$)\r\n                            }\r\n                        }                       \r\n                    }\r\n\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                \t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: quorum){\r\n                                    Span(Body: LangRes(voting_quorum))\r\n                                }\r\n                            }\r\n                \t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n                                Input(Name: quorum, Class: form-control, Type: number, Value: 50)\r\n                                P(Class: m0 text-muted, Body: $voting_quorum_desc$)\r\n                            }\r\n                        }                     \r\n                    }\r\n\r\n                    Div(Class: panel-footer clearfix){\r\n                        Div(Class: pull-left){\r\n                            Input(Name: now_date, Class: form-control hidden, Type: text, Value: Now(\"YYYY-MM-DD HH:MI\"))\r\n                            Input(Name: type_voting, Class: form-control hidden, Type: text, Value: 1)\r\n                        }\r\n                        Div(Class: pull-right){\r\n                            Button(Body: LangRes(back), Class: btn btn-default, Page: voting_list)\r\n                            Button(Body: LangRes(create), Class: btn btn-primary, Page: voting_list, Contract: voting_CreateNew)\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\t\t}\r\n\t\tDiv(Class: col-md-3)\r\n    }\r\n}","Conditions":"ContractAccess(\"@1EditPage\")","Menu":"default_menu"},{"Name":"voting_decision_candidates","Value":"Div(Class: content-wrapper){\r\n\t\r\n    If(#vID# \u003e 0){\r\n\r\n        DBFind(Name: voting_instances, Source: src_voting_instances).Where(\"id=#vID#\").Vars(instance)\r\n\r\n        SetTitle($subject_voting$)\r\n        Div(Class: breadcrumb){\r\n            LinkPage($voting$, voting_list)\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            LinkPage(#instance_name#, voting_view,, \"vID=#vID#\")\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            Span(Class: text-muted, Body: $subject_voting$)\r\n        }\r\n\r\n        Div(Class: row df f-valign){\r\n            Div(Class: col-md-2)\r\n            Div(Class: col-md-8){\r\n\r\n                Div(Class: panel panel-primary){\r\n                    Form(){  \r\n\t\t\t\t\t\r\n\t\t\t\t\t\tInput(Name: memberID, Class: form-control hidden, Type: text, Value: 0)\r\n\t\t\t\t\t\tInput(Name: votingID, Class: form-control hidden, Type: text, Value: #vID#)\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tDiv(Class: list-group-item){\r\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\t\tLabel($candidates$)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-left){\r\n                                    Div(form-text text-muted, $can_apply_voting$)\r\n\t\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-3 mc-sm text-right){\r\n                                    Button(Body: LangRes(apply), Class: btn btn-primary, Page: voting_decision_candidates, PageParams: \"vID=Val(votingID)\", Contract: voting_SubjectCandidates)\r\n                                } \r\n\t\t\t\t\t\t\t}\r\n                            Div(Class: row df){\r\n                    \t\t\tDiv(Class: col-md-3 mt-sm)\r\n                    \t\t\tDiv(Class: col-md-8 mt-sm text-left){\r\n                                    DBFind(Name: voting_subject, Source: src_voting_subject).Where(\"voting_id=#vID#\").Custom(custom_address){\r\n                                        Span(Address(#member_id#))\r\n\t                                }.Custom(custom_member){\r\n\t\t\t\t\t\t\t\t\t\tButton(Class: btn btn-link, Page: profile_view, PageParams: \"v_member_id=#member_id#\"){\r\n\t\t\t\t\t\t\t\t\t\t\tImage(Src: \"#member_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: h5 text-bold, Body: #member_name#)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n                                    Table(src_voting_subject, \"$candidates$=custom_member,$member_id$=custom_address\")\r\n                                }\r\n                    \t\t\tDiv(Class: col-md-1 mt-sm)\r\n                            }\r\n                        }\r\n\r\n                        Div(Class: list-group-item){\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: roleID){\r\n                                        Span(Body: LangRes(role))\r\n                                    }\r\n                                }\r\n                                Div(Class: col-md-9 mb-sm text-left){\r\n                                    DBFind(Name: roles_list, Source: source_roles).Columns(role_name, id).Where(\"role_type=2 and delete=0\")\r\n                                    Select(Name: roleID, Source: source_roles, NameColumn: role_name, ValueColumn: id, Value: #instance_optional_role_id#)\r\n                                } \r\n                            }\r\n\r\n                            Div(row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: vacancies){\r\n                                        Span(Body: LangRes(vacancies))\r\n                                    }\r\n                                }\r\n                    \t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n                    \t\t\t    Input(Name: vacancies, Class: form-control, Type: Number, Value: #instance_optional_role_vacancies#)\r\n                                }\r\n                            }                    \r\n                        }\r\n\r\n                        Div(Class: list-group-item){\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: contract_accept){\r\n                                        Span(Body: LangRes(contract_accept))\r\n                                    }\r\n                                    P(Class: m0 text-muted, Body: $optional$)\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    Input(Name: contract_accept, Class: form-control, Type: text, Value: #instance_optional_contract_accept#)\r\n                                    P(Class: text-muted, Body: $contract_accept_des$)\r\n                                }\r\n                            }                     \r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: contract_reject){\r\n                                        Span(Body: LangRes(contract_reject))\r\n                                    }\r\n                                    P(Class: m0 text-muted, Body: $optional$)\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    Input(Name: contract_reject, Class: form-control, Type: text, Value: #instance_optional_contract_reject#)\r\n                                    P(Class: m0 text-muted, Body: $contract_reject_des$)\r\n                                }\r\n                            }                     \r\n                        }\r\n\r\n                        Div(Class: panel-footer clearfix){\r\n                            Div(Class: pull-right){\r\n                                Button(Body: LangRes(back), Class: btn btn-default, Page: voting_view, PageParams: \"vID=#vID#\")\r\n                                Button(Body: LangRes(save), Class: btn btn-primary, Page: voting_view, PageParams: \"vID=#vID#\", Contract: voting_SubjectSettings)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            Div(Class: col-md-2)\r\n        }\r\n        \r\n    }.Else{\r\n\r\n        Div(Class: md-12 alert alert-danger text-center){\r\n            Span(Body: LangRes(attention))\r\n        }\r\n    }\r\n}","Conditions":"ContractAccess(\"@1EditPage\")","Menu":"default_menu"},{"Name":"voting_decision_contract","Value":"Div(Class: content-wrapper){\r\n\t\r\n    If(#vID# \u003e 0){\r\n\r\n        DBFind(Name: voting_instances, Source: src_voting_instances).Where(\"id=#vID#\").Vars(instance)\r\n\t\tDBFind(Name: voting_subject, Source: src_voting_subject).Where(\"voting_id=#vID#\").Vars(subject)\r\n\r\n\t\tIf(#subject_id#\u003e0){\r\n\t\t}.Else{\r\n\t\t\tSetVar(Name: subject_contract_accept, Value: \"\")\r\n\t\t\tSetVar(Name: subject_contract_reject, Value: \"\")\r\n\t\t}\r\n\t\t\r\n        SetTitle($subject_voting$)\r\n        Div(Class: breadcrumb){\r\n            LinkPage($voting$, voting_list)\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            LinkPage(#instance_name#, voting_view,, \"vID=#vID#\")\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            Span(Class: text-muted, Body: $subject_voting$)\r\n        }\r\n\r\n        Div(Class: row df f-valign){\r\n            Div(Class: col-md-2)\r\n            Div(Class: col-md-8){\r\n\r\n                Div(Class: panel panel-primary){\r\n                    Form(){  \r\n\r\n                        Input(Name: votingID, Class: form-control hidden, Type: text, Value: #vID#)\r\n\r\n                        Div(Class: list-group-item){\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: contract_accept){\r\n                                        Span(Body: LangRes(contract_accept))\r\n                                    }\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    Input(Name: contract_accept, Class: form-control, Type: text, Value: #subject_contract_accept#)\r\n                                    P(Class: text-muted, Body: $contract_accept_des$)\r\n                                }\r\n                            }                     \r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: contract_reject){\r\n                                        Span(Body: LangRes(contract_reject))\r\n                                    }\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    Input(Name: contract_reject, Class: form-control, Type: text, Value: #subject_contract_reject#)\r\n                                    P(Class: m0 text-muted, Body: $contract_reject_des$)\r\n                                }\r\n                            }                     \r\n                        }\r\n\r\n                        Div(Class: panel-footer clearfix){\r\n                            Div(Class: pull-right){\r\n                                Button(Body: LangRes(back), Class: btn btn-default, Page: voting_view, PageParams: \"vID=#vID#\")\r\n                                Button(Body: LangRes(save), Class: btn btn-primary, Page: voting_view, PageParams: \"vID=#vID#\", Contract: voting_SubjectContract)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            Div(Class: col-md-2)\r\n        }\r\n        \r\n    }.Else{\r\n\r\n        Div(Class: md-12 alert alert-danger text-center){\r\n            Span(Body: LangRes(attention))\r\n        }\r\n    }\r\n}","Conditions":"ContractAccess(\"@1EditPage\")","Menu":"default_menu"},{"Name":"voting_decision_document","Value":"Div(Class: content-wrapper){\r\n\t\r\n    If(#vID# \u003e 0){\r\n\r\n        DBFind(Name: voting_instances, Source: src_voting_instances).Where(\"id=#vID#\").Vars(instance)\r\n        DBFind(Name: voting_subject, Source: src_voting_subject).Where(\"voting_id=#vID#\").Vars(subject)\r\n\t\t\r\n\t\tIf(#subject_id#\u003e0){\r\n\t\t}.Else{\r\n\t\t\tSetVar(Name: subject_text_document, Value: \"\")\r\n\t\t}\r\n\r\n        SetTitle($subject_voting$)\r\n        Div(Class: breadcrumb){\r\n            LinkPage($voting$, voting_list)\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            LinkPage(#instance_name#, voting_view,, \"vID=#vID#\")\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            Span(Class: text-muted, Body: $subject_voting$)\r\n        }\r\n\r\n        Div(Class: row df f-valign){\r\n            Div(Class: col-md-2)\r\n            Div(Class: col-md-8){\r\n\r\n                Div(Class: panel panel-primary){\r\n                    Form(){  \r\n\r\n                        Input(Name: votingID, Class: form-control hidden, Type: text, Value: #vID#)\r\n\r\n\t\t\t\t\t\tDiv(Class: list-group-item){\r\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-12 mt-sm){\r\n                                    P(Class: m0 text-muted, Body: $text_document$)\r\n                                    Input(Name: text_document, Class: form-control, Type: textarea, Value: #subject_text_document#)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n                        }\r\n\r\n                        Div(Class: list-group-item){\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: contract_accept){\r\n                                        Span(Body: LangRes(contract_accept))\r\n                                    }\r\n                                    P(Class: m0 text-muted, Body: $optional$)\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    Input(Name: contract_accept, Class: form-control, Type: text, Value: #instance_optional_contract_accept#)\r\n                                    P(Class: text-muted, Body: $contract_accept_des$)\r\n                                }\r\n                            }                     \r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: contract_reject){\r\n                                        Span(Body: LangRes(contract_reject))\r\n                                    }\r\n                                    P(Class: m0 text-muted, Body: $optional$)\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    Input(Name: contract_reject, Class: form-control, Type: text, Value: #instance_optional_contract_reject#)\r\n                                    P(Class: m0 text-muted, Body: $contract_reject_des$)\r\n                                }\r\n                            }                     \r\n                        }\r\n\r\n                        Div(Class: panel-footer clearfix){\r\n                            Div(Class: pull-right){\r\n                                Button(Body: LangRes(back), Class: btn btn-default, Page: voting_view, PageParams: \"vID=#vID#\")\r\n                                Button(Body: LangRes(save), Class: btn btn-primary, Page: voting_view, PageParams: \"vID=#vID#\", Contract: voting_SubjectDocument)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            Div(Class: col-md-2)\r\n        }\r\n        \r\n    }.Else{\r\n\r\n        Div(Class: md-12 alert alert-danger text-center){\r\n            Span(Body: LangRes(attention))\r\n        }\r\n    }\r\n}","Conditions":"ContractAccess(\"@1EditPage\")","Menu":"default_menu"},{"Name":"voting_decision_election","Value":"Div(Class: content-wrapper){\r\n\t\r\n    If(#vID# \u003e 0){\r\n\r\n        DBFind(Name: voting_instances, Source: src_voting_instances).Where(\"id=#vID#\").Vars(instance)\r\n\r\n        SetTitle($subject_voting$)\r\n        Div(Class: breadcrumb){\r\n            LinkPage($voting$, voting_list)\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            LinkPage(#instance_name#, voting_view,, \"vID=#vID#\")\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            Span(Class: text-muted, Body: $subject_voting$)\r\n        }\r\n\r\n        Div(Class: row df f-valign){\r\n            Div(Class: col-md-2)\r\n            Div(Class: col-md-8){\r\n\r\n                Div(Class: panel panel-primary){\r\n                    Form(){  \r\n\r\n\t\t\t\t\t\tInput(Name: votingID, Class: form-control hidden, Type: text, Value: #vID#)\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tDiv(Class: list-group-item){\r\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\t\tLabel($candidates$)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n                                    Div(Class: input-group){\r\n                                        DBFind(Name: member, Source: source_members).Columns(member_name, id).Custom(custom_username){\r\n                                            Span(Body: #member_name# ( Address(#id#) ) ) \r\n                                        }\r\n                                        Select(Name: memberID, Source: source_members, NameColumn: custom_username, ValueColumn: id)\r\n                                        Div(Class: input-group-btn){\r\n                                            Button(Body: LangRes(add), Class: btn btn-default, Page: voting_decision_election, PageParams: \"vID=Val(votingID)\", Contract: voting_SubjectCandidates)\r\n                                        }\r\n                                    }\r\n\t\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t}\r\n                            Div(Class: row df){\r\n                    \t\t\tDiv(Class: col-md-3 mt-sm)\r\n                    \t\t\tDiv(Class: col-md-8 mt-sm text-left){\r\n                                    DBFind(Name: voting_subject, Source: src_voting_subject).Where(\"voting_id=#vID#\").Custom(custom_address){\r\n                                        Span(Address(#member_id#))\r\n\t                                }.Custom(custom_member){\r\n\t\t\t\t\t\t\t\t\t\tButton(Class: btn btn-link, Page: profile_view, PageParams: \"v_member_id=#member_id#\"){\r\n\t\t\t\t\t\t\t\t\t\t\tImage(Src: \"#member_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\r\n                                            Span(Class: h5 text-bold, Body: #member_name#)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n                                    Table(src_voting_subject, \"$candidates$=custom_member,$member_id$=custom_address\")\r\n                                }\r\n                    \t\t\tDiv(Class: col-md-1 mt-sm)\r\n                            }\r\n                        }\r\n\r\n\r\n                        Div(Class: list-group-item){\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: roleID){\r\n                                        Span(Body: LangRes(role))\r\n                                    }\r\n                                }\r\n                                Div(Class: col-md-9 mb-sm text-left){\r\n                                    DBFind(Name: roles_list, Source: source_roles).Columns(role_name, id).Where(\"role_type=2 and delete=0\")\r\n                                    Select(Name: roleID, Source: source_roles, NameColumn: role_name, ValueColumn: id, Value: #instance_optional_role_id#)\r\n                                } \r\n                            }\r\n\r\n                            Div(row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: vacancies){\r\n                                        Span(Body: LangRes(vacancies))\r\n                                    }\r\n                                }\r\n                    \t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n                    \t\t\t    Input(Name: vacancies, Class: form-control, Type: Number, Value: #instance_optional_role_vacancies#)\r\n                                }\r\n                            }                    \r\n                        }\r\n\r\n                        Div(Class: list-group-item){\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: contract_accept){\r\n                                        Span(Body: LangRes(contract_accept))\r\n                                    }\r\n                                    P(Class: m0 text-muted, Body: $optional$)\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    Input(Name: contract_accept, Class: form-control, Type: text, Value: #instance_optional_contract_accept#)\r\n                                    P(Class: text-muted, Body: $contract_accept_des$)\r\n                                }\r\n                            }                     \r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: contract_reject){\r\n                                        Span(Body: LangRes(contract_reject))\r\n                                    }\r\n                                    P(Class: m0 text-muted, Body: $optional$)\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    Input(Name: contract_reject, Class: form-control, Type: text, Value: #instance_optional_contract_reject#)\r\n                                    P(Class: m0 text-muted, Body: $contract_reject_des$)\r\n                                }\r\n                            }                     \r\n                        }\r\n\r\n                        Div(Class: panel-footer clearfix){\r\n                            Div(Class: pull-right){\r\n                                Button(Body: LangRes(back), Class: btn btn-default, Page: voting_view, PageParams: \"vID=#vID#\")\r\n                                Button(Body: LangRes(save), Class: btn btn-primary, Page: voting_view, PageParams: \"vID=#vID#\", Contract: voting_SubjectSettings)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            Div(Class: col-md-2)\r\n        }\r\n        \r\n    }.Else{\r\n\r\n        Div(Class: md-12 alert alert-danger text-center){\r\n            Span(Body: LangRes(attention))\r\n        }\r\n    }\r\n}","Conditions":"ContractAccess(\"@1EditPage\")","Menu":"default_menu"},{"Name":"voting_decision_formal","Value":"Div(Class: content-wrapper){\r\n\t\r\n    If(#vID# \u003e 0){\r\n\r\n        DBFind(Name: voting_instances, Source: src_voting_instances).Where(\"id=#vID#\").Vars(instance)\r\n\t\tDBFind(Name: voting_subject, Source: src_voting_subject).Where(\"voting_id=#vID#\").Vars(subject)\r\n\r\n\t\tIf(#subject_id#\u003e0){\r\n\t\t}.Else{\r\n\t\t\tSetVar(Name: subject_formal_decision_description, Value: \"\")\r\n\t\t\tSetVar(Name: subject_formal_decision_table, Value: \"\")\r\n\t\t\tSetVar(Name: subject_formal_decision_tableid, Value: \"\")\r\n\t\t\tSetVar(Name: subject_formal_decision_column, Value: \"\")\r\n\t\t\tSetVar(Name: subject_formal_decision_colvalue, Value: \"\")\r\n\t\t}\r\n\t\t\r\n        SetTitle($subject_voting$)\r\n        Div(Class: breadcrumb){\r\n            LinkPage($voting$, voting_list)\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            LinkPage(#instance_name#, voting_view,, \"vID=#vID#\")\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            Span(Class: text-muted, Body: $subject_voting$)\r\n        }\r\n\r\n        Div(Class: row df f-valign){\r\n            Div(Class: col-md-2)\r\n            Div(Class: col-md-8){\r\n\r\n                Div(Class: panel panel-primary){\r\n                    Form(){  \r\n\r\n                        Input(Name: votingID, Class: form-control hidden, Type: text, Value: #vID#)\r\n                    \r\n\t\t\t\t\t\tDiv(Class: list-group-item){\r\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-3 mt-lg text-right){\r\n\t\t\t\t\t\t\t\t\tLabel(For: description){\r\n\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(description))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\tInput(Name: description, Class: form-control, Type: textarea, Value: #subject_formal_decision_description#)\r\n                                    P(Class: m0 text-muted, Body: $description_desc$)\r\n                                }\r\n\t\t\t\t\t\t\t}                      \r\n\t\t\t\t\t\t}\r\n\r\n                        Div(Class: list-group-item){\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: table_to_written){\r\n                                        Span(Body: LangRes(table_to_written))\r\n                                    }\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    Input(Name: table_to_written, Class: form-control, Type: text, Value: #subject_formal_decision_table#)\r\n                                    P(Class: text-muted, Body: $table_to_written_desc$)\r\n                                }\r\n                            }                     \r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: row_id){\r\n                                        Span(Body: LangRes(row_id))\r\n                                    }\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    Input(Name: row_id, Class: form-control, Type: text, Value: #subject_formal_decision_tableid#)\r\n                                    P(Class: text-muted, Body: $row_id_desc$)\r\n                                }\r\n                            }  \r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: column_name){\r\n                                        Span(Body: LangRes(column_name))\r\n                                    }\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    Input(Name: column_name, Class: form-control, Type: text, Value: #subject_formal_decision_column#)\r\n                                    P(Class: m0 text-muted, Body: $column_name_desc$)\r\n                                }\r\n                            }                   \r\n                        }\r\n\r\n                        Div(Class: list-group-item){\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: written_value){\r\n                                        Span(Body: LangRes(written_value))\r\n                                    }\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    Input(Name: written_value, Class: form-control, Type: text, Value: #subject_formal_decision_colvalue#)\r\n                                    P(Class: m0 text-muted, Body: $written_value_desc$)\r\n                                }\r\n                            }                                        \r\n                        }\r\n\r\n\r\n                        Div(Class: list-group-item){\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: contract_accept){\r\n                                        Span(Body: LangRes(contract_accept))\r\n                                    }\r\n                                    P(Class: m0 text-muted, Body: $optional$)\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    Input(Name: contract_accept, Class: form-control, Type: text, Value: #instance_optional_contract_accept#)\r\n                                    P(Class: text-muted, Body: $contract_accept_des$)\r\n                                }\r\n                            }                     \r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: contract_reject){\r\n                                        Span(Body: LangRes(contract_reject))\r\n                                    }\r\n                                    P(Class: m0 text-muted, Body: $optional$)\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    Input(Name: contract_reject, Class: form-control, Type: text, Value: #instance_optional_contract_reject#)\r\n                                    P(Class: m0 text-muted, Body: $contract_reject_des$)\r\n                                }\r\n                            }                     \r\n                        }\r\n\r\n                        Div(Class: panel-footer clearfix){\r\n                            Div(Class: pull-right){\r\n                                Button(Body: LangRes(back), Class: btn btn-default, Page: voting_view, PageParams: \"vID=#vID#\")\r\n                                Button(Body: LangRes(save), Class: btn btn-primary, Page: voting_view, PageParams: \"vID=#vID#\", Contract: voting_SubjectFormal)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            Div(Class: col-md-2)\r\n        }\r\n        \r\n    }.Else{\r\n\r\n        Div(Class: md-12 alert alert-danger text-center){\r\n            Span(Body: LangRes(attention))\r\n        }\r\n    }\r\n}","Conditions":"ContractAccess(\"@1EditPage\")","Menu":"default_menu"},{"Name":"voting_invite","Value":"Div(Class: content-wrapper){\r\n\t\r\n    If(#vID# \u003e 0){\r\n\r\n        DBFind(Name: voting_instances, Source: src_voting_instances).Where(\"id=#vID#\").Vars(instance)\r\n\t\t\r\n        SetTitle($participants$)\r\n        Div(Class: breadcrumb){\r\n            LinkPage($voting$, voting_list)\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            LinkPage(#instance_name#, voting_view,, \"vID=#vID#\")\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            Span(Class: text-muted, Body: $participants$)\r\n        }\r\n\r\n        Div(Class: row df f-valign){\r\n            Div(Class: col-md-2)\r\n            Div(Class: col-md-8){\r\n\t\t\t\r\n                Div(Class: panel panel-primary){\r\n\t\t\t\t\tDiv(Class: panel-heading, Body: LangRes(participants))\r\n                    Form(){\r\n\t\t\t\t\t\r\n                        Input(Name: votingID, Class: form-control hidden, Type: text, Value: #vID#)\r\n\r\n\t\t\t\t\t\tDiv(Class: list-group-item){\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-12){\r\n                                    DBFind(Name: voting_participants, Source: src_voting_participants).Columns(id,member_id,member_name,member_avatar).Where(\"voting_id=#vID#\").Custom(custom_id){\r\n                                        Span(Body:  #id#)\r\n                                    }.Custom(custom_member){\r\n                                        Button(Class: btn btn-link, Page: profile_view, PageParams: \"v_member_id=#member_id#\"){\r\n                                            Image(Src: \"#member_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\r\n                                            Span(Class: h5 text-bold, Body: #member_name#)\r\n                                        }\r\n                                    }\r\n                                    Table(src_voting_participants, \"$id$=custom_id,$member_name$=custom_member\")\r\n                                }\r\n                            }\r\n\r\n                            If(#instance_typeparticipants# == 1){\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-12){\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            If(#instance_typeparticipants# == 2){\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-12){\r\n                                        Span(Class: text-muted, Body: LangRes(select_member))\r\n                                        DBFind(Name: member, Source: source_members).Columns(member_name, id).Custom(custom_username){\r\n                                            Span(Body: #member_name# ( Address(#id#) ) ) \r\n                                        }\r\n                                        Select(Name: var_id, Source: source_members, NameColumn: custom_username, ValueColumn: id)\r\n                                    }\r\n                                }\r\n                            }\r\n                        \r\n                            If(#instance_typeparticipants# == 3){\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-12){\r\n                                        Span(Class: text-muted, Body: LangRes(select_role))\r\n                                        DBFind(Name: roles_list, Source: source_roles).Columns(role_name, id).Where(\"delete=0\")\r\n                                        Select(Name: var_id, Source: source_roles, NameColumn: role_name, ValueColumn: id)\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n                        Div(Class: panel-footer clearfix){\r\n                            Div(Class: pull-right){\r\n                                Button(Body: LangRes(back), Class: btn btn-default, Page: voting_view, PageParams: \"vID=#vID#\")\r\n                                If(#instance_typeparticipants# == 2){\r\n                                    Button(Body: LangRes(add_member), Class: btn btn-primary, Page: voting_view, PageParams: \"vID=#vID#\", Contract: voting_Invite)\r\n                                }\r\n                                If(#instance_typeparticipants# == 3){\r\n                                    Button(Body: LangRes(add_role), Class: btn btn-primary, Page: voting_view, PageParams: \"vID=#vID#\", Contract: voting_Invite)\r\n                                }\r\n                            }\r\n                        }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n            }\r\n            Div(Class: col-md-2)\r\n        }\r\n        \r\n    }.Else{\r\n\r\n        Div(Class: md-12 alert alert-danger text-center){\r\n            Span(Body: LangRes(attention))\r\n        }\r\n    }\r\n}","Conditions":"ContractAccess(\"@1EditPage\")","Menu":"default_menu"},{"Name":"voting_list","Value":"Div(Class: content-wrapper){\r\n\r\n\tSetTitle($voting$)\r\n\tDiv(breadcrumb){\r\n\t\tSpan(Class: text-muted, Body: $voting$)\r\n\t}\r\n\r\n    If(GetVar(isSearch) == 1){\r\n        SetVar(Name: v_Where, Value: \"name='#v_Search#' and delete = 0\")\r\n    }.Else{\r\n        SetVar(Name: v_Where, Value: \"delete=0\")\r\n\t\tSetVar(Name: v_Search, Value: \"\")\r\n    }\r\n\r\n\tDBFind(Name: voting_instances, Source: src_voting_instances).Custom(custom_id){\r\n\t    Span(Class: h5, Body: #id#)\r\n\t\tSetVar(Name: vDateNow, Value: Now(\"YYYY-MM-DD HH:MI\")) \r\n\t\tSetVar(Name: vStartDate, Value: DateTime(DateTime: #startdate#, Format: \"YYYY-MM-DD HH:MI\"))\r\n\t\tSetVar(Name: vEndDate, Value: DateTime(#enddate#, \"YYYY-MM-DD HH:MI\")) \r\n\t\tSetVar(Name: vCmpStartDate, Value: CmpTime(#vStartDate#,#vDateNow#)) \r\n\t\tSetVar(Name: vCmpEndDate, Value: CmpTime(#vEndDate#,#vDateNow#))\r\n\t}.Custom(custom_name){\r\n\t\tLinkPage(Page: voting_view, PageParams: \"vID=#id#\"){\r\n\t\t\tSpan(Class: h5 text-bold, Body: #name#)\r\n\t\t}\r\n\t}.Custom(custom_subject){\r\n\t\tIf(Or(#vCmpStartDate#\u003c=0,#type_voting#==2)){\r\n\t\t\tSpan(Class: h6, Body: EcosysParam(Name: type_voting_decisions, Index: #typedecision#))\r\n\t\t}.Else{\r\n\t\t\tIf(#typedecision# == 1){\r\n\t\t\t\tLinkPage(Page: voting_decision_candidates, PageParams: \"vID=#id#\"){\r\n\t\t\t\t\tSpan(Class: h6 text-bold, Body: EcosysParam(Name: type_voting_decisions, Index: #typedecision#))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tIf(#typedecision# == 2){\r\n\t\t\t\tLinkPage(Page: voting_decision_election, PageParams: \"vID=#id#\"){\r\n\t\t\t\t\tSpan(Class: h6 text-bold, Body: EcosysParam(Name: type_voting_decisions, Index: #typedecision#))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tIf(#typedecision# == 3){\r\n\t\t\t\tLinkPage(Page: voting_decision_document, PageParams: \"vID=#id#\"){\r\n\t\t\t\t\tSpan(Class: h6 text-bold, Body: EcosysParam(Name: type_voting_decisions, Index: #typedecision#))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tIf(#typedecision# == 4){\r\n\t\t\t\tLinkPage(Page: voting_decision_formal, PageParams: \"vID=#id#\"){\r\n\t\t\t\t\tSpan(Class: h6 text-bold, Body: EcosysParam(Name: type_voting_decisions, Index: #typedecision#))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tIf(#typedecision# == 5){\r\n\t\t\t\tLinkPage(Page: voting_decision_contract, PageParams: \"vID=#id#\"){\r\n\t\t\t\t\tSpan(Class: h6 text-bold, Body: EcosysParam(Name: type_voting_decisions, Index: #typedecision#))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}.Custom(custom_participants){\r\n\t\tIf(Or(#vCmpStartDate#\u003c=0,#type_voting#==2)){\r\n\t\t\tSpan(Class: h6, Body: EcosysParam(Name: type_voting_participants, Index: #typeparticipants#))\r\n\t\t}.Else{\r\n\t\t\tLinkPage(Page: voting_invite, PageParams: \"vID=#id#\"){\r\n\t\t\t\tSpan(Class: h6 text-bold, Body: EcosysParam(Name: type_voting_participants, Index: #typeparticipants#))\r\n\t\t\t}\r\n\t\t}\r\n\t}.Custom(custom_notifics){\r\n\t\tIf(#flag_notifics# == 1){\r\n\t\t\tDiv(Class: text-center text-bold, Body: LangRes(yes))\r\n\t\t}.Else{\t\r\n\t\t\tIf(And(#flag_success#!=1,#vCmpEndDate#\u003e0,#vCmpStartDate#\u003c0,#creator_id#==#key_id#)){\r\n\t\t\t\tDiv(Class: text-center, Body:  Button(Body: LangRes(send), Class: btn btn-primary, Contract: voting_SendNotifics, Params: \"votingID=#id#\", Page: voting_list))\r\n\t\t\t}.Else{\r\n\t\t\t\tDiv(Class: text-center text-bold, Body: LangRes(no))\r\n\t\t\t}\r\n\t\t}\r\n\t}.Custom(custom_creator){\r\n        LinkPage(Page: profile_view, PageParams: \"v_member_id=#creator_id#\"){\r\n            Image(Src: \"#creator_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\r\n            Span(Class: h5 text-bold, Body: #creator_name#)\r\n        }\r\n\t}.Custom(custom_date){\r\n\t\tIf(#vCmpStartDate# \u003c 0){\r\n\t\t\tDiv(Class: text-muted, Body: DateTime(DateTime: #startdate#, Format: \"DD.MM.YYYY HH:MI\"))\r\n\t\t}.Else{\t\r\n\t\t\tDiv(Class: text-bold, Body: DateTime(DateTime: #startdate#, Format: \"DD.MM.YYYY HH:MI\"))\r\n\t\t} \r\n\t\tIf(#vCmpEndDate# \u003c 0){\r\n\t\t\tDiv(Class: text-muted, Body: DateTime(DateTime: #enddate#, Format: \"DD.MM.YYYY HH:MI\"))\r\n\t\t}.Else{\r\n\t\t\tDiv(Class: text-bold, Body: DateTime(DateTime: #enddate#, Format: \"DD.MM.YYYY HH:MI\"))\r\n\t\t}\r\n\t}.Custom(custom_type){\r\n\t\tSpan(Class: h6, Body: EcosysParam(Name: type_voting, Index: #type_voting#))\r\n\t}.Custom(custom_progress){\r\n\t\tDiv(Class: text-center h5 text-bold, Body: #percent_success# %)\r\n\t}.Custom(custom_decision){\r\n\t\tIf(#flag_decision# == 0){\r\n\t\t\tIf(And(#vCmpEndDate#\u003c0,#creator_id#==#key_id#)){\r\n\t\t\t\tDiv(Class: text-center, Body: Button(Body: LangRes(decision), Class: btn btn-primary, Contract: voting_CheckDecision, Params: \"votingID=#id#\", Page: voting_list))\r\n\t\t\t}.Else{\r\n\t\t\t\tDiv(Class: text-muted text-center, Body: LangRes(no))\r\n\t\t\t}\r\n\t\t}\r\n\t\tIf(#flag_decision# == -2){\r\n\t\t\tDiv(Class: text-muted text-center, Body: LangRes(not_enough_votes))\r\n\t\t}\r\n\t\tIf(#flag_decision# == 1){\r\n\t\t\tDiv(Class: text-success text-center, Body: LangRes(accepted))\r\n\t\t}\r\n\t\tIf(#flag_decision# == -1){\r\n\t\t\tDiv(Class: text-danger text-center, Body: LangRes(rejected))\r\n\t\t}\r\n\t}.Custom(custom_status){\r\n\t\tIf(#flag_success# == 1){ \r\n\t\t\tDiv(Class: text-success text-center, Body: LangRes(success))\r\n\t\t}.Else{\t\r\n\t\t\tIf(#vCmpEndDate# \u003c 0){\r\n\t\t\t\tDiv(Class: text-muted text-center, Body: LangRes(finished))\r\n\t\t\t}.Else{\r\n\t\t\t\tIf(#vCmpStartDate# \u003c 0){ \r\n\t\t\t\t\tDiv(Class: text-center){ \r\n\t\t\t\t\t\tButton(Class: btn btn-link, Page: voting_view, PageParams: \"vID=#id#\"){\r\n\t\t\t\t\t\t\tSpan(Class: h4, Body: Em(Class: fa icon-eye))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}.Else{\r\n\t\t\t\t\tDiv(Class: text-warning text-center, Body: LangRes(waiting))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\t\r\n\t}.Custom(actions){\r\n        Div(Class: text-center, Body: Button(Body: Em(Class: fa fa-close), Class: btn btn-danger, Contract: voting_Delete, Params: \"votingID=#id#\", Page: voting_list))\r\n\t}.Where(#v_Where#).Order(id)\r\n\r\n    Div(Class: panel panel-primary){\r\n        Form(){\r\n            Div(Class: list-group-item){\r\n                Div(Class: row df f-valign){\r\n                    Div(Class: col-md-1 mt-sm text-right){\r\n                        Label(For: Search){\r\n                            Span(Body: LangRes(name))\r\n                        }\r\n                    }\r\n                    Div(Class: col-md-11 mc-sm){\r\n                        Div(Class: input-group){\r\n                            Input(Class: form-control, Type: text, Name: Search, Value: #v_Search#)\r\n                            Div(Class: input-group-btn){\r\n                                Button(Body: Em(Class: fa fa-search), Class: btn btn-default, Page: voting_list, PageParams: \"isSearch=1,v_Search=Val(Search)\")\r\n                            }\r\n                        }\r\n                    }\r\n                }  \r\n            }\r\n\r\n            Div(Class: list-group-item){ \r\n                Table(src_voting_instances, \"$id$=custom_id,$name$=custom_name,$type$=custom_type,$subject_voting$=custom_subject,$participants$=custom_participants,$date_start$ / $date_end$=custom_date,$creator$=custom_creator,$notifications$=custom_notifics,$progress$=custom_progress,$decision$=custom_decision,$status$=custom_status,$actions$=actions\")\r\n                If(GetVar(isSearch) == 1){\r\n                    Div(Class: text-center){  \r\n                        Button(Body: $view_all$, Class: btn btn-primary, Page: voting_list, PageParams: \"isSearch=0\")\r\n                    }\r\n                }\r\n            }\r\n\r\n            Div(Class: panel-footer clearfix){\r\n                Div(Class: pull-right){\r\n                    Button(Body: LangRes(create), Class: btn btn-primary, Page: voting_create)\r\n                }\r\n            }\r\n            \r\n        }           \r\n    }\r\n}","Conditions":"ContractAccess(\"@1EditPage\")","Menu":"default_menu"},{"Name":"voting_view","Value":"Div(Class: content-wrapper){\r\n\tIf(#notific_type#==1){\r\n\t\tSetVar(Name: vID, Value: #notific_param#)\r\n\t}\r\n\r\n    If(#vID# \u003e 0){\r\n\r\n        DBFind(Name: voting_instances, Source: src_one).Where(\"id=#vID#\").Vars(instance)\r\n        \r\n        SetTitle(#instance_name#)\r\n        Div(Class: breadcrumb){\r\n            LinkPage($voting$, voting_list)\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            Span(Class: text-muted, Body: #instance_name#)\r\n        }\r\n\r\n\t\tSetVar(Name: vDateNow, Value: Now(\"YYYY-MM-DD HH:MI\")) \r\n\t\tSetVar(Name: vStartDate, Value: DateTime(DateTime: #instance_startdate#, Format: \"YYYY-MM-DD HH:MI\"))\r\n\t\tSetVar(Name: vEndDate, Value: DateTime(#instance_enddate#, \"YYYY-MM-DD HH:MI\")) \r\n\t\tSetVar(Name: vCmpStartDate, Value: CmpTime(#vStartDate#,#vDateNow#)) \r\n\t\tSetVar(Name: vCmpEndDate, Value: CmpTime(#vEndDate#,#vDateNow#))\r\n\r\n\t\tDBFind(Name: voting_participants, Source: src_two).Columns(id).Where(\"voting_id=#vID# and member_id=#key_id# and decision=0\").Vars(participant)\r\n        If(And(#instance_flag_fulldata#==1,#participant_id#\u003e0,#instance_flag_decision#==0,#vCmpStartDate#\u003c0,#vCmpEndDate#\u003e0)){\r\n            SetVar(Name: vOpportunityVote, Value: 1)\r\n        }.Else{\r\n            SetVar(Name: vOpportunityVote, Value: 0)\r\n        }\r\n\r\n        Div(Class: row df f-valign){\r\n            Div(Class: col-md-2)\r\n            Div(Class: col-md-8){\r\n\r\n                Div(Class: panel panel-default){\r\n                    Form(){ \r\n\r\n                        Div(Class: list-group-item text-center){\r\n                            P(Class: h3 text-bold m0, Body: #instance_name#)\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-12 mt-sm){\r\n\t\t\t\t\t\t\t\t\tP(Class: h5 text-muted m0, Body: EcosysParam(Name: type_voting_decisions, Index: #instance_typedecision#))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-6 mc-sm text-right){\r\n                                    P(Class: h5 text-muted m0, Body: LangRes(description))\r\n                                }\r\n                                Div(Class: col-md-6 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\tP(Class: h5 text-muted m0, Body: #instance_description#)\r\n                                }\r\n                            }\r\n                        }\r\n\t\t\t\t\t\t\r\n                        Div(Class: list-group-item text-center){\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-6 mt-sm text-right){\r\n                                    P(Class: h4 text-normal m0, Body: LangRes(type))\r\n                                }\r\n                                Div(Class: col-md-6 mt-sm text-left){\r\n\t\t\t\t\t\t\t\t\tP(Class: h4 text-normal m0, Body: EcosysParam(Name: type_voting, Index: #instance_type_voting#))\r\n                                }\r\n                            }\r\n\t\t\t\t\t\t\tIf(Or(#instance_typedecision#==1,#instance_typedecision#==2,#instance_typedecision#==3,#instance_typedecision#==4)){\r\n\t\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-right){\r\n\t\t\t\t\t\t\t\t\t\tP(Class: h4 text-normal m0, Body: LangRes(contract_accept))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\t\tIf(#instance_optional_contract_accept# == \"\"){\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h4 text-muted m0, Body: LangRes(optional))\r\n\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h4 text-normal m0, Body: #instance_optional_contract_accept#)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-right){\r\n\t\t\t\t\t\t\t\t\t\tP(Class: h4 text-normal m0, Body: LangRes(contract_reject))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\t\tIf(#instance_optional_contract_reject# == \"\"){\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h4 text-muted m0, Body: LangRes(optional))\r\n\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h4 text-normal m0, Body: #instance_optional_contract_reject#)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-6 mc-sm text-right){\r\n                                    P(Class: h4 text-normal m0, Body: LangRes(filled))\r\n                                }\r\n                                Div(Class: col-md-6 mc-sm text-left){\r\n                                    If(#instance_flag_fulldata# == 1){\r\n                                        P(Class: h4 text-success m0, Body: LangRes(yes))\r\n                                    }.Else{\r\n                                        P(Class: h4 text-danger m0, Body: LangRes(no))\r\n                                    } \r\n                                }\r\n                            }\r\n                            If(Or(#instance_typedecision#==1,#instance_typedecision#==2)){\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-6 mt-sm text-right){\r\n                                        P(Class: h5 text-normal m0){\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(role))\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                    Div(Class: col-md-6 mt-sm text-left){\r\n\t\t\t\t\t\t\t\t\t\tIf(#instance_optional_role_id# \u003e 0){\r\n\t\t\t\t\t\t\t\t\t\t\tDBFind(Name: roles_list, Source: src_roles_list).Where(\"id=#instance_optional_role_id#\").Vars(roles)\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #roles_role_name# (LangRes(id): #instance_optional_role_id#))\r\n\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: LangRes(empty))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                }\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-6 mc-sm text-right){\r\n                                        P(Class: h5 text-normal m0){\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(vacancies))\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                    Div(Class: col-md-6 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\t\tIf(#instance_optional_role_vacancies# \u003e 0){\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #instance_optional_role_vacancies#)\r\n\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: #instance_optional_role_vacancies#)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                }\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-6 mc-sm text-right){\r\n                                        P(Class: h5 text-normal m0){\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(candidates))\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                    Div(Class: col-md-6 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\t\tIf(#instance_optional_number_cands# \u003e 0){\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #instance_optional_number_cands#)\r\n\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: #instance_optional_number_cands#)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                }\r\n                                Div(Class: row df){\r\n                                    Div(Class: col-md-2 mt-sm)\r\n                                    Div(Class: col-md-8 mt-sm text-left){\r\n                                        DBFind(Name: voting_subject, Source: src_voting_subject).Where(\"voting_id=#vID#\").Custom(custom_address){\r\n                                            Span(Class: h6, Body: Address(#member_id#))\r\n                                        }.Custom(custom_member){\r\n                                            Button(Class: btn btn-link, Page: profile_view, PageParams: \"v_member_id=#member_id#\"){\r\n                                                Image(Src: \"#member_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\r\n                                                Span(Class: h5 text-bold, Body: #member_name#)\r\n                                            }\r\n                                        }.Custom(custom_voting){\r\n\t\t\t\t\t\t\t\t\t\t\tIf(#vOpportunityVote#==1){\r\n\t\t\t\t\t\t\t\t\t\t\t\tInput(Class: form-control hidden, Type: text, Name: votingID, Value: #vID#)\r\n\t\t\t\t\t\t\t\t\t\t\t\tInput(Class: form-control hidden, Type: text, Name: candidateID, Value: #member_id#)\r\n\t\t\t\t\t\t\t\t\t\t\t\tButton(Body: LangRes(vote), Class: btn btn-success, Page: voting_view, PageParams: \"vID=#vID#\", Contract: voting_AcceptCandidates)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                        Table(src_voting_subject, \"=custom_member,=custom_address,=custom_voting\")\r\n                                    }\r\n                                    Div(Class: col-md-2 mt-sm)\r\n                                }\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-12 mc-sm){\r\n                                        If(And(#vCmpStartDate#\u003e0,#instance_type_voting#==1)){\r\n                                            If(#instance_typedecision#==1){\r\n                                                Button(Class: btn btn-link, Page: voting_decision_candidates, PageParams: \"vID=#vID#\"){\r\n                                                    Span(Class: h5 text-bold, Body: LangRes(subject_voting_edit))\r\n                                                }\r\n                                            }\r\n                                            If(#instance_typedecision#==2){\r\n                                                Button(Class: btn btn-link, Page: voting_decision_election, PageParams: \"vID=#vID#\"){\r\n                                                    Span(Class: h5 text-bold, Body: LangRes(subject_voting_edit))\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            } \r\n\t\t\t\t\t\t\tIf(#instance_typedecision#==3){\r\n\t\t\t\t\t\t\t\tDBFind(Name: voting_subject, Source: src_voting_subject).Columns(id,text_doc_hash,text_document).Where(\"voting_id=#vID#\").Vars(subject)\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-1 mt-lg)\r\n                                    Div(Class: col-md-10 mt-lg){\r\n\t\t\t\t\t\t\t\t\t\tDiv(Class: list-group-item){\r\n\t\t\t\t\t\t\t\t\t\t\tIf(#subject_id# \u003e 0){\r\n\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #subject_text_document#)\r\n\t\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: LangRes(empty))\r\n\t\t\t\t\t\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tDiv(Class: list-group-item){\r\n\t\t\t\t\t\t\t\t\t\t\tIf(#subject_id# \u003e 0){\r\n\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h6 text-muted m0, Body: Hash: #subject_text_doc_hash#)\r\n\t\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h6 text-muted m0, Body: Hash: LangRes(empty))\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                    Div(Class: col-md-1 mt-lg)\r\n                                }\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-12 mc-sm){\r\n\t\t\t\t\t\t\t\t\t\tIf(And(#vCmpStartDate#\u003e0,#instance_type_voting#==1)){\r\n\t\t\t\t\t\t\t\t\t\t\tButton(Class: btn btn-link, Page: voting_decision_document, PageParams: \"vID=#vID#\"){\r\n\t\t\t\t\t\t\t\t\t\t\t\tSpan(Class: h5 text-bold, Body: LangRes(subject_voting_edit))\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                }\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-1 mt-lg)\r\n                                    Div(Class: col-md-10 mt-lg){\r\n\t\t\t\t\t\t\t\t\t\tIf(#vOpportunityVote#==1){\r\n\t\t\t\t\t\t\t\t\t\t\tInput(Class: form-control hidden, Type: text, Name: votingID, Value: #vID#)\r\n\t\t\t\t\t\t\t\t\t\t\tDiv(Class: pull-left){\r\n\t\t\t\t\t\t\t\t\t\t\t\tButton(Body: LangRes(reject), Class: btn btn-danger, Contract: voting_RejectDecision, PageParams: \"vID=#vID#\", Page: voting_view)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tDiv(Class: pull-right){\r\n\t\t\t\t\t\t\t\t\t\t\t\tButton(Body: LangRes(accept), Class: btn btn-success, Contract: voting_AcceptDecision, PageParams: \"vID=#vID#\", Page: voting_view)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                    Div(Class: col-md-1 mt-lg)\r\n                                }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tIf(#instance_typedecision#==4){\r\n\t\t\t\t\t\t\t\tDBFind(Name: voting_subject, Source: src_voting_subject).Columns(id,formal_decision_description,formal_decision_table,formal_decision_tableid,formal_decision_column,formal_decision_colvalue).Where(\"voting_id=#vID#\").Vars(subject)\r\n\t\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n                                    Div(Class: col-md-6 mt-sm text-right){\r\n                                        P(Class: h5 text-normal m0){\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(description))\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                    Div(Class: col-md-6 mt-sm text-left){\r\n\t\t\t\t\t\t\t\t\t\tIf(#subject_id# \u003e 0){\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #subject_formal_decision_description#)\r\n\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: LangRes(empty))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                }\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-6 mc-sm text-right){\r\n                                        P(Class: h5 text-normal m0){\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(table_to_written))\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                    Div(Class: col-md-6 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\t\tIf(#subject_id# \u003e 0){\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #subject_formal_decision_table#)\r\n\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: LangRes(empty))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                }\r\n\t\t\t\t\t\t\t\tIf(#instance_type_voting#==1){\r\n\t\t\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-right){\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0){\r\n\t\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(row_id))\r\n\t\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\t\t\tIf(#subject_id# \u003e 0){\r\n\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #subject_formal_decision_tableid#)\r\n\t\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: LangRes(empty))\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-6 mc-sm text-right){\r\n                                        P(Class: h5 text-normal m0){\r\n\t\t\t\t\t\t\t\t\t\t\tIf(#instance_type_voting#==1){\r\n\t\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(column_name))\r\n\t\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(parameter_name))\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                    Div(Class: col-md-6 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\t\tIf(#subject_id# \u003e 0){\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #subject_formal_decision_column#)\r\n\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: LangRes(empty))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                }\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-6 mc-sm text-right){\r\n                                        P(Class: h5 text-normal m0){\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(written_value))\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                    Div(Class: col-md-6 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\t\tIf(#subject_id# \u003e 0){\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #subject_formal_decision_colvalue#)\r\n\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: LangRes(empty))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                }\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-12 mc-sm){\r\n\t\t\t\t\t\t\t\t\t\tIf(And(#vCmpStartDate#\u003e0,#instance_type_voting#==1)){\r\n\t\t\t\t\t\t\t\t\t\t\tButton(Class: btn btn-link, Page: voting_decision_formal, PageParams: \"vID=#vID#\"){\r\n\t\t\t\t\t\t\t\t\t\t\t\tSpan(Class: h5 text-bold, Body: LangRes(subject_voting_edit))\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                }\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-1 mt-lg)\r\n                                    Div(Class: col-md-10 mt-lg){\r\n\t\t\t\t\t\t\t\t\t\tIf(#vOpportunityVote#==1){\r\n\t\t\t\t\t\t\t\t\t\t\tInput(Class: form-control hidden, Type: text, Name: votingID, Value: #vID#)\r\n\t\t\t\t\t\t\t\t\t\t\tDiv(Class: pull-left){\r\n\t\t\t\t\t\t\t\t\t\t\t\tButton(Body: LangRes(reject), Class: btn btn-danger, Contract: voting_RejectDecision, PageParams: \"vID=#vID#\", Page: voting_view)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tDiv(Class: pull-right){\r\n\t\t\t\t\t\t\t\t\t\t\t\tButton(Body: LangRes(accept), Class: btn btn-success, Contract: voting_AcceptDecision, PageParams: \"vID=#vID#\", Page: voting_view)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                    Div(Class: col-md-1 mt-lg)\r\n                                }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tIf(#instance_typedecision#==5){\r\n\t\t\t\t\t\t\t\tDBFind(Name: voting_subject, Source: src_voting_subject).Columns(id,contract_accept,contract_reject).Where(\"voting_id=#vID#\").Vars(subject)\r\n\t\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-right){\r\n                                        P(Class: h5 text-normal m0){\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(contract_accept))\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-left){\r\n\t\t\t\t\t\t\t\t\t\tIf(#subject_id# \u003e 0){\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #subject_contract_accept#)\r\n\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: LangRes(empty))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-right){\r\n                                        P(Class: h5 text-normal m0){\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(contract_reject))\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\t\tIf(#subject_id# \u003e 0){\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #subject_contract_reject#)\r\n\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: LangRes(empty))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-12 mc-sm){\r\n\t\t\t\t\t\t\t\t\t\tIf(And(#vCmpStartDate#\u003e0,#instance_type_voting#==1)){\r\n\t\t\t\t\t\t\t\t\t\t\tButton(Class: btn btn-link, Page: voting_decision_contract, PageParams: \"vID=#vID#\"){\r\n\t\t\t\t\t\t\t\t\t\t\t\tSpan(Class: h5 text-bold, Body: LangRes(subject_voting_edit))\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                }\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-1 mt-lg)\r\n                                    Div(Class: col-md-10 mt-lg){\r\n\t\t\t\t\t\t\t\t\t\tIf(#vOpportunityVote#==1){\r\n\t\t\t\t\t\t\t\t\t\t\tInput(Class: form-control hidden, Type: text, Name: votingID, Value: #vID#)\r\n\t\t\t\t\t\t\t\t\t\t\tDiv(Class: pull-left){\r\n\t\t\t\t\t\t\t\t\t\t\t\tButton(Body: LangRes(reject), Class: btn btn-danger, Contract: voting_RejectDecision, PageParams: \"vID=#vID#\", Page: voting_view)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tDiv(Class: pull-right){\r\n\t\t\t\t\t\t\t\t\t\t\t\tButton(Body: LangRes(accept), Class: btn btn-success, Contract: voting_AcceptDecision, PageParams: \"vID=#vID#\", Page: voting_view)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                    Div(Class: col-md-1 mt-lg)\r\n                                }\r\n\t\t\t\t\t\t\t}\r\n                        }\r\n\t\t\t\t\t\t\r\n                        Div(Class: list-group-item text-center){\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-6 mt-sm text-right){\r\n                                    P(Class: h5 text-normal m0, Body: LangRes(status))\r\n                                }\r\n                                Div(Class: col-md-6 mt-sm text-left){\r\n\t\t\t\t\t\t\t\t\tIf(#instance_flag_success#==1){ \r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-success m0, Body: LangRes(success))\r\n\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\tIf(#vCmpEndDate#\u003c0){\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-muted m0, Body: LangRes(finished))\r\n\t\t\t\t\t\t\t\t\t\t}.Else{\t\r\n\t\t\t\t\t\t\t\t\t\t\tIf(#vCmpStartDate#\u003c0){ \r\n\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-success m0, Body: LangRes(started))\r\n\t\t\t\t\t\t\t\t\t\t\t}.Else{\t\r\n\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-warning m0, Body: LangRes(waiting))\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n                                }\r\n                            }\r\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-right){\r\n\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(notifications))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\tIf(#instance_flag_notifics#==1){\r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(yes))\r\n\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(no))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-6 mc-sm text-right){\r\n                                    P(Class: h5 text-normal m0, Body: LangRes(decision))\r\n                                }\r\n                                Div(Class: col-md-6 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\tIf(#instance_flag_decision#==-2){\r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(not_enough_votes))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tIf(#instance_flag_decision#==-1){ \r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: LangRes(rejected))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tIf(#instance_flag_decision#==0){\r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(no))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tIf(#instance_flag_decision#==1){\r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-success m0, Body: LangRes(accepted))\r\n\t\t\t\t\t\t\t\t\t}\r\n                                }\r\n                            }\r\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-right){\r\n\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(date_start))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-left){\r\n\t\t\t\t\t\t\t\t\tIf(#vCmpStartDate#\u003c0){\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-muted m0, Body: DateTime(DateTime: #instance_startdate#, Format: \"DD.MM.YYYY HH:MI\"))\r\n\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: DateTime(DateTime: #instance_startdate#, Format: \"DD.MM.YYYY HH:MI\"))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-right){\r\n\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(date_end))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\tIf(#vCmpEndDate#\u003c0){\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-muted m0, Body: DateTime(DateTime: #instance_enddate#, Format: \"DD.MM.YYYY HH:MI\"))\r\n\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: DateTime(DateTime: #instance_enddate#, Format: \"DD.MM.YYYY HH:MI\"))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-right){\r\n\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(voting_volume))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-left){\r\n\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #instance_volume#)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-right){\r\n\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(voting_quorum))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #instance_quorum#)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-right){\r\n\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0){\r\n\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(participants))\r\n\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-left){\r\n\t\t\t\t\t\t\t\t\tIf(#instance_number_participants# \u003e 0){\r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #instance_number_participants#)\r\n\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: #instance_number_participants#)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-2 mt-sm)\r\n                                Div(Class: col-md-8 mt-sm text-left){\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tDBFind(Name: voting_participants, Source: src_voting_participants).Columns(id,decision,member_name,member_id,member_avatar,decision_date).Where(\"voting_id=#vID#\").Custom(custom_address){\r\n                                            P(Class: h6 m0, Body: Address(#member_id#))\r\n                                        }.Custom(custom_member){\r\n                                            Button(Class: btn btn-link, Page: profile_view, PageParams: \"v_member_id=#member_id#\"){\r\n                                                Image(Src: \"#member_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\r\n                                                Span(Class: h5 text-bold, Body: #member_name#)\r\n                                            }\r\n                                        }.Custom(custom_decision){\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tIf(Or(#instance_typedecision#==1,#instance_typedecision#==2)){ \r\n\t\t\t\t\t\t\t\t\t\t\t\tIf(#decision#==0){ \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h6 m0, Body: LangRes(did_not_vote))\r\n\t\t\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tDBFind(Name: member, Source: src_member).Where(\"id=#decision#\").Vars(list)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: text-success text-center h6 m0, Body: $vote_for_candidate$:)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: text-success text-center h6 m0, Body: #list_member_name# Address(#decision#) )\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: text-success text-center h6 m0, Body: $at$ DateTime(DateTime: #decision_date#, Format: \"DD.MM.YYYY HH:MI\"))\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tIf(#instance_typedecision#==3){ \r\n\t\t\t\t\t\t\t\t\t\t\t\tIf(#decision#==0){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h6 m0, Body: LangRes(did_not_vote))\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tIf(#decision#==1){ \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: text-success h6 m0, Body: $document_accept$ $at$ DateTime(DateTime: #decision_date#, Format: \"DD.MM.YYYY HH:MI\"))\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tIf(#decision#==-1){ \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: text-danger h6 m0, Body: $document_reject$ $at$ DateTime(DateTime: #decision_date#, Format: \"DD.MM.YYYY HH:MI\"))\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tIf(#instance_typedecision#==4){\r\n\t\t\t\t\t\t\t\t\t\t\t\tIf(#decision#==0){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h6 m0, Body: LangRes(did_not_vote))\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tIf(#decision#==1){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: text-success h6 m0, Body: $decision_accept$ $at$ DateTime(DateTime: #decision_date#, Format: \"DD.MM.YYYY HH:MI\"))\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tIf(#decision#==-1){ \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: text-danger h6 m0, Body: $decision_reject$ $at$ DateTime(DateTime: #decision_date#, Format: \"DD.MM.YYYY HH:MI\"))\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tIf(#instance_typedecision#==5){ \r\n\t\t\t\t\t\t\t\t\t\t\t\tIf(#decision#==0){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h6 m0, Body: LangRes(did_not_vote))\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tIf(#decision#==1){ \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: text-success h6 m0, Body: $contract_accepted$ $at$ DateTime(DateTime: #decision_date#, Format: \"DD.MM.YYYY HH:MI\"))\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tIf(#decision#==-1){ \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: text-danger h6 m0, Body: $contract_rejected$ $at$ DateTime(DateTime: #decision_date#, Format: \"DD.MM.YYYY HH:MI\"))\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                        Table(src_voting_participants, \"=custom_member,=custom_decision\")\r\n\t\t\t\t\t\t\t\t\r\n                                }\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-2 mt-sm)\r\n                            }\r\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-12 mc-sm){\r\n\t\t\t\t\t\t\t\t\tIf(And(#vCmpStartDate#\u003e0,#instance_type_voting#==1)){\r\n\t\t\t\t\t\t\t\t\t\tButton(Class: btn btn-link, Page: voting_invite, PageParams: \"vID=#vID#\"){\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: h5 text-bold, Body: LangRes(participants_add))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n                        Div(Class: list-group-item text-center){\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-1 mt-sm )\r\n                                Div(Class: col-md-5 mt-sm text-center){\r\n\t\t\t\t\t\t\t\t\tP(Class: h4 text-normal m0, Body: LangRes(voted))\r\n                                }\r\n                                Div(Class: col-md-5 mt-sm text-center){\r\n\t\t\t\t\t\t\t\t\tP(Class: h4 text-normal m0, Body: LangRes(progress))\r\n                                }\r\n                                Div(Class: col-md-1 mt-sm)\r\n                            }\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-1 mt-sm )\r\n                                Div(Class: col-md-5 mt-sm text-center){\r\n\t\t\t\t\t\t\t\t\tP(Class: h6 text-muted m0, Body: LangRes(voting_graph_voted))\r\n                                }\r\n                                Div(Class: col-md-5 mt-sm text-center){\r\n\t\t\t\t\t\t\t\t\tP(Class: h6 text-muted m0, Body: LangRes(voting_graph_progress))\r\n                                }\r\n                                Div(Class: col-md-1 mt-sm)\r\n                            }\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-1 mt-sm )\r\n                                Div(Class: col-md-5 mt-sm text-center){\r\n                                    P(Class: h3 text-normal m0, Body: #instance_number_voters# / #instance_percent_voters#)\r\n                                }\r\n                                Div(Class: col-md-5 mt-sm text-center){\r\n                                    P(Class: h3 text-normal m0, Body: #instance_percent_success# / 100)\r\n                                }\r\n                                Div(Class: col-md-1 mt-sm)\r\n                            }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n                    }\r\n                }\r\n\r\n            }\r\n            Div(Class: col-md-2)\r\n        }   \r\n    }.Else{\r\n        Div(Class: md-12 alert alert-danger text-center){\r\n            Span(Body: LangRes(attention))\r\n        }\r\n    }\r\n}","Conditions":"ContractAccess(\"@1EditPage\")","Menu":"default_menu"}],"parameters":[{"Name":"notification_closure","Value":"single,multiple","Conditions":"ContractConditions(\"MainCondition\")"},{"Name":"notification_icon","Value":"fa-bell,fa-comment,fa-envelope,fa-bookmark,fa-check,fa-exclamation-triangle,fa-info-circle","Conditions":"ContractConditions(\"MainCondition\")"},{"Name":"notification_type","Value":"single,role","Conditions":"ContractConditions(\"MainCondition\")"},{"Name":"roles_types","Value":"assigned_role,elective_role,system_role","Conditions":"ContractConditions(\"MainCondition\")"},{"Name":"roles_types_short","Value":"assigned_role,elective_role","Conditions":"ContractConditions(\"MainCondition\")"},{"Name":"type_voting","Value":"type_voting_custom,type_voting_system","Conditions":"ContractConditions(\"MainCondition\")"},{"Name":"type_voting_decisions","Value":"voting_decisions_candidate_requests,voting_decisions_candidate_manual,voting_decisions_document,voting_decisions_db,voting_decisions_contract","Conditions":"ContractConditions(\"MainCondition\")"},{"Name":"type_voting_participants","Value":"voting_participants_everybody,voting_participants_manual,voting_participants_role","Conditions":"ContractConditions(\"MainCondition\")"}],"tables":[{"Name":"voting_instances","Columns":"[{\"name\":\"typedecision\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"optional_role_id\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_SubjectSettings\\\")\"},{\"name\":\"optional_role_vacancies\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_SubjectSettings\\\")\"},{\"name\":\"creator_id\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"type_voting\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"flag_decision\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_CheckDecision\\\")\"},{\"name\":\"optional_number_cands\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_SubjectCandidates\\\")\"},{\"name\":\"enddate\",\"type\":\"datetime\",\"conditions\":\"false\"},{\"name\":\"flag_success\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_UpdateDataForGraphs\\\")\"},{\"name\":\"flag_fulldata\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_SubjectCheckFulldata\\\")\"},{\"name\":\"flag_notifics\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_SendNotifics\\\")\"},{\"name\":\"number_voters\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_UpdateDataForGraphs\\\")\"},{\"name\":\"optional_contract_accept\",\"type\":\"varchar\",\"conditions\":\"ContractAccess(\\\"voting_SubjectSettings\\\", \\\"voting_SubjectDocument\\\", \\\"voting_SubjectFormal\\\")\"},{\"name\":\"optional_contract_reject\",\"type\":\"varchar\",\"conditions\":\"ContractAccess(\\\"voting_SubjectSettings\\\", \\\"voting_SubjectDocument\\\", \\\"voting_SubjectFormal\\\")\"},{\"name\":\"quorum\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"description\",\"type\":\"text\",\"conditions\":\"false\"},{\"name\":\"volume\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"startdate\",\"type\":\"datetime\",\"conditions\":\"false\"},{\"name\":\"creator_name\",\"type\":\"varchar\",\"conditions\":\"false\"},{\"name\":\"creator_avatar\",\"type\":\"bytea\",\"conditions\":\"false\"},{\"name\":\"percent_voters\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_UpdateDataForGraphs\\\")\"},{\"name\":\"percent_success\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_UpdateDataForGraphs\\\")\"},{\"name\":\"name\",\"type\":\"varchar\",\"conditions\":\"false\"},{\"name\":\"delete\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_Delete\\\")\"},{\"name\":\"typeparticipants\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"number_participants\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_Invite\\\")\"}]","Permissions":"{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"},{"Name":"voting_participants","Columns":"[{\"name\":\"decision_date\",\"type\":\"datetime\",\"conditions\":\"ContractAccess(\\\"voting_AcceptCandidates\\\",\\\"voting_AcceptDecision\\\",\\\"voting_RejectDecision\\\")\"},{\"name\":\"member_avatar\",\"type\":\"bytea\",\"conditions\":\"true\"},{\"name\":\"decision\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"member_id\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"voting_id\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"member_name\",\"type\":\"varchar\",\"conditions\":\"false\"}]","Permissions":"{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"},{"Name":"voting_subject","Columns":"[{\"name\":\"member_avatar\",\"type\":\"bytea\",\"conditions\":\"true\"},{\"name\":\"contract_accept\",\"type\":\"varchar\",\"conditions\":\"ContractAccess(\\\"voting_SubjectContract\\\")\"},{\"name\":\"formal_decision_column\",\"type\":\"varchar\",\"conditions\":\"ContractAccess(\\\"voting_SubjectFormal\\\")\"},{\"name\":\"formal_decision_tableid\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_SubjectFormal\\\")\"},{\"name\":\"formal_decision_colvalue\",\"type\":\"varchar\",\"conditions\":\"ContractAccess(\\\"voting_SubjectFormal\\\")\"},{\"name\":\"formal_decision_description\",\"type\":\"text\",\"conditions\":\"ContractAccess(\\\"voting_SubjectFormal\\\")\"},{\"name\":\"member_id\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"text_doc_hash\",\"type\":\"text\",\"conditions\":\"ContractAccess(\\\"voting_SubjectDocument\\\")\"},{\"name\":\"formal_decision_table\",\"type\":\"varchar\",\"conditions\":\"ContractAccess(\\\"voting_SubjectFormal\\\")\"},{\"name\":\"number_accept\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_AcceptCandidates\\\",\\\"voting_AcceptDecision\\\")\"},{\"name\":\"member_name\",\"type\":\"varchar\",\"conditions\":\"true\"},{\"name\":\"voting_id\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"contract_reject\",\"type\":\"varchar\",\"conditions\":\"ContractAccess(\\\"voting_SubjectContract\\\")\"},{\"name\":\"text_document\",\"type\":\"text\",\"conditions\":\"ContractAccess(\\\"voting_SubjectDocument\\\")\"}]","Permissions":"{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"}]}