If(#TemplateId#>0){
    DBFind(Name:voting_templates, Source: templates).Where(id=#TemplateId#).Vars(t)
}.Else{
    SetVar(t_id, 0)
}
SetTitle($voting_template_create$)
Div(content-wrapper){
    Div(row){
        Div(col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3){
            Div(panel panel-primary){
                Div(panel-heading){LangRes(new_template)}
                Form(panel-body){
                    Div(form-group){
                        Div(row){
                            Div(col-md-4 mt-sm text-right){
                                Label(For: Title){LangRes(name)}
                            }
                            Div(col-md-8 text-left){
                                If(#t_id#>0){
                                    SetVar(title, #t_title#)
                                }.Else{
                                    SetVar(title, New voting)
                                }
                                Input(Name: Title, Class: form-control, Type: text, Value: #title#)
                            }
                        }
                    }
                    
                    Div(form-group){
                        Div(row){
                            Div(col-md-4 mt-sm text-right){
                                Label(For: TypeParticipants){LangRes(participants)}
                            }
                            Div(col-md-8 text-left){
                                If(#t_id#>0){
                                    SetVar(tp, #t_type_participants#)
                                }.Else{
                                    SetVar(tp, 0)
                                }
                                EcosysParam(Name: type_voting_participants, Source: type_voting_participants)
                                Select(Name: TypeParticipants, Source: type_voting_participants, NameColumn: name, ValueColumn: id, Value: #tp#)
                            }
                        }
                    }
                    
                    Div(form-group){
                        Div(row){
                            Div(col-md-4 mt-sm text-right){
                                Label(For: TypeVoting){LangRes(voting_type)}
                            }
                            Div(col-md-8 text-left){
                                EcosysParam(Name: type_voting, Source: type_voting)
                                Select(Name: TypeVoting, Source: type_voting, NameColumn: name, ValueColumn: id)
                            }
                        }
                    }
                    
                    Div(form-group){
                        Div(row){
                            Div(col-md-4 mt-sm text-right){
                                Label(For: TypeDecision){LangRes(decision)}
                            }
                            Div(col-md-8 text-left){
                                EcosysParam(Name: type_voting_decisions, Source: type_voting_decisions)
                                Select(Name: TypeDecision, Source: type_voting_decisions, NameColumn: name, ValueColumn: id)
                            }
                        }
                    }
                    
                    Div(form-group){
                        Div(row){
                            Div(col-md-4 mt-sm text-right){
                                Label(For: Volume){LangRes(voting_volume)}
                            }
                            Div(col-md-8 text-left){
                                Input(Name: Volume, Class: form-control, Type: number, Value: 75).Validate(minLength: 1)
                                InputErr(Name: Volume, minLength: Please enter voting volume)
                                
                                P(Class: m0 text-muted, Body: $voting_volume_desc$)
                            }
                        }
                    }
                    
                    Div(form-group){
                        Div(row){
                            Div(col-md-4 mt-sm text-right){
                                Label(For: quorum){LangRes(voting_quorum)}
                            }
                            Div(col-md-8 text-left){
                                Input(Name: Quorum, Class: form-control, Type: number, Value: 50).Validate(minLength: 1)
                                InputErr(Name: Quorum, minLength: Please enter voting quorum)
                                P(Class: m0 text-muted, Body: $voting_quorum_desc$)
                            }
                        }
                    }
                    
                    Div(form-group){
                        Div(row){
                            Div(col-md-4 mt-sm text-right){
                                Label(For: Subject){LangRes(voting_subject)}
                            }
                            Div(col-md-8 text-left){
                                Input(Name: Subject, Class: form-control, Type: text)
                                P(Class: m0 text-muted, Body: $voting_subject_desc$)
                            }
                        }
                    }
                    
                    Div(form-group){
                        Div(row){
                            Div(col-md-4 mt-sm text-right){
                                Label(For: Voters){LangRes(voting_voters)}
                            }
                            Div(col-md-8 text-left){
                                Input(Name: Voters, Class: form-control, Type: text)
                                P(Class: m0 text-muted, Body: $voting_voters_desc$)
                            }
                        }
                    }
                    
                    
                    Div(form-group){
                        Div(row){
                            Div(col-md-4 mt-sm text-right){
                                Label(For: Vacancies){LangRes(voting_vacancies)}
                            }
                            Div(col-md-8 text-left){
                                Input(Name: Vacancies, Class: form-control, Type: number)
                                P(Class: m0 text-muted, Body: $voting_vacancies_desc$)
                            }
                        }
                    }
                    
                    Div(form-group){
                        Div(row){
                            Div(col-md-4 mt-sm text-right){
                                Label(For: InitCondition){LangRes(voting_init_condition)}
                            }
                            Div(col-md-8 text-left){
                                Input(Name: InitCondition, Class: form-control, Type: text)
                                P(Class: m0 text-muted, Body: $voting_init_condition_desc$)
                            }
                        }
                    }
                    
                    Div(form-group){
                        Div(row){
                            Div(col-md-4 mt-sm text-right){
                                Label(For: ContractAccept){LangRes(voting_contract_accept)}
                            }
                            Div(col-md-8){
                                Div(row){
                                    Div(col-md-6){
                                        Input(Name: ContractAccept, Class: form-control, Type: text)
                                        P(Class: m0 text-muted, Body: $voting_contract_accept_desc$)
                                    }
                                    Div(col-md-6){
                                        Input(Name: ParamsAccept, Class: form-control, Type: text)
                                        P(Class: m0 text-muted, Body: $voting_params_accept$)
                                    }
                                }
                            }
                        }
                    }
                    
                    Div(form-group){
                        Div(row){
                            Div(col-md-4 mt-sm text-right){
                                Label(For: ContractReject){LangRes(voting_contract_reject)}
                            }
                            Div(col-md-8){
                                Div(row){
                                    Div(col-md-6){
                                        Input(Name: ContractReject, Class: form-control, Type: text)
                                        P(Class: m0 text-muted, Body: $voting_contract_reject_desc$)
                                    }
                                    Div(col-md-6){
                                        Input(Name: ParamsReject, Class: form-control, Type: text)
                                        P(Class: m0 text-muted, Body: $voting_params_reject$)
                                    }
                                }
                            }
                        }
                    }
                    
                    
                    Div(form-group){
                        Div(row){
                            Div(col-md-4 mt-sm text-right){
                                Label(For: Precondition){LangRes(voting_precondition)}
                            }
                            Div(col-md-8 text-left){
                                Input(Name: Precondition, Class: form-control, Type: text)
                                P(Class: m0 text-muted, Body: $voting_precondition_desc$)
                            }
                        }
                    }
                    
                    Div(panel-footer clearfix){
                        Div(pull-right){
                            Button(Body: LangRes(back), Class: btn btn-default, Page: voting_templates)
                            Button(Body: LangRes(create), Class: btn btn-primary, Page: voting_list, Contract: voting_TemplateStore)
                        }
                    }
                }
            }
        }
    }
}