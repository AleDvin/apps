contract voting_TemplateStore{
    data{
        KeyId int
        VotingParamId int
        Start string "date"
        StartTime string "date"
        End string "date"
        EndTime string "date"
    }
    
    func conditions{
        $vParams = DBFind("voting_templates").WhereId($VotingParamId).Row()
        if !$vParams{
            warning "Voting params not found"
        }
        $isKeyOk = DBFind("keys").Where("id=?", $KeyId).Row()
        if !$isKeyOk{
            warning "Keyid not found"
        }
        
        $condition = $votingParams["init_conditions"]
        ContractConditions($condition)
        
        $candidateRoleName = $vParams["precondition"]
        $votersRoleName = $vParams["voters"]
        $votingName = $vParams["title"]
        $volume = Int($vParams["volume"])
        $quorum = Int($vParams["quorum"])
        $typeVoting = Int($vParams["type_voting"])
        $typeParticipants = Int($vParams["type_participants"])
        $typeDecision = Int($vParams["type_decision"])
        $vacancies = Int($vParams["vacancies"])
        $desc = Sprintf("%v [%v]", $votingName, IdToAddress($KeyId))
        $contractAccept = $vParams["contract_accept"]
        $acceptParams = $vParams["contract_accept_params"]
        $contractReject = $vParams["contract_reject"]
        $rejectParams = $vParams["contract_reject_params"]
        
        $isCreated = DBFind("voting_instances").Where("name=? and description=? and delete=0", $votingName, $desc).Row()
        if $isCreated{
            // info "Voting already created"
        }
        
        // if not special then use default
        $defaultParams = Sprintf("ParamId->%v;KeyId->%v", $vParams["id"], $KeyId)
        if Size($acceptParams) == 0{
            $acceptParams = $defaultParams
        }
        if Size($rejectParams) == 0{
            $rejectParams = $defaultParams
        }
    }
    
    func action{
        
        
    }
}