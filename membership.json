{
    "blocks": [],
    "contracts": [
        {
            "Name": "Roles_CandidateDelegate_Add",
            "Value": "contract Roles_CandidateDelegate_Add{\n    data{\n        MemberId int\n    }\n    \n    conditions{\n        var roleName string\n        roleName = \"candidate_delegate\"\n        var roleType int\n        roleType = 1 // appointed\n        var member map\n        member = DBFind(\"members\").Where(\"id=?\",$MemberId).Row()\n        if !member{\n            info Sprintf(\"Member (%v) not found\", $MemberId)\n        }\n        // create role if not exists\n        $role = DBFind(\"roles_list\").Where(\"role_name=?\",roleName).Row()\n        if !$role{\n            info Sprintf(\"Role (%s) not found\", roleName)\n        }\n    }\n    \n    action{\n        Roles_Assign(\"role_id,member_id\", Int($role[\"id\"]), $MemberId)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "membership_Request",
            "Value": "contract MembershipRequest{\n    data{\n        Eco int\n        Username string \"optional\"\n    }\n    \n    conditions{\n        $table = Sprintf(\"%d_membership_requests\", $Eco)\n        var membership map\n        membership = DBFind(\"membership_requests\").Where(\"member_id=?\", $key_id).Ecosystem($Eco).Row()\n        if membership {\n            info \"You already sent request into this system\"\n        }\n    }\n    \n    action{\n        DBInsert($table, \"member_id,username\", $key_id, $Username)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "membership_RequestApprove",
            "Value": "contract membership_RequestApprove{\n    data{\n        MembershipId int\n    }\n    \n    action{\n        var membership map\n        membership = DBFind(\"membership_requests\").Where(\"id=?\",$MembershipId).Row()\n        var memberId int\n        memberId = Int(membership[\"member_id\"])\n        var key map\n        key = DBFind(\"keys\").Where(\"id=?\",memberId).Row()\n        if !key{\n            @1MoneyTransfer(\"Recipient,Amount,Comment\", IdToAddress(memberId), 1, \"\")\n        }\n        var member map\n        member = DBFind(\"members\").Where(\"id=?\", memberId).Row()\n        if !member {\n            DBInsert(\"members\", \"id,member_name\", memberId, membership[\"username\"])\n            Roles_CandidateDelegate_Add(\"memberId\", memberId)\n        }\n        DBUpdate(\"membership_requests\", $MembershipId, \"approved\", 1)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "membership_RequestDelete",
            "Value": "contract membership_RequestDelete{\n    data{\n        MembershipId int\n    }\n    conditions{}\n    \n    action{\n        DBUpdate(\"membership_requests\", $MembershipId, \"deleted\", 1)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        }
    ],
    "data": [],
    "languages": [
        {
            "Name": "approve",
            "Conditions": "",
            "Trans": "{\"en\":\"Approve\",\"ru\":\"Одобрить\"}"
        },
        {
            "Name": "ask_delete",
            "Conditions": "",
            "Trans": "{\"en\":\"Do you want to delete?\",\"ru\":\"Хотите удалить?\"}"
        },
        {
            "Name": "delete",
            "Conditions": "",
            "Trans": "{\"en\":\"Delete\",\"ru\":\"Удалить\"}"
        },
        {
            "Name": "membership_requests_list",
            "Conditions": "",
            "Trans": "{\"en\":\"Membership requests list\",\"ru\":\"Список запросов на членство\"}"
        }
    ],
    "menus": [],
    "pages": [
        {
            "Name": "membership_request",
            "Value": "SetTitle($membership_request$)\nDiv(content-wrapper){\n    Div(row){\n        Div(col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4){\n            Div(panel panel-primary){\n                Div(panel-heading){\n                    $request$\n                }\n                Form(){\n                    Div(panel-body){\n                        Div(row){\n                            Div(col-sm-12){\n                                Label($select_ecosystem$:)\n                                Input(Name: Eco, Type: number)\n                            }\n                        }\n                        Div(row){\n                            Div(col-sm-12){\n                                Label($username$:)\n                                Input(Name: Username, Type: text)\n                            }\n                        }\n                    }\n                    Div(panel-footer){\n                        Button(Contract: membership_Request, Class: btn btn-primary, Page: membership_request, Body: $send$)\n                    }\n                }\n            }\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Menu": "default_menu"
        },
        {
            "Name": "membership_requests_list",
            "Value": "DBFind(Name: membership_requests, Source: src_requests).Where(deleted=0 and approved=0).Custom(_buttons){\n    If(#approved#==0){\n        Button(Contract: membership_RequestApprove,Params: \"MembershipId=#id#\", Page: membership_requests_list, Body: $approve$, Class: btn btn-success)\n        \n        Button(Contract: membership_RequestDelete,Params: \"MembershipId=#id#\", Page: membership_requests_list, Body: $delete$, Class: btn btn-danger).Alert($ask_delete$, $yes$, $no$)\n    }\n}\nSetTitle($membership_requests_list$)\nDiv(content-wrapper){\n    Div(row){\n        Div(col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3){\n            Div(panel panel-primary){\n                Div(table-responsive){\n                    Table(Source: src_requests, Columns: \"member_id=member_id,member_name=member_name,=_buttons\")\n                }\n            }\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Menu": "default_menu"
        }
    ],
    "parameters": [],
    "tables": [
        {
            "Name": "membership_requests",
            "Columns": "[{\n    \"name\": \"deleted\",\n    \"type\": \"number\",\n    \"conditions\": \"true\"\n}, {\n    \"name\": \"approved\",\n    \"type\": \"number\",\n    \"conditions\": \"true\"\n}, {\n    \"name\": \"member_id\",\n    \"type\": \"number\",\n    \"conditions\": \"true\"\n}, {\n    \"name\": \"username\",\n    \"type\": \"varchar\",\n    \"conditions\": \"true\"\n}]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"
        }
    ]
}