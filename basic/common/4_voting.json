{
    "blocks": [],
    "contracts": [
        {
            "Name": "voting_CheckDecision",
            "Value": "contract voting_CheckDecision {\n    func stringToMap(s string) map{\n        var arr, par array\n        var i int\n        var res map\n        arr = Split(s, \";\")\n        while i < Len(arr){\n            par = Split(arr[i], \"->\")\n            if Len(par) == 2{\n                res[par[0]] = par[1]\n            }\n            i=i+1\n        }\n        return res\n    }\n    data {\n        votingID int\n    }\n    \n    conditions {\n        $voting_map = DBFind(\"voting_instances\").Where(\"id=? and enddate < now()\", $votingID).Where(\"id=? and percent_voters >= quorum\", $votingID).Row()\n        if !$voting_map{\n            warning \"Voting has not expired. Try again later, please\"\n        }\n        // if Int($voting_map[\"creator_id\"]) != $key_id {\n        // warning \"Only creator the voting can check decision\"\n        // }\n        \n        $type_voting = Int($voting_map[\"type_voting\"])\t//system or custom\n        $number_voters = Int($voting_map[\"number_voters\"]) // number of participants who have already voted\n        $optional_role_vacancies = Int($voting_map[\"optional_role_vacancies\"]) // number of vacancies for the role\n        $voting_name = $voting_map[\"name\"]\n        $quorum = Int($voting_map[\"quorum\"])\n        $optional_role_id = Int($voting_map[\"optional_role_id\"])\n        $contract_accept = $voting_map[\"optional_contract_accept\"]\n        $contract_reject = $voting_map[\"optional_contract_reject\"]\n        $param_accept = stringToMap($voting_map[\"contract_accept_params\"])\n        $param_reject = stringToMap($voting_map[\"contract_reject_params\"])\n        $flag_success = Int($voting_map[\"flag_success\"])\n        $typedecision = Int($voting_map[\"typedecision\"])\n        \n        $subjectId = DBFind(\"voting_subject\").Where(\"voting_id=$\", $votingID).One(\"id\")\n        if $subjectId == nil {\n            warning \"Subject of voting is not found\"\n        }\n    }\n    \n    action {\n        // if notifications have been sent, then close it\n        var params string\n        params = \"notific_param=\" + Str($votingID)\n        $ret_notifics = DBFind(\"notifications\").Where(\"page_name=$ and page_params=$ and closed=0\", \"voting_view\", params)\n        var i int\n        while(i < Len($ret_notifics)){\n            $vals_notifics = $ret_notifics[i]\n            Notifications_Single_Close(\"notific_id\", Int($vals_notifics[\"id\"]))\n            i = i + 1\n        }\n        \n        //if the flag of success = true(enough participants to make a decision)\n        if($flag_success == 1){\n            if(($typedecision == 1) ||($typedecision == 2) ){\n                $number_inserts = 0 // number of candidates who have already been added(for comparison with the number of vacancies)\n                $flag_decision = -1 // none of the candidates has been added yet\n                \n                $ret_subject = DBFind(\"voting_subject\").Where(\"voting_id=$\", $votingID).Order(\"number_accept DESC\")\n                i = 0\n                while i < Len($ret_subject){\n                    $vals_subject = $ret_subject[i]\n                    \n                    // if there are still vacancies\n                    if $number_inserts < $optional_role_vacancies {\n                        // calculate the percentage to compare it with the quorum\n                        $v_percent = Int($vals_subject[\"number_accept\"]) * 100 / $number_voters\n                        // if percentage >= quorum values, then this candidate must be added to the role\n                        if $v_percent >= $quorum {\n                            // get role name\n                            $role_name = DBFind(\"roles_list\").Where(\"id=$\", $optional_role_id).One(\"role_name\")\n                            if $role_name != nil {\n                                // add a candidate to the role\n                                DBInsert(\"roles_assign\", \"role_id,role_name,member_id,member_name,member_avatar,timestamp date_start,appointed_by_id,appointed_by_name\",$optional_role_id, string($role_name), Int($vals_subject[\"member_id\"]), string($vals_subject[\"member_name\"]), string($vals_subject[\"member_avatar\"]), $block_time, $votingID, $voting_name)\n                                \n                                // increment of the counter of candidates\n                                $number_inserts = $number_inserts + 1\n                                // if at least one of the candidates was added to the role, then the voting decision is considered successful\n                                $flag_decision = 1\n                            }\n                        }\n                    }\n                    i = i + 1\n                }\n                \n                DBUpdate(\"voting_instances\", $votingID, \"flag_decision\", $flag_decision)\n                \n                // starting optional contract\n                if($flag_decision == 1){\n                    if($contract_accept != \"\"){\n                        CallContract($contract_accept, $param_accept)\n                    }\n                }\n                else{\n                    if($contract_reject != \"\"){\n                        CallContract($contract_reject, $param_reject)\n                    }\n                }\n            }\n            \n            if($typedecision == 3){\n                $number_accept = DBFind(\"voting_subject\").Where(\"voting_id=$\", $votingID).One(\"number_accept\")\n                if($number_accept != nil){\n                    // calculate the percentage to compare it with the quorum\n                    $v_percent = Int($number_accept) * 100 / $number_voters\n                    \n                    // if percentage >= quorum values, then this document will be approved\n                    if($v_percent >= $quorum){\n                        $flag_decision = 1\n                    }\n                    // otherwise the document will be rejected\n                    else{\n                        $flag_decision = -1\n                    }\n                    \n                    DBUpdate(\"voting_instances\", $votingID, \"flag_decision\", $flag_decision)\n                    \n                    // starting optional contract\n                    if($flag_decision == 1){\n                        if($contract_accept != \"\"){\n                            CallContract($contract_accept, $param_accept)\n                        }\n                    }\n                    else{\n                        if($contract_reject != \"\"){\n                            CallContract($contract_reject, $param_reject)\n                        }\n                    }\n                }\n            }\n            \n            if($typedecision == 4){\n                $subject_map = DBFind(\"voting_subject\").Where(\"voting_id=$\", $votingID).Row()\n                if($subject_map[\"id\"] != nil){\n                    $number_accept = Int($subject_map[\"number_accept\"])\n                    \n                    // calculate the percentage to compare it with the quorum\n                    $v_percent = $number_accept * 100 / $number_voters\n                    \n                    // if percentage >= quorum values, then this document will be approved\n                    if($v_percent >= $quorum){\n                        $flag_decision = 1\n                        \n                        $decisionTable = $subject_map[\"formal_decision_table\"]\n                        $decisionId = Int($subject_map[\"formal_decision_tableid\"])\n                        $decisionColumn =$subject_map[\"formal_decision_column\"]\n                        $decisionValue = $subject_map[\"formal_decision_colvalue\"]\n                        \n                        // type of voting - custom\n                        if($type_voting == 1){\n                            // ALWAYS CHECK THE PERMISSION\n                            DBUpdate($decisionTable, $decisionId, $decisionColumn, $decisionValue)\n                        }\n                        \n                        // type of voting - system\n                        if($type_voting == 2){\n                            DBUpdateSysParam($decisionColumn, $decisionValue, \"\")\n                        }\n                    }\n                    // otherwise the document will be rejected\n                    else{\n                        $flag_decision = -1\n                    }\n                    \n                    DBUpdate(\"voting_instances\", $votingID, \"flag_decision\", $flag_decision)\n                    \n                    // starting optional contract\n                    if($flag_decision == 1){\n                        if($contract_accept != \"\"){\n                            CallContract($contract_accept, $param_accept)\n                        }\n                    }\n                    else{\n                        if($contract_reject != \"\"){\n                            CallContract($contract_reject, $param_reject)\n                        }\n                    }\n                }\n            }\n            \n            if($typedecision == 5){\n                $subject_map = DBFind(\"voting_subject\").Where(\"voting_id=$\", $votingID).Row()\n                if($subject_map[\"id\"] != nil){\n                    $number_accept = Int($subject_map[\"number_accept\"])\n                    \n                    // calculate the percentage to compare it with the quorum\n                    $v_percent = $number_accept * 100 / $number_voters\n                    \n                    $con_accept = $subject_map[\"contract_accept\"]\n                    $con_reject = $subject_map[\"contract_reject\"]\n                    $param_accept = stringToMap($subject_map[\"contract_accept_params\"])\n                    $param_reject = stringToMap($subject_map[\"contract_reject_params\"])\n                    \n                    // if percentage >= quorum values, then this document will be approved\n                    if($v_percent >= $quorum){\n                        $flag_decision = 1\n                        \n                        CallContract($con_accept, $param_accept)\n                    }\n                    // otherwise the document will be rejected\n                    else{\n                        $flag_decision = -1\n                        \n                        CallContract($con_reject, $param_reject)\n                    }\n                }\n                \n                DBUpdate(\"voting_instances\", $votingID, \"flag_decision\", $flag_decision)\n            }\n        }\n        // decision can not be made(not enough participants to make a decision)\n        else {\n            DBUpdate(\"voting_instances\", $votingID, \"flag_decision\", -2)\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "voting_UpdateDataForGraphs",
            "Value": "contract voting_UpdateDataForGraphs {\n    data {\n        votingID int\n    }\n    \n    conditions {\n        $voting_map = DBFind(\"voting_instances\").Where(\"id=$\", $votingID).Row()\n        if ($voting_map[\"id\"] == nil){\n            warning \"Voting is not found\"\n        }\n        \n        $number_participants = Int($voting_map[\"number_participants\"]) // number of participants\n        $number_voters = Int($voting_map[\"number_voters\"]) // number of voters\n        $percent_voters = Int($voting_map[\"percent_voters\"]) \n        $volume = Int($voting_map[\"volume\"]) // percentage of votes for this vote\n        $quorum = Int($voting_map[\"quorum\"]) \n    }\n    \n    action {\n        // increment count of voters\n        $number_voters = $number_voters + 1\n        \n        // calculate the percentage of the ratio of the number of voters to the number of participants (for the graph)\n        $percent_voters = ($number_voters * 100) / $number_participants\n        if ($percent_voters > 100) {$percent_voters = 100}\n        \n        // update progress\n        $percent_success = ($percent_voters * 100) / $volume\n        if ($percent_success > 100) {$percent_success = 100}\n        \n        // update the flag of success\n        $flag_success = 0\n        if ($percent_success == 100) {$flag_success = 1}\n        \n        DBUpdate(\"voting_instances\", $votingID, \"number_voters,percent_voters,percent_success,flag_success\",\n        $number_voters, $percent_voters, $percent_success, $flag_success)\n\t\t\n\t\tif $percent_voters >= $quorum{\n\t\t\tvoting_CheckDecision(\"votingID\", $votingID)\n\t\t}\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "voting_AcceptCandidates",
            "Value": "contract voting_AcceptCandidates {\n    data {\n        votingID int\n        candidateID int\n    }\n\n    conditions {\n\t\t$voting_map = DBFind(\"voting_instances\").Where(\"id=$\", $votingID).Row()\n\t\tif ($voting_map[\"id\"] == nil){\n\t\t\twarning \"Voting is not found\"\n\t\t}\n\t\t$subject_map = DBFind(\"voting_subject\").Where(\"voting_id=$ and member_id=$\", $votingID, $candidateID).Row()\n\t\tif ($subject_map[\"id\"] == nil){\n\t\t\twarning \"Subject of voting is not found\"\n\t\t}\n\t\t\n\t\t// check the participant of the voting\n\t\t$participant_id = DBFind(\"voting_participants\").Where(\"voting_id=$ and member_id=$\", $votingID, $key_id).One(\"id\")\n\t\tif ($participant_id == nil){\n\t\t\twarning \"You are not a participant in this voting\"\n\t\t}\n    }\n\n    action {\n\t\t// if notifications have been sent, then close it\n\t\tif ( Int($voting_map[\"flag_notifics\"]) == 1 ){\n\t\t\tvar params string\n\t\t\tparams = \"notific_param=\" + Str($votingID)\t\t\n\t\t\t$notific_id = DBFind(\"notifications\").Where(\"recipient_id=$ and page_name=$ and page_params=$ and closed=$\", $key_id, \"voting_view\", params, 0).One(\"id\")\n\t\t\tif ($notific_id != nil){\n\t\t\t\tNotifications_Single_Close(\"notific_id\", Int($notific_id))\n\t\t\t}\n\t\t}\n\n\t\t// check the decision\n\t\tif ( Int($voting_map[\"flag_decision\"]) == 1 ){\n\t\t\twarning \"Decision was taken. Voting is now not possible\"\n\t\t} \n\t\t\n\t\t// check start-end of voting time\n\t\t$voting_start = DBFind(\"voting_instances\").Where(\"id=$ and startdate < now()\", $votingID).One(\"id\")\n\t\t$voting_end   = DBFind(\"voting_instances\").Where(\"id=$ and enddate   > now()\", $votingID).One(\"id\")\n\t\tif ($voting_start == nil){\n\t\t\twarning \"Voting has not yet begun. Try again later, please\"\n\t\t}\n\t\tif ($voting_end == nil){\n\t\t\twarning \"Voting has expired. Voting is now not possible\"\n\t\t}\n\t\t\n\t\t//-----------------------------------------------------------------------------------------------\n\n\t\t// write the result of the voting\n\t\tDBUpdate(\"voting_participants\", Int($participant_id), \"timestamp decision_date, decision\", $block_time, $candidateID)\n\n\t\t// increment count of accept\n\t\t$subject_id     = Int($subject_map[\"id\"])\n\t\t$number_accept  = Int($subject_map[\"number_accept\"])\n\t\t$number_accept   = $number_accept + 1\n\t\tDBUpdate(\"voting_subject\", $subject_id, \"number_accept\", $number_accept)\n\n\t\tvoting_UpdateDataForGraphs(\"votingID\", $votingID)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "voting_Invite",
            "Value": "contract voting_Invite {\n    data {\n        votingID int\n        var_id int      //0, member_id, role_id\n    }\n\n    conditions {\n\t\t$voting_map = DBFind(\"voting_instances\").Where(\"id=$ and enddate > now()\", $votingID).Row()\t\n\t\tif ($voting_map[\"id\"] == nil){\n\t\t\twarning \"Voting has expired. Can not add new participants\"\n\t\t}\n\t\n\t\t$type_participants = Int($voting_map[\"typeparticipants\"])\n\t\t$number_participants = Int($voting_map[\"number_participants\"])\n\t\n\t\tif (($number_participants > 1) && (Int($voting_map[\"type_voting\"]) == 2)){\n\t\t\twarning \"This vote is a system. Add new participants are not possible\"\n\t\t}\n\n\t\tif ($type_participants == 2){       //list of candidates\n\t\t\t$participant_id = DBFind(\"voting_participants\").Where(\"voting_id=$ and member_id=$\", $votingID, $var_id).One(\"id\")\n\t\t\tif ($participant_id != nil){\t\t\n\t\t\t\twarning \"Member has already been added before\"\n\t\t\t}\n\t\t}\n\n\t\tif ($type_participants == 3){       //list of candidates\n\t\t\t$participant_id = DBFind(\"voting_participants\").Where(\"voting_id=$\", $votingID).One(\"id\")\n\t\t\tif ($participant_id != nil){\t\t\n\t\t\t\twarning \"Voting participants have already been added before\"\n\t\t\t}\n\t\t}\n    }\n\n    action {\n\t\tif ($type_participants == 1){\n\t\t\t$ret_member = DBFind(\"members\").Where(\"id != $\", 0).Order(\"id\")\n\t\t\t$i = 0\n\t\t\twhile($i < Len($ret_member)){\n\t\t\t\t$vals_member = $ret_member[$i]\n\t\t\t\t\n\t\t\t\tDBInsert(\"voting_participants\", \"voting_id, member_id, member_name, member_avatar, decision\", $votingID, $vals_member[\"id\"], $vals_member[\"member_name\"], $vals_member[\"avatar\"], 0)  \n\t\t\t\t$number_participants = $number_participants + 1\n\t\t\t\t$i = $i + 1\n\t\t\t} \n\t\t}\n\n\t\tif ($type_participants == 2){\n\t\t\t$member_map = DBFind(\"members\").Where(\"id = $\", $var_id).Row()\n\t\t\tif ($member_map[\"id\"] != nil){\n\t\t\t\tDBInsert(\"voting_participants\", \"voting_id, member_id, member_name, member_avatar, decision\", $votingID, $var_id, $member_map[\"member_name\"], $member_map[\"avatar\"], 0)  \n\t\t\t\t$number_participants = $number_participants + 1\n\t\t\t}\n\t\t}\n\n\t\tif ($type_participants == 3){\n\t\t\t$ret_member = DBFind(\"roles_assign\").Where(\"role_id=$ and delete=0\", $var_id).Order(\"id\")\n\t\t\t$i = 0\n\t\t\twhile($i < Len($ret_member)){\n\t\t\t\t$vals_member = $ret_member[$i]\n\t\t\t\t\n\t\t\t\tDBInsert(\"voting_participants\", \"voting_id, member_id, member_name, member_avatar, decision\", $votingID, $vals_member[\"member_id\"], $vals_member[\"member_name\"], $vals_member[\"member_avatar\"], 0)  \n\t\t\t\t$number_participants = $number_participants + 1\n\t\t\t\t$i = $i + 1\n\t\t\t} \n\t\t}\n\n\t\tDBUpdate(\"voting_instances\", $votingID, \"number_participants\", $number_participants)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "voting_Delete",
            "Value": "contract voting_Delete {\n    data {\n        votingID int\n    }\n\n    conditions {\n\t\t$voting_map = DBFind(\"voting_instances\").Where(\"id=? and startdate > now()\", $votingID).Row()\n\t\tif ($voting_map[\"id\"] == nil){\n\t\t\twarning \"Voting already started. Delete voting impossible\"\n\t\t}\t\n\t\t\n\t\tif (Int($voting_map[\"creator_id\"]) != $key_id){\n\t\t\twarning \"You are not the creator of the voting\"\n\t\t}\n    }\n\n    action {\n\t\tDBUpdate(\"voting_instances\", $votingID, \"delete\", 1)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "voting_CreateNew",
            "Value": "contract voting_CreateNew {\n    data {\n        voting_name string\n        type_voting int\n        description string\n        type_participants int\n        type_decision int\n        now_date string \"date\"\n        start_time string \"date\"\n        start_date string \"date\"\n        end_date string \"date\"\n        end_time string \"date\"\n        volume int\n        quorum int\n    }\n    \n    func conditions {\n        $start_date = $start_date + \" \"+ $start_time\n        $end_date = $end_date + \" \"+ $end_time\n        var m string\n        \n        if ($now_date >= $start_date){\n            m = Sprintf(\"Voting start date [%v] is less than the current date [%v]\", $start_date, $now_date)\n            warning m\n        }\n        \n        if ($start_date >= $end_date){\n            m = Sprintf(\"Voting end date [%v] is less than the start date [%v]\",$end_date, $start_date)\n            warning m\n        }\n        \n        if (($volume < 50) || ($volume > 100) ){\n            m = Sprintf(\"Volume [%v] should be in the range from 50 to 100\", $volume)\n            warning m\n        }\n        \n        if (($quorum < 5) || ($quorum > 100) ){\n            m = Sprintf(\"Quorum [%v] should be in the range from 5 to 100\", $quorum)\n            warning m\n        }\n        \n        $member_map = DBFind(\"members\").Where(\"id=$\", $key_id).Row()\n        if !$member_map {\n            warning \"You are not a member of the ecosystem\"\n        }\n    }\n    \n    func action {\n        $voting_id = DBInsert(\"voting_instances\", \"name,type_voting,description,typeparticipants,typedecision,startdate,enddate,volume,quorum,creator_id,creator_name,creator_avatar,flag_success,percent_success,number_participants,number_voters,flag_decision,flag_notifics,delete\",\n        $voting_name, $type_voting, $description, $type_participants, $type_decision, $start_date, $end_date, $volume, $quorum, $key_id, $member_map[\"member_name\"], $member_map[\"avatar\"], 0, 0, 0, 0, 0, 0, 0)\n        \n        // if all members are voting participants\n        if ($type_participants==1){\n            voting_Invite(\"votingID,var_id\", $voting_id, 0)\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "voting_AcceptDecision",
            "Value": "contract voting_AcceptDecision {\n    data {\n        votingID int\n    }\n\n    conditions {\n\t\t$voting_map = DBFind(\"voting_instances\").Where(\"id=$\", $votingID).Row()\n\t\tif ($voting_map[\"id\"] == nil){\n\t\t\twarning \"Voting is not found\"\n\t\t}\n\t\t$subject_map = DBFind(\"voting_subject\").Where(\"voting_id=$\", $votingID).Row()\n\t\tif ($subject_map[\"id\"] == nil){\n\t\t\twarning \"Subject of voting is not found\"\n\t\t}\n\t\t\n\t\t// check the participant of the voting\n\t\t$participant_id = DBFind(\"voting_participants\").Where(\"voting_id=$ and member_id=$\", $votingID, $key_id).One(\"id\")\n\t\tif ($participant_id == nil){\n\t\t\twarning \"You are not a participant in this voting\"\n\t\t}\n    }\n\n    action {\n\t\t// if notifications have been sent, then close it\n\t\tif ( Int($voting_map[\"flag_notifics\"]) == 1 ){\n\t\t\tvar params string\n\t\t\tparams = \"notific_param=\" + Str($votingID)\t\n\t\t\t$notific_id = DBFind(\"notifications\").Where(\"recipient_id=$ and page_name=$ and page_params=$ and closed=$\", $key_id, \"voting_view\", params, 0).One(\"id\")\n\t\t\tif ($notific_id != nil){\n\t\t\t\tNotifications_Single_Close(\"notific_id\", Int($notific_id))\n\t\t\t}\n\t\t}\n\n\t\t// check the decision\n\t\tif ( Int($voting_map[\"flag_decision\"]) == 1 ){\n\t\t\twarning \"Decision was taken. Voting is now not possible\"\n\t\t} \n\t\t\n\t\t// check start-end of voting time\n\t\t$voting_start = DBFind(\"voting_instances\").Where(\"id=$ and startdate < now()\", $votingID).One(\"id\")\n\t\t$voting_end   = DBFind(\"voting_instances\").Where(\"id=$ and enddate   > now()\", $votingID).One(\"id\")\n\t\tif ($voting_start == nil){\n\t\t\twarning \"Voting has not yet begun. Try again later, please\"\n\t\t}\n\t\tif ($voting_end == nil){\n\t\t\twarning \"Voting has expired. Voting is now not possible\"\n\t\t}\n\t\t\n\t\t//-----------------------------------------------------------------------------------------------\n\n\t\t// write the result of the voting\n\t\tDBUpdate(\"voting_participants\", Int($participant_id), \"timestamp decision_date, decision\", $block_time, 1)\n\n\t\t// increment count of accept\n\t\t$subject_id     = Int($subject_map[\"id\"])\n\t\t$number_accept  = Int($subject_map[\"number_accept\"])\n\t\t$number_accept   = $number_accept + 1\n\t\tDBUpdate(\"voting_subject\", $subject_id, \"number_accept\", $number_accept)\n\n\t\tvoting_UpdateDataForGraphs(\"votingID\", $votingID)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "voting_SendNotifics",
            "Value": "contract voting_SendNotifics {\n    data {\n        votingID int\n    }\n\n    conditions {\n\t\t$voting_id = DBFind(\"voting_instances\").Where(\"id=$ and enddate > now()\", $votingID).One(\"id\")\n        if ($voting_id == nil){\n\t\t\twarning \"Voting has expired. Notifications can not be sent\"\n\t\t}\n\t\n\t\t$voting_map = DBFind(\"voting_instances\").Where(\"id=$ and startdate < now()\", $votingID).Row()\n\t\tif ($voting_map[\"id\"] == nil){\n\t\t\twarning \"Voting has not yet begun. Try again later, please\"\n\t\t}\t\n\t\t\n\t\tif( Int($voting_map[\"creator_id\"]) != $key_id ){\n\t\t\twarning \"You are not the creator of the voting\"\n\t\t}\n\t\tif( Int($voting_map[\"flag_notifics\"]) == 1 ){\n\t\t\twarning \"Notifications have already been sent\"\n\t\t}\n\t\t\n\t\t$voting_name = string($voting_map[\"name\"])\n    }\n\n    action {\n\t\t$ret_participants = DBFind(\"voting_participants\").Where(\"voting_id=$ and decision=$\", $votingID, 0)\n\t\t$i = 0\n\t\twhile($i < Len($ret_participants)){\n\t\t\t$vals_participants = $ret_participants[$i]\n\t\t\t$recipient = Int($vals_participants[\"member_id\"])\n\t\t\t\n\t\t\tvar params string\n\t\t\tparams = \"notific_param=\" + Str($votingID)\n\t\t\t\n\t\t\tNotifications_Single_Send(\"member_id,icon_name,text_header,text_body,page_name,params_val\", \n\t\t\t\t\t\t\t\t$recipient, \"fa-check\", \"Voting\", $voting_name, \"voting_view\", params)\n\t\t\t$i = $i + 1\n\t\t}\n\t\t\n\t\tDBUpdate(\"voting_instances\", $votingID, \"flag_notifics\", 1)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "voting_SubjectCheckFulldata",
            "Value": "contract voting_SubjectCheckFulldata {\n    data {\n        votingID int\n    }\n\n    conditions {\n\t\t$voting_map = DBFind(\"voting_instances\").Where(\"id=?\", $votingID).Row()\n\t\tif ($voting_map[\"id\"] == nil){\n\t\t\twarning \"Voting is not found\"\n\t\t}\t\n\t\t\n\t\t$subject_map = DBFind(\"voting_subject\").Where(\"voting_id=?\", $votingID).Row()\n\t\tif ($subject_map[\"id\"] == nil){\n\t\t\twarning \"Subject of voting is not found\"\n\t\t}\n\t\t\n\t\t$typedecision = Int($voting_map[\"typedecision\"])\n    }\n\n    action {\n\t\tif ( ($typedecision == 1) || ($typedecision == 2) ){\n\t\t\tif ( (Int($voting_map[\"optional_number_cands\"]) > 0) && (Int($voting_map[\"optional_role_vacancies\"]) > 0) && (Int($voting_map[\"optional_role_id\"])  > 0) ){\n\t\t\t\tDBUpdate(\"voting_instances\", $votingID, \"flag_fulldata\", 1)\n\t\t\t} \n\t\t}\n\n\t\tif ($typedecision == 3){\n\t\t\tif ( (string($subject_map[\"text_document\"]) != \"\") && (string($subject_map[\"text_doc_hash\"]) != \"\") ){\n\t\t\t\tDBUpdate(\"voting_instances\", $votingID, \"flag_fulldata\", 1)\n\t\t\t} \n\t\t}\n\n\t\tif ($typedecision == 4){\n\t\t\tif ( (string($subject_map[\"formal_decision_description\"]) != \"\") && (string($subject_map[\"formal_decision_table\"])  != \"\") && \n\t\t\t\t (string($subject_map[\"formal_decision_tableid\"])     != \"\") && (string($subject_map[\"formal_decision_column\"]) != \"\") && \n\t\t\t\t (string($subject_map[\"formal_decision_colvalue\"])    != \"\") ){\n\t\t\t\tDBUpdate(\"voting_instances\", $votingID, \"flag_fulldata\", 1)\n\t\t\t} \n\t\t}\n\n\t\tif ($typedecision == 5){\n\t\t\tif ( (string($subject_map[\"contract_accept\"]) != \"\") && (string($subject_map[\"contract_reject\"]) != \"\") ){\n\t\t\t\tDBUpdate(\"voting_instances\", $votingID, \"flag_fulldata\", 1)\n\t\t\t} \n\t\t}\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "voting_SubjectCandidates",
            "Value": "contract voting_SubjectCandidates {\n    data {\n        votingID int\n        memberID int\n    }\n\n    conditions {\n\t\t$voting_map = DBFind(\"voting_instances\").Where(\"id=$ and startdate > now()\", $votingID).Row()\n\t\tif ($voting_map[\"id\"] == nil){\n\t\t\twarning \"Voting already started. New candidate can not be added\"\n\t\t}\t\t\n\n\t\tif ( (Int($voting_map[\"flag_fulldata\"]) == 1) && (Int($voting_map[\"type_voting\"]) == 2) ){\n\t\t\twarning \"This vote is a system. Change settings not allowed\"\n\t\t}\n\t\t\n        if($memberID == 0){\n            $memberID = $key_id\n        }\n\t\t\n\t\t$subject_id = DBFind(\"voting_subject\").Where(\"voting_id=$ and member_id=$\", $votingID, $memberID).One(\"id\")\n\t\tif ($subject_id != nil){\n\t\t\twarning \"This candidature for this role has already been added before\"\n\t\t}\n\t\n\t\t$member_map = DBFind(\"members\").Where(\"id = $\", $memberID).Row()\n\t\tif ($member_map[\"id\"] == nil){\n\t\t\twarning \"Member not found\"\n\t\t}\n\t\t\n\t\t$optional_number_cands = Int($voting_map[\"optional_number_cands\"])\n    }\n\n    action {\n\t\tDBInsert(\"voting_subject\", \"member_id,member_name,member_avatar,voting_id\", $memberID, $member_map[\"member_name\"], $member_map[\"avatar\"], $votingID)\n\t\n\t\t$optional_number_cands = $optional_number_cands + 1\n\t\tDBUpdate(\"voting_instances\", $votingID, \"optional_number_cands\", $optional_number_cands)\n\n\t\tvoting_SubjectCheckFulldata(\"votingID\", $votingID)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "voting_SubjectContract",
            "Value": "contract voting_SubjectContract {\n  data {\n    votingID int\n    \n    contract_reject string\n    contract_accept string\n    reject_params string \"optional\"\n    accept_params string \"optional\"\n  }\n  \n  conditions {\n    $voting_map = DBFind(\"voting_instances\").Where(\"id=? and startdate > now()\", $votingID).Row()\n    if ($voting_map[\"id\"] == nil){\n      warning \"Voting already started. Can not edit document\"\n    }\n    if ((Int($voting_map[\"flag_fulldata\"]) == 1) && (Int($voting_map[\"type_voting\"]) == 2) ){\n      warning \"This vote is a system. Change settings not allowed\"\n    }\n  }\n  \n  action {\n    $subject_id = DBFind(\"voting_subject\").Where(\"voting_id = $\", $votingID).One(\"id\")\n    if ($subject_id != nil){\n      DBUpdate(`voting_subject`, Int($subject_id), `contract_accept,contract_reject,contract_accept_params,contract_reject_params`, $contract_accept, $contract_reject, $contract_accept_params, $contract_reject_params)\n    } else {\n      DBInsert(`voting_subject`, `voting_id,contract_accept,contract_reject,contract_accept_params,contract_reject_params`, $votingID, $contract_accept, $contract_reject, $contract_accept_params, $contract_reject_params)\n    }\n    \n    voting_SubjectCheckFulldata(\"votingID\", $votingID)\n  }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "voting_SubjectDocument",
            "Value": "contract voting_SubjectDocument {\n    data {\n        votingID int\n        \n        text_document string\n        \n        contract_reject string \"optional\"\n        contract_accept string \"optional\"\n        reject_params string \"optional\"\n        accept_params string \"optional\"\n    }\n\n    conditions {\n\t\t$voting_map = DBFind(\"voting_instances\").Where(\"id=? and startdate > now()\", $votingID).Row()\n\t\tif ($voting_map[\"id\"] == nil){\n\t\t\twarning \"Voting already started. Can not edit document\"\n\t\t}\t\t\n\t\tif ( (Int($voting_map[\"flag_fulldata\"]) == 1) && (Int($voting_map[\"type_voting\"]) == 2) ){\n\t\t\twarning \"This vote is a system. Change settings not allowed\"\n\t\t}\t\n\n\t\t$hash = Sha256($text_document)\n    }\n\n    action {\n\t\t$subject_id = DBFind(\"voting_subject\").Where(\"voting_id = $\", $votingID).One(\"id\")\n\t\tif ($subject_id != nil){\n\t\t\tDBUpdate(\"voting_subject\", Int($subject_id), \"text_document, text_doc_hash\", $text_document, $hash)\n\t\t} else {\n\t\t\tDBInsert(\"voting_subject\", \"text_document, text_doc_hash, voting_id\", $text_document, $hash, $votingID)\n\t\t}\n\t\n\t\tDBUpdate(\"voting_instances\", $votingID, \"optional_contract_accept,optional_contract_reject,contract_accept_params,contract_reject_params\", $contract_accept, $contract_reject, $accept_params, $reject_params)\n\t\tvoting_SubjectCheckFulldata(\"votingID\", $votingID)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "voting_SubjectFormal",
            "Value": "contract voting_SubjectFormal {\n    data {\n        votingID int\n        \n        description string\n        table_to_written string\n        row_id string\n        column_name string\n        written_value string\n        \n        contract_reject string \"optional\"\n        contract_accept string \"optional\"\n\t\t\t\treject_params string \"optional\"\n        accept_params string \"optional\"\n    }\n\n    conditions {\n\t\t$voting_map = DBFind(\"voting_instances\").Where(\"id=? and startdate > now()\", $votingID).Row()\n\t\tif ($voting_map[\"id\"] == nil){\n\t\t\twarning \"Voting already started. Can not edit document\"\n\t\t}\t\t\n\t\tif ( (Int($voting_map[\"flag_fulldata\"]) == 1) && (Int($voting_map[\"type_voting\"]) == 2) ){\n\t\t\twarning \"This vote is a system. Change settings not allowed\"\n\t\t}\n    }\n\n    action {\n\t\t$subject_id = DBFind(\"voting_subject\").Where(\"voting_id = $\", $votingID).One(\"id\")\n\t\tif ($subject_id != nil){\n\t\t\tDBUpdate(\"voting_subject\", Int($subject_id), \"formal_decision_description,formal_decision_table,formal_decision_tableid,formal_decision_column,formal_decision_colvalue\", \n\t\t\t\t$description, $table_to_written, $row_id, $column_name, $written_value)\n\t\t} else {\n\t\t\tDBInsert(\"voting_subject\", \"voting_id,formal_decision_description,formal_decision_table,formal_decision_tableid,formal_decision_column,formal_decision_colvalue\", \n\t\t\t\t$votingID, $description, $table_to_written, $row_id, $column_name, $written_value)\n\t\t}\n\n\t\tDBUpdate(\"voting_instances\", $votingID, \"optional_contract_accept,optional_contract_reject,contract_accept_params,contract_reject_params\", $contract_accept, $contract_reject,$accept_params, $reject_params)\n\t\tvoting_SubjectCheckFulldata(\"votingID\", $votingID)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "voting_SubjectSettings",
            "Value": "contract voting_SubjectSettings {\n    data {\n        votingID int\n        \n        roleID int\n        vacancies int\n        \n        contract_reject string \"optional\"\n        contract_accept string \"optional\"\n        accept_params string \"optional\"\n        reject_params string \"optional\"\n    }\n    \n    conditions {\n        if($vacancies < 1){\n            warning \"Number of vacancies can not be less than 1\"\n        }\n        \n        $voting_map = DBFind(\"voting_instances\").Where(\"id=? and startdate > now()\", $votingID).Row()\n        if($voting_map[\"id\"] == nil){\n            warning \"Voting already started. Change settings not allowed\"\n        }\n        if((Int($voting_map[\"flag_fulldata\"]) == 1) &&(Int($voting_map[\"type_voting\"]) == 2) ){\n            warning \"This vote is a system. Change settings not allowed\"\n        }\n        \n        $role_map = DBFind(\"roles_list\").Where(\"id=? and delete=0\", $roleID).Row()\n        if($role_map[\"id\"] == nil){\n            warning \"Specified role not found\"\n        }\n        // not elective or not \"Candidate for validators\"\n        // roles_types: 1. assigned_role, 2. elective_role, 3. system_role, 4. company_role\n        if !($role_map[\"role_type\"] == 2 || $role_map[\"role_type\"] == 3) {\n            warning \"The chosen role is not elective or has been removed\"\n        }\n    }\n    \n    action {\n        DBUpdate(\"voting_instances\", $votingID, \"optional_role_id,optional_role_vacancies,optional_contract_accept,optional_contract_reject,contract_accept_params,contract_reject_params\",\n        $roleID, $vacancies, $contract_accept, $contract_reject, $accept_params, $reject_params)\n        \n        voting_SubjectCheckFulldata(\"votingID\", $votingID)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "voting_RejectDecision",
            "Value": "contract voting_RejectDecision {\n    data {\n        votingID int\n    }\n\n    conditions {\n\t\t$voting_map = DBFind(\"voting_instances\").Where(\"id=$\", $votingID).Row()\n\t\tif ($voting_map[\"id\"] == nil){\n\t\t\twarning \"Voting is not found\"\n\t\t}\n\t\t\n\t\t// check the participant of the voting\n\t\t$participant_id = DBFind(\"voting_participants\").Where(\"voting_id=$ and member_id=$\", $votingID, $key_id).One(\"id\")\n\t\tif ($participant_id == nil){\n\t\t\twarning \"You are not a participant in this voting\"\n\t\t}\n    }\n\n    action {\n\t\t// if notifications have been sent, then close it\n\t\tif ( Int($voting_map[\"flag_notifics\"]) == 1 ){\n\t\t\tvar params string\n\t\t\tparams = \"notific_param=\" + Str($votingID)\t\n\t\t\t$notific_id = DBFind(\"notifications\").Where(\"recipient_id=$ and page_name=$ and page_params=$ and closed=$\", $key_id, \"voting_view\", params, 0).One(\"id\")\n\t\t\tif ($notific_id != nil){\n\t\t\t\tNotifications_Single_Close(\"notific_id\", Int($notific_id))\n\t\t\t}\n\t\t}\n\n\t\t// check the decision\n\t\tif ( Int($voting_map[\"flag_decision\"]) == 1 ){\n\t\t\twarning \"Decision was taken. Voting is now not possible\"\n\t\t} \n\t\t\n\t\t// check start-end of voting time\n\t\t$voting_start = DBFind(\"voting_instances\").Where(\"id=$ and startdate < now()\", $votingID).One(\"id\")\n\t\t$voting_end   = DBFind(\"voting_instances\").Where(\"id=$ and enddate   > now()\", $votingID).One(\"id\")\n\t\tif ($voting_start == nil){\n\t\t\twarning \"Voting has not yet begun. Try again later, please\"\n\t\t}\n\t\tif ($voting_end == nil){\n\t\t\twarning \"Voting has expired. Voting is now not possible\"\n\t\t}\n\t\t\n\t\t//-----------------------------------------------------------------------------------------------\n\n\t\t// write the result of the voting\n\t\tDBUpdate(\"voting_participants\", Int($participant_id), \"timestamp decision_date, decision\", $block_time, -1)\n\n\t\tvoting_UpdateDataForGraphs(\"votingID\", $votingID)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        }
    ],
    "data": [],
    "languages": [],
    "menus": [
        {
            "Name": "default_menu",
            "Value": "MenuGroup(Title:$voting$, Icon:\"fa fa-edit\"){\n    MenuItem(Title:$voting$, Page:voting_list, Icon:\"fa fa-edit\")\n}",
            "Conditions": "ContractAccess(\"@1EditMenu\")"
        }
    ],
    "pages": [
        {
            "Name": "voting_create",
            "Value": "Div(Class: content-wrapper){\n\n\tSetTitle($new_voting$)\n\tDiv(Class: breadcrumb){\n\t\tLinkPage($voting$, voting_list)\n\t\tSpan(/).Style(margin-right: 10px; margin-left: 10px;)\n\t\tSpan(Class: text-muted, Body: $new_voting$)\n\t}\n\n    Div(Class: row df f-valign){\n        Div(Class: col-md-3)\n        Div(Class: col-md-6){\n\t\t\n            Div(Class: panel panel-primary){\n                Div(Class: panel-heading, Body: LangRes(new_voting))\n                Form(){\n\n                    Div(Class: list-group-item){\n                        Div(Class: row df f-valign){\n                \t\t\tDiv(Class: col-md-3 mt-sm text-right){\n                                Label(For: voting_name){\n                                    Span(Body: LangRes(name))\n                                }\n                \t\t\t}\n                \t\t\tDiv(Class: col-md-9 mc-sm text-left){\n                \t\t\t    Input(Name: voting_name, Class: form-control, Type: text, Value: New voting)\n                \t\t\t}\n                        }                   \n                    }\n\n                    Div(Class: list-group-item){\n                        Div(Class: row df f-valign){\n                \t\t\tDiv(Class: col-md-3 mt-lg text-right){\n                                Label(For: description){\n                                    Span(Body: LangRes(description))\n                                }\n                            }\n                \t\t\tDiv(Class: col-md-9 mc-sm text-left){\n                \t\t\t    Input(Name: description, Class: form-control, Type: textarea, Value: no)\n                \t\t\t}\n                        }                      \n                    }\n\n                    Div(Class: list-group-item){\n                        Div(Class: row df f-valign){\n                \t\t\tDiv(Class: col-md-3 mt-sm text-right){\n                                Label(For: type_participants){\n                                    Span(Body: LangRes(participants))\n                                }\n                \t\t\t}\n                \t\t\tDiv(Class: col-md-9 mc-sm text-left){\n                                EcosysParam(Name: type_voting_participants, Source: type_voting_participants)\n                \t\t\t    Select(Name: type_participants, Source: type_voting_participants, NameColumn: name, ValueColumn: id)\n                \t\t\t}\n                        }  \n                    }\n\n                    Div(Class: list-group-item){\n                        Div(Class: row df f-valign){\n                \t\t\tDiv(Class: col-md-3 mt-sm text-right){\n                                Label(For: type_decision){\n                                    Span(Body: LangRes(decision))\n                                }\n                \t\t\t}\n                \t\t\tDiv(Class: col-md-9 mc-sm text-left){\n                                EcosysParam(Name: type_voting_decisions, Source: type_voting_decisions)\n                \t\t\t    Select(Name: type_decision, Source: type_voting_decisions, NameColumn: name, ValueColumn: id)\n                \t\t\t}\n                        }                       \n                    }\n\n                    Div(Class: list-group-item){\n                        Div(Class: row df f-valign){\n                \t\t\tDiv(Class: col-md-3 mt-sm text-right){\n                                Label(For: start_date){\n                                    Span(Body: LangRes(date_start))\n                                }\n                            }\n                \t\t\tDiv(Class: col-md-5 mc-sm text-left){\n                                Input(Name: start_date, Class: form-control, Type: date, Value: Now(\"YYYY-MM-DD\", 3 days))\n                            }\n                \t\t\tDiv(Class: col-md-4 mc-sm text-left){\n                                Input(Name: start_time, Class: form-control, Type: time, Value: Now(\"HH:MI\"))\n                            }\n                        }                       \n                    }\n\n                    Div(Class: list-group-item){\n                        Div(Class: row df f-valign){\n                \t\t\tDiv(Class: col-md-3 mt-sm text-right){\n                                Label(For: end_date){\n                                    Span(Body: LangRes(date_end))\n                                }\n                            }\n                \t\t\tDiv(Class: col-md-5 mc-sm text-left){\n                                Input(Name: end_date, Class: form-control, Type: date, Value: Now(\"YYYY-MM-DD\", 21 days))\n                            }\n                \t\t\tDiv(Class: col-md-4 mc-sm text-left){\n                                Input(Name: end_time, Class: form-control, Type: time, Value: Now(\"HH:MI\"))\n                            }\n                        }                       \n                    }\n\n                    Div(Class: list-group-item){\n                        Div(Class: row df f-valign){\n                \t\t\tDiv(Class: col-md-3 mt-sm text-right){\n                                Label(For: volume){\n                                    Span(Body: LangRes(voting_volume))\n                                }\n                            }\n                \t\t\tDiv(Class: col-md-9 mc-sm text-left){\n                                Input(Name: volume, Class: form-control, Type: number, Value: 75)\n                                P(Class: m0 text-muted, Body: $voting_volume_desc$)\n                            }\n                        }                       \n                    }\n\n                    Div(Class: list-group-item){\n                        Div(Class: row df f-valign){\n                \t\t\tDiv(Class: col-md-3 mt-sm text-right){\n                                Label(For: quorum){\n                                    Span(Body: LangRes(voting_quorum))\n                                }\n                            }\n                \t\t\tDiv(Class: col-md-9 mc-sm text-left){\n                                Input(Name: quorum, Class: form-control, Type: number, Value: 50)\n                                P(Class: m0 text-muted, Body: $voting_quorum_desc$)\n                            }\n                        }                     \n                    }\n\n                    Div(Class: panel-footer clearfix){\n                        Div(Class: pull-left){\n                            Input(Name: now_date, Class: form-control hidden, Type: text, Value: Now(\"YYYY-MM-DD HH:MI\"))\n                            Input(Name: type_voting, Class: form-control hidden, Type: text, Value: 1)\n                        }\n                        Div(Class: pull-right){\n                            Button(Body: LangRes(back), Class: btn btn-default, Page: voting_list)\n                            Button(Body: LangRes(create), Class: btn btn-primary, Page: voting_list, Contract: voting_CreateNew)\n                        }\n                    }\n\n                }\n            }\n\t\t}\n\t\tDiv(Class: col-md-3)\n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu"
        },
        {
            "Name": "voting_decision_candidates",
            "Value": "Div(Class: content-wrapper){\n\t\n    If(#vID# > 0){\n\n        DBFind(Name: voting_instances, Source: src_voting_instances).Where(\"id=#vID#\").Vars(instance)\n\n        SetTitle($subject_voting$)\n        Div(Class: breadcrumb){\n            LinkPage($voting$, voting_list)\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\n            LinkPage(#instance_name#, voting_view,, \"vID=#vID#\")\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\n            Span(Class: text-muted, Body: $subject_voting$)\n        }\n\n        Div(Class: row df f-valign){\n            Div(Class: col-md-2)\n            Div(Class: col-md-8){\n\n                Div(Class: panel panel-primary){\n                    Form(){  \n\t\t\t\t\t\n\t\t\t\t\t\tInput(Name: memberID, Class: form-control hidden, Type: text, Value: 0)\n\t\t\t\t\t\tInput(Name: votingID, Class: form-control hidden, Type: text, Value: #vID#)\n\t\t\t\t\t\n\t\t\t\t\t\tDiv(Class: list-group-item){\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\n\t\t\t\t\t\t\t\tDiv(Class: col-md-3 mt-sm text-right){\n\t\t\t\t\t\t\t\t\tLabel($candidates$)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-left){\n                                    Div(form-text text-muted, $can_apply_voting$)\n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\tDiv(Class: col-md-3 mc-sm text-right){\n                                    Button(Body: LangRes(apply), Class: btn btn-primary, Page: voting_decision_candidates, PageParams: \"vID=Val(votingID)\", Contract: voting_SubjectCandidates)\n                                } \n\t\t\t\t\t\t\t}\n                            Div(Class: row df){\n                    \t\t\tDiv(Class: col-md-3 mt-sm)\n                    \t\t\tDiv(Class: col-md-8 mt-sm text-left){\n                                    DBFind(Name: voting_subject, Source: src_voting_subject).Where(\"voting_id=#vID#\").Custom(custom_address){\n                                        Span(Address(#member_id#))\n\t                                }.Custom(custom_member){\n\t\t\t\t\t\t\t\t\t\tButton(Class: btn btn-link, Page: profile_view, PageParams: \"v_member_id=#member_id#\"){\n\t\t\t\t\t\t\t\t\t\t\tImage(Src: \"#member_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: h5 text-bold, Body: #member_name#)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n                                    Table(src_voting_subject, \"$candidates$=custom_member,$member_id$=custom_address\")\n                                }\n                    \t\t\tDiv(Class: col-md-1 mt-sm)\n                            }\n                        }\n\n                        Div(Class: list-group-item){\n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-3 mt-sm text-right){\n                                    Label(For: roleID){\n                                        Span(Body: LangRes(role))\n                                    }\n                                }\n                                Div(Class: col-md-9 mb-sm text-left){\n                                    DBFind(Name: roles_list, Source: source_roles).Where(\"role_type=2 and delete=0\")\n                                    Select(Name: roleID, Source: source_roles, NameColumn: role_name, ValueColumn: id, Value: #instance_optional_role_id#)\n                                } \n                            }\n\n                            Div(row df f-valign){\n                                Div(Class: col-md-3 mt-sm text-right){\n                                    Label(For: vacancies){\n                                        Span(Body: LangRes(vacancies))\n                                    }\n                                }\n                    \t\t\tDiv(Class: col-md-9 mc-sm text-left){\n                    \t\t\t    Input(Name: vacancies, Class: form-control, Type: Number, Value: #instance_optional_role_vacancies#)\n                                }\n                            }                    \n                        }\n\n                        Div(Class: list-group-item){\n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-3 mt-sm text-right){\n                                    Label(For: contract_accept){\n                                        Span(Body: LangRes(contract_accept))\n                                    }\n                                    P(Class: m0 text-muted, Body: $optional$)\n                                }\n                                Div(Class: col-md-9 mc-sm text-left){\n                                    Input(Name: contract_accept, Class: form-control, Type: text, Value: #instance_optional_contract_accept#)\n                                    P(Class: text-muted, Body: $contract_accept_des$)\n                                }\n                            }                     \n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-3 mt-sm text-right){\n                                    Label(For: contract_reject){\n                                        Span(Body: LangRes(contract_reject))\n                                    }\n                                    P(Class: m0 text-muted, Body: $optional$)\n                                }\n                                Div(Class: col-md-9 mc-sm text-left){\n                                    Input(Name: contract_reject, Class: form-control, Type: text, Value: #instance_optional_contract_reject#)\n                                    P(Class: m0 text-muted, Body: $contract_reject_des$)\n                                }\n                            }                     \n                        }\n\n                        Div(Class: panel-footer clearfix){\n                            Div(Class: pull-right){\n                                Button(Body: LangRes(back), Class: btn btn-default, Page: voting_view, PageParams: \"vID=#vID#\")\n                                Button(Body: LangRes(save), Class: btn btn-primary, Page: voting_view, PageParams: \"vID=#vID#\", Contract: voting_SubjectSettings)\n                            }\n                        }\n                    }\n                }\n            }\n            Div(Class: col-md-2)\n        }\n        \n    }.Else{\n\n        Div(Class: md-12 alert alert-danger text-center){\n            Span(Body: LangRes(attention))\n        }\n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu"
        },
        {
            "Name": "voting_decision_contract",
            "Value": "Div(Class: content-wrapper){\n    \n    If(#vID# > 0){\n        \n        DBFind(Name: voting_instances, Source: src_voting_instances).Where(\"id=#vID#\").Vars(instance)\n        DBFind(Name: voting_subject, Source: src_voting_subject).Where(\"voting_id=#vID#\").Vars(subject)\n        \n        If(#subject_id#>0){\n        }.Else{\n            SetVar(Name: subject_contract_accept, Value: \"\")\n            SetVar(Name: subject_contract_reject, Value: \"\")\n        }\n        \n        SetTitle($subject_voting$)\n        Div(Class: breadcrumb){\n            LinkPage($voting$, voting_list)\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\n            LinkPage(#instance_name#, voting_view,, \"vID=#vID#\")\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\n            Span(Class: text-muted, Body: $subject_voting$)\n        }\n        \n        Div(Class: row df f-valign){\n            Div(Class: col-md-2)\n            Div(Class: col-md-8){\n                \n                Div(Class: panel panel-primary){\n                    Form(){\n                        \n                        Input(Name: votingID, Class: form-control hidden, Type: text, Value: #vID#)\n                        \n                        Div(Class: list-group-item){\n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-3 mt-sm text-right){\n                                    Label(For: contract_accept){\n                                        Span(Body: LangRes(contract_accept))\n                                    }\n                                }\n                                Div(Class: col-md-9 mc-sm text-left){\n                                    Input(Name: contract_accept, Class: form-control, Type: text, Value: #subject_contract_accept#)\n                                    P(Class: text-muted, Body: $contract_accept_des$)\n                                }\n                            }\n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-3 mt-sm text-right){\n                                    Label(For: contract_reject){\n                                        Span(Body: LangRes(contract_reject))\n                                    }\n                                }\n                                Div(Class: col-md-9 mc-sm text-left){\n                                    Input(Name: contract_reject, Class: form-control, Type: text, Value: #subject_contract_reject#)\n                                    P(Class: m0 text-muted, Body: $contract_reject_des$)\n                                }\n                            }\n                        }\n                        \n                        Div(Class: panel-footer clearfix){\n                            Div(Class: pull-right){\n                                Button(Body: LangRes(back), Class: btn btn-default, Page: voting_view, PageParams: \"vID=#vID#\")\n                                Button(Body: LangRes(save), Class: btn btn-primary, Page: voting_view, PageParams: \"vID=#vID#\", Contract: voting_SubjectContract)\n                            }\n                        }\n                    }\n                }\n            }\n            Div(Class: col-md-2)\n        }\n        \n    }.Else{\n        \n        Div(Class: md-12 alert alert-danger text-center){\n            Span(Body: LangRes(attention))\n        }\n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu"
        },
        {
            "Name": "voting_decision_document",
            "Value": "Div(Class: content-wrapper){\n\t\n    If(#vID# > 0){\n\n        DBFind(Name: voting_instances, Source: src_voting_instances).Where(\"id=#vID#\").Vars(instance)\n        DBFind(Name: voting_subject, Source: src_voting_subject).Where(\"voting_id=#vID#\").Vars(subject)\n\t\t\n\t\tIf(#subject_id#>0){\n\t\t}.Else{\n\t\t\tSetVar(Name: subject_text_document, Value: \"\")\n\t\t}\n\n        SetTitle($subject_voting$)\n        Div(Class: breadcrumb){\n            LinkPage($voting$, voting_list)\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\n            LinkPage(#instance_name#, voting_view,, \"vID=#vID#\")\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\n            Span(Class: text-muted, Body: $subject_voting$)\n        }\n\n        Div(Class: row df f-valign){\n            Div(Class: col-md-2)\n            Div(Class: col-md-8){\n\n                Div(Class: panel panel-primary){\n                    Form(){  \n\n                        Input(Name: votingID, Class: form-control hidden, Type: text, Value: #vID#)\n\n\t\t\t\t\t\tDiv(Class: list-group-item){\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\n\t\t\t\t\t\t\t\tDiv(Class: col-md-12 mt-sm){\n                                    P(Class: m0 text-muted, Body: $text_document$)\n                                    Input(Name: text_document, Class: form-control, Type: textarea, Value: #subject_text_document#)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n                        }\n\n                        Div(Class: list-group-item){\n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-3 mt-sm text-right){\n                                    Label(For: contract_accept){\n                                        Span(Body: LangRes(contract_accept))\n                                    }\n                                    P(Class: m0 text-muted, Body: $optional$)\n                                }\n                                Div(Class: col-md-9 mc-sm text-left){\n                                    Input(Name: contract_accept, Class: form-control, Type: text, Value: #instance_optional_contract_accept#)\n                                    P(Class: text-muted, Body: $contract_accept_des$)\n                                }\n                            }                     \n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-3 mt-sm text-right){\n                                    Label(For: contract_reject){\n                                        Span(Body: LangRes(contract_reject))\n                                    }\n                                    P(Class: m0 text-muted, Body: $optional$)\n                                }\n                                Div(Class: col-md-9 mc-sm text-left){\n                                    Input(Name: contract_reject, Class: form-control, Type: text, Value: #instance_optional_contract_reject#)\n                                    P(Class: m0 text-muted, Body: $contract_reject_des$)\n                                }\n                            }                     \n                        }\n\n                        Div(Class: panel-footer clearfix){\n                            Div(Class: pull-right){\n                                Button(Body: LangRes(back), Class: btn btn-default, Page: voting_view, PageParams: \"vID=#vID#\")\n                                Button(Body: LangRes(save), Class: btn btn-primary, Page: voting_view, PageParams: \"vID=#vID#\", Contract: voting_SubjectDocument)\n                            }\n                        }\n                    }\n                }\n            }\n            Div(Class: col-md-2)\n        }\n        \n    }.Else{\n\n        Div(Class: md-12 alert alert-danger text-center){\n            Span(Body: LangRes(attention))\n        }\n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu"
        },
        {
            "Name": "voting_decision_election",
            "Value": "Div(Class: content-wrapper){\n\t\n    If(#vID# > 0){\n\n        DBFind(Name: voting_instances, Source: src_voting_instances).Where(\"id=#vID#\").Vars(instance)\n\n        SetTitle($subject_voting$)\n        Div(Class: breadcrumb){\n            LinkPage($voting$, voting_list)\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\n            LinkPage(#instance_name#, voting_view,, \"vID=#vID#\")\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\n            Span(Class: text-muted, Body: $subject_voting$)\n        }\n\n        Div(Class: row df f-valign){\n            Div(Class: col-md-2)\n            Div(Class: col-md-8){\n\n                Div(Class: panel panel-primary){\n                    Form(){  \n\n\t\t\t\t\t\tInput(Name: votingID, Class: form-control hidden, Type: text, Value: #vID#)\n\t\t\t\t\t\n\t\t\t\t\t\tDiv(Class: list-group-item){\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\n\t\t\t\t\t\t\t\tDiv(Class: col-md-3 mt-sm text-right){\n\t\t\t\t\t\t\t\t\tLabel($candidates$)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tDiv(Class: col-md-9 mc-sm text-left){\n                                    Div(Class: input-group){\n                                        DBFind(Name: members, Source: source_members).Custom(custom_username){\n                                            #member_name# ( Address(#id#) ) \n                                        }\n                                        Select(Name: memberID, Source: source_members, NameColumn: custom_username, ValueColumn: id)\n                                        Div(Class: input-group-btn){\n                                            Button(Body: LangRes(add), Class: btn btn-default, Page: voting_decision_election, PageParams: \"vID=Val(votingID)\", Contract: voting_SubjectCandidates)\n                                        }\n                                    }\n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t}\n                            Div(Class: row df){\n                    \t\t\tDiv(Class: col-md-3 mt-sm)\n                    \t\t\tDiv(Class: col-md-8 mt-sm text-left){\n                                    DBFind(Name: voting_subject, Source: src_voting_subject).Where(\"voting_id=#vID#\").Custom(custom_address){\n                                        Span(Address(#member_id#))\n\t                                }.Custom(custom_member){\n\t\t\t\t\t\t\t\t\t\tButton(Class: btn btn-link, Page: profile_view, PageParams: \"v_member_id=#member_id#\"){\n\t\t\t\t\t\t\t\t\t\t\tImage(Src: \"#member_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\n                                            Span(Class: h5 text-bold, Body: #member_name#)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n                                    Table(src_voting_subject, \"$candidates$=custom_member,$member_id$=custom_address\")\n                                }\n                    \t\t\tDiv(Class: col-md-1 mt-sm)\n                            }\n                        }\n\n\n                        Div(Class: list-group-item){\n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-3 mt-sm text-right){\n                                    Label(For: roleID){\n                                        Span(Body: LangRes(role))\n                                    }\n                                }\n                                Div(Class: col-md-9 mb-sm text-left){\n                                    DBFind(Name: roles_list, Source: source_roles).Where(\"role_type=2 and delete=0\")\n                                    Select(Name: roleID, Source: source_roles, NameColumn: role_name, ValueColumn: id, Value: #instance_optional_role_id#)\n                                } \n                            }\n\n                            Div(row df f-valign){\n                                Div(Class: col-md-3 mt-sm text-right){\n                                    Label(For: vacancies){\n                                        Span(Body: LangRes(vacancies))\n                                    }\n                                }\n                    \t\t\tDiv(Class: col-md-9 mc-sm text-left){\n                    \t\t\t    Input(Name: vacancies, Class: form-control, Type: Number, Value: #instance_optional_role_vacancies#)\n                                }\n                            }                    \n                        }\n\n                        Div(Class: list-group-item){\n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-3 mt-sm text-right){\n                                    Label(For: contract_accept){\n                                        Span(Body: LangRes(contract_accept))\n                                    }\n                                    P(Class: m0 text-muted, Body: $optional$)\n                                }\n                                Div(Class: col-md-9 mc-sm text-left){\n                                    Input(Name: contract_accept, Class: form-control, Type: text, Value: #instance_optional_contract_accept#)\n                                    P(Class: text-muted, Body: $contract_accept_des$)\n                                }\n                            }                     \n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-3 mt-sm text-right){\n                                    Label(For: contract_reject){\n                                        Span(Body: LangRes(contract_reject))\n                                    }\n                                    P(Class: m0 text-muted, Body: $optional$)\n                                }\n                                Div(Class: col-md-9 mc-sm text-left){\n                                    Input(Name: contract_reject, Class: form-control, Type: text, Value: #instance_optional_contract_reject#)\n                                    P(Class: m0 text-muted, Body: $contract_reject_des$)\n                                }\n                            }                     \n                        }\n\n                        Div(Class: panel-footer clearfix){\n                            Div(Class: pull-right){\n                                Button(Body: LangRes(back), Class: btn btn-default, Page: voting_view, PageParams: \"vID=#vID#\")\n                                Button(Body: LangRes(save), Class: btn btn-primary, Page: voting_view, PageParams: \"vID=#vID#\", Contract: voting_SubjectSettings)\n                            }\n                        }\n                    }\n                }\n            }\n            Div(Class: col-md-2)\n        }\n        \n    }.Else{\n\n        Div(Class: md-12 alert alert-danger text-center){\n            Span(Body: LangRes(attention))\n        }\n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu"
        },
        {
            "Name": "voting_decision_formal",
            "Value": "Div(Class: content-wrapper){\n\t\n    If(#vID# > 0){\n\n        DBFind(Name: voting_instances, Source: src_voting_instances).Where(\"id=#vID#\").Vars(instance)\n\t\tDBFind(Name: voting_subject, Source: src_voting_subject).Where(\"voting_id=#vID#\").Vars(subject)\n\n\t\tIf(#subject_id#>0){\n\t\t}.Else{\n\t\t\tSetVar(Name: subject_formal_decision_description, Value: \"\")\n\t\t\tSetVar(Name: subject_formal_decision_table, Value: \"\")\n\t\t\tSetVar(Name: subject_formal_decision_tableid, Value: \"\")\n\t\t\tSetVar(Name: subject_formal_decision_column, Value: \"\")\n\t\t\tSetVar(Name: subject_formal_decision_colvalue, Value: \"\")\n\t\t}\n\t\t\n        SetTitle($subject_voting$)\n        Div(Class: breadcrumb){\n            LinkPage($voting$, voting_list)\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\n            LinkPage(#instance_name#, voting_view,, \"vID=#vID#\")\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\n            Span(Class: text-muted, Body: $subject_voting$)\n        }\n\n        Div(Class: row df f-valign){\n            Div(Class: col-md-2)\n            Div(Class: col-md-8){\n\n                Div(Class: panel panel-primary){\n                    Form(){  \n\n                        Input(Name: votingID, Class: form-control hidden, Type: text, Value: #vID#)\n                    \n\t\t\t\t\t\tDiv(Class: list-group-item){\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\n\t\t\t\t\t\t\t\tDiv(Class: col-md-3 mt-lg text-right){\n\t\t\t\t\t\t\t\t\tLabel(For: description){\n\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(description))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tDiv(Class: col-md-9 mc-sm text-left){\n\t\t\t\t\t\t\t\t\tInput(Name: description, Class: form-control, Type: textarea, Value: #subject_formal_decision_description#)\n                                    P(Class: m0 text-muted, Body: $description_desc$)\n                                }\n\t\t\t\t\t\t\t}                      \n\t\t\t\t\t\t}\n\n                        Div(Class: list-group-item){\n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-3 mt-sm text-right){\n                                    Label(For: table_to_written){\n                                        Span(Body: LangRes(table_to_written))\n                                    }\n                                }\n                                Div(Class: col-md-9 mc-sm text-left){\n                                    Input(Name: table_to_written, Class: form-control, Type: text, Value: #subject_formal_decision_table#)\n                                    P(Class: text-muted, Body: $table_to_written_desc$)\n                                }\n                            }                     \n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-3 mt-sm text-right){\n                                    Label(For: row_id){\n                                        Span(Body: LangRes(row_id))\n                                    }\n                                }\n                                Div(Class: col-md-9 mc-sm text-left){\n                                    Input(Name: row_id, Class: form-control, Type: text, Value: #subject_formal_decision_tableid#)\n                                    P(Class: text-muted, Body: $row_id_desc$)\n                                }\n                            }  \n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-3 mt-sm text-right){\n                                    Label(For: column_name){\n                                        Span(Body: LangRes(column_name))\n                                    }\n                                }\n                                Div(Class: col-md-9 mc-sm text-left){\n                                    Input(Name: column_name, Class: form-control, Type: text, Value: #subject_formal_decision_column#)\n                                    P(Class: m0 text-muted, Body: $column_name_desc$)\n                                }\n                            }                   \n                        }\n\n                        Div(Class: list-group-item){\n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-3 mt-sm text-right){\n                                    Label(For: written_value){\n                                        Span(Body: LangRes(written_value))\n                                    }\n                                }\n                                Div(Class: col-md-9 mc-sm text-left){\n                                    Input(Name: written_value, Class: form-control, Type: text, Value: #subject_formal_decision_colvalue#)\n                                    P(Class: m0 text-muted, Body: $written_value_desc$)\n                                }\n                            }                                        \n                        }\n\n\n                        Div(Class: list-group-item){\n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-3 mt-sm text-right){\n                                    Label(For: contract_accept){\n                                        Span(Body: LangRes(contract_accept))\n                                    }\n                                    P(Class: m0 text-muted, Body: $optional$)\n                                }\n                                Div(Class: col-md-9 mc-sm text-left){\n                                    Input(Name: contract_accept, Class: form-control, Type: text, Value: #instance_optional_contract_accept#)\n                                    P(Class: text-muted, Body: $contract_accept_des$)\n                                }\n                            }                     \n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-3 mt-sm text-right){\n                                    Label(For: contract_reject){\n                                        Span(Body: LangRes(contract_reject))\n                                    }\n                                    P(Class: m0 text-muted, Body: $optional$)\n                                }\n                                Div(Class: col-md-9 mc-sm text-left){\n                                    Input(Name: contract_reject, Class: form-control, Type: text, Value: #instance_optional_contract_reject#)\n                                    P(Class: m0 text-muted, Body: $contract_reject_des$)\n                                }\n                            }                     \n                        }\n\n                        Div(Class: panel-footer clearfix){\n                            Div(Class: pull-right){\n                                Button(Body: LangRes(back), Class: btn btn-default, Page: voting_view, PageParams: \"vID=#vID#\")\n                                Button(Body: LangRes(save), Class: btn btn-primary, Page: voting_view, PageParams: \"vID=#vID#\", Contract: voting_SubjectFormal)\n                            }\n                        }\n                    }\n                }\n            }\n            Div(Class: col-md-2)\n        }\n        \n    }.Else{\n\n        Div(Class: md-12 alert alert-danger text-center){\n            Span(Body: LangRes(attention))\n        }\n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu"
        },
        {
            "Name": "voting_invite",
            "Value": "Div(Class: content-wrapper){\n\t\n    If(#vID# > 0){\n\n        DBFind(Name: voting_instances, Source: src_voting_instances).Where(\"id=#vID#\").Vars(instance)\n\t\t\n        SetTitle($participants$)\n        Div(Class: breadcrumb){\n            LinkPage($voting$, voting_list)\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\n            LinkPage(#instance_name#, voting_view,, \"vID=#vID#\")\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\n            Span(Class: text-muted, Body: $participants$)\n        }\n\n        Div(Class: row df f-valign){\n            Div(Class: col-md-2)\n            Div(Class: col-md-8){\n\t\t\t\n                Div(Class: panel panel-primary){\n\t\t\t\t\tDiv(Class: panel-heading, Body: LangRes(participants))\n                    Form(){\n\t\t\t\t\t\n                        Input(Name: votingID, Class: form-control hidden, Type: text, Value: #vID#)\n\n\t\t\t\t\t\tDiv(Class: list-group-item){\n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-12){\n                                    DBFind(Name: voting_participants, Source: src_voting_participants).Where(\"voting_id=#vID#\").Custom(custom_id){\n                                        Span(Body:  #id#)\n                                    }.Custom(custom_member){\n                                        Button(Class: btn btn-link, Page: profile_view, PageParams: \"v_member_id=#member_id#\"){\n                                            Image(Src: \"#member_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\n                                            Span(Class: h5 text-bold, Body: #member_name#)\n                                        }\n                                    }\n                                    Table(src_voting_participants, \"$id$=custom_id,$member_name$=custom_member\")\n                                }\n                            }\n\n                            If(#instance_typeparticipants# == 1){\n                                Div(Class: row df f-valign){\n                                    Div(Class: col-md-12){\n                                    }\n                                }\n                            }\n\n                            If(#instance_typeparticipants# == 2){\n                                Div(Class: row df f-valign){\n                                    Div(Class: col-md-12){\n                                        Span(Class: text-muted, Body: LangRes(select_member))\n                                        DBFind(Name: members, Source: source_members).Custom(custom_username){\n                                            #member_name# ( Address(#id#) )\n                                        }\n                                        Select(Name: var_id, Source: source_members, NameColumn: custom_username, ValueColumn: id)\n                                    }\n                                }\n                            }\n                        \n                            If(#instance_typeparticipants# == 3){\n                                Div(Class: row df f-valign){\n                                    Div(Class: col-md-12){\n                                        Span(Class: text-muted, Body: LangRes(select_role))\n                                        DBFind(Name: roles_list, Source: source_roles).Where(\"delete=0\")\n                                        Select(Name: var_id, Source: source_roles, NameColumn: role_name, ValueColumn: id)\n                                    }\n                                }\n                            }\n\n                        }\n\n                        Div(Class: panel-footer clearfix){\n                            Div(Class: pull-right){\n                                Button(Body: LangRes(back), Class: btn btn-default, Page: voting_view, PageParams: \"vID=#vID#\")\n                                If(#instance_typeparticipants# == 2){\n                                    Button(Body: LangRes(add_member), Class: btn btn-primary, Page: voting_view, PageParams: \"vID=#vID#\", Contract: voting_Invite)\n                                }\n                                If(#instance_typeparticipants# == 3){\n                                    Button(Body: LangRes(add_role), Class: btn btn-primary, Page: voting_view, PageParams: \"vID=#vID#\", Contract: voting_Invite)\n                                }\n                            }\n                        }\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n            }\n            Div(Class: col-md-2)\n        }\n        \n    }.Else{\n\n        Div(Class: md-12 alert alert-danger text-center){\n            Span(Body: LangRes(attention))\n        }\n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu"
        },
        {
            "Name": "voting_list",
            "Value": "Div(Class: content-wrapper){\n    \n    SetTitle($voting$)\n    Div(breadcrumb){\n        Span(Class: text-muted, Body: $voting$)\n    }\n    \n    If(GetVar(isSearch) == 1){\n        SetVar(Name: v_Where, Value: \"name='#v_Search#' and delete = 0\")\n    }.Else{\n        SetVar(Name: v_Where, Value: \"delete=0\")\n        SetVar(Name: v_Search, Value: \"\")\n    }\n    \n    DBFind(Name: voting_instances, Source: src_voting_instances).Custom(custom_id){\n        Span(Class: h5, Body: #id#)\n        SetVar(Name: vDateNow, Value: Now(\"YYYY-MM-DD HH:MI\"))\n        SetVar(Name: vStartDate, Value: DateTime(DateTime: #startdate#, Format: \"YYYY-MM-DD HH:MI\"))\n        SetVar(Name: vEndDate, Value: DateTime(#enddate#, \"YYYY-MM-DD HH:MI\"))\n        SetVar(Name: vCmpStartDate, Value: CmpTime(#vStartDate#,#vDateNow#))\n        SetVar(Name: vCmpEndDate, Value: CmpTime(#vEndDate#,#vDateNow#))\n    }.Custom(custom_name){\n        LinkPage(Page: voting_view, PageParams: \"vID=#id#\"){\n            Span(Class: h5 text-bold, Body: #name#)\n        }\n    }.Custom(custom_subject){\n        If(Or(#vCmpStartDate#<=0,#type_voting#==2)){\n            Span(Class: h6, Body: EcosysParam(Name: type_voting_decisions, Index: #typedecision#))\n        }.Else{\n            If(#typedecision# == 1){\n                LinkPage(Page: voting_decision_candidates, PageParams: \"vID=#id#\"){\n                    Span(Class: h6 text-bold, Body: EcosysParam(Name: type_voting_decisions, Index: #typedecision#))\n                }\n            }\n            If(#typedecision# == 2){\n                LinkPage(Page: voting_decision_election, PageParams: \"vID=#id#\"){\n                    Span(Class: h6 text-bold, Body: EcosysParam(Name: type_voting_decisions, Index: #typedecision#))\n                }\n            }\n            If(#typedecision# == 3){\n                LinkPage(Page: voting_decision_document, PageParams: \"vID=#id#\"){\n                    Span(Class: h6 text-bold, Body: EcosysParam(Name: type_voting_decisions, Index: #typedecision#))\n                }\n            }\n            If(#typedecision# == 4){\n                LinkPage(Page: voting_decision_formal, PageParams: \"vID=#id#\"){\n                    Span(Class: h6 text-bold, Body: EcosysParam(Name: type_voting_decisions, Index: #typedecision#))\n                }\n            }\n            If(#typedecision# == 5){\n                LinkPage(Page: voting_decision_contract, PageParams: \"vID=#id#\"){\n                    Span(Class: h6 text-bold, Body: EcosysParam(Name: type_voting_decisions, Index: #typedecision#))\n                }\n            }\n        }\n    }.Custom(custom_participants){\n        If(Or(#vCmpStartDate#<=0,#type_voting#==2)){\n            Span(Class: h6, Body: EcosysParam(Name: type_voting_participants, Index: #typeparticipants#))\n        }.Else{\n            LinkPage(Page: voting_invite, PageParams: \"vID=#id#\"){\n                Span(Class: h6 text-bold, Body: EcosysParam(Name: type_voting_participants, Index: #typeparticipants#))\n            }\n        }\n    }.Custom(custom_notifics){\n        If(#flag_notifics# == 1){\n            Div(Class: text-center text-bold, Body: LangRes(yes))\n        }.Else{\n            If(And(#flag_success#!=1,#vCmpEndDate#>0,#vCmpStartDate#<0,#creator_id#==#key_id#)){\n                Div(Class: text-center, Body: Button(Body: LangRes(send), Class: btn btn-primary, Contract: voting_SendNotifics, Params: \"votingID=#id#\", Page: voting_list))\n            }.Else{\n                Div(Class: text-center text-bold, Body: LangRes(no))\n            }\n        }\n    }.Custom(custom_creator){\n        LinkPage(Page: profile_view, PageParams: \"v_member_id=#creator_id#\"){\n            Image(Src: \"#creator_avatar#\", Class: img-circle).Style(width: 30px; border: 1px solid #5A5D63; margin-right: 10px;)\n            Span(Class: h5 text-bold, Body: #creator_name#)\n        }\n    }.Custom(custom_date){\n        If(#vCmpStartDate# < 0){\n            Div(Class: text-muted, Body: DateTime(DateTime: #startdate#, Format: \"DD.MM.YYYY HH:MI\"))\n        }.Else{\n            Div(Class: text-bold, Body: DateTime(DateTime: #startdate#, Format: \"DD.MM.YYYY HH:MI\"))\n        }\n        If(#vCmpEndDate# < 0){\n            Div(Class: text-muted, Body: DateTime(DateTime: #enddate#, Format: \"DD.MM.YYYY HH:MI\"))\n        }.Else{\n            Div(Class: text-bold, Body: DateTime(DateTime: #enddate#, Format: \"DD.MM.YYYY HH:MI\"))\n        }\n    }.Custom(custom_type){\n        Span(Class: h6, Body: EcosysParam(Name: type_voting, Index: #type_voting#))\n    }.Custom(custom_progress){\n        Div(Class: text-center h5 text-bold, Body: #percent_success# %)\n    }.Custom(custom_decision){\n        If(#flag_decision# == 0){\n            If(And(#vCmpEndDate#<0,#creator_id#==#key_id#)){\n                Div(Class: text-center, Body: Button(Body: LangRes(decision), Class: btn btn-primary, Contract: voting_CheckDecision, Params: \"votingID=#id#\", Page: voting_list))\n            }.Else{\n                Div(Class: text-muted text-center, Body: LangRes(no))\n            }\n        }\n        If(#flag_decision# == -2){\n            Div(Class: text-muted text-center, Body: LangRes(not_enough_votes))\n        }\n        If(#flag_decision# == 1){\n            Div(Class: text-success text-center, Body: LangRes(accepted))\n        }\n        If(#flag_decision# == -1){\n            Div(Class: text-danger text-center, Body: LangRes(rejected))\n        }\n    }.Custom(custom_status){\n        If(#flag_success# == 1){\n            Div(Class: text-success text-center, Body: LangRes(success))\n        }.Else{\n            If(#vCmpEndDate# < 0){\n                Div(Class: text-muted text-center, Body: LangRes(finished))\n            }.Else{\n                If(#vCmpStartDate# < 0){\n                    Div(Class: text-center){\n                        Button(Class: btn btn-link, Page: voting_view, PageParams: \"vID=#id#\"){\n                            Span(Class: h4, Body: Em(Class: fa icon-eye))\n                        }\n                    }\n                }.Else{\n                    Div(Class: text-warning text-center, Body: LangRes(waiting))\n                }\n            }\n        }\n    }.Custom(actions){\n        Div(Class: text-center, Body: Button(Body: Em(Class: fa fa-close), Class: btn btn-danger, Contract: voting_Delete, Params: \"votingID=#id#\", Page: voting_list))\n    }.Where(#v_Where#).Order(id desc)\n    \n    Div(Class: panel panel-primary){\n        Form(){\n            Div(Class: list-group-item){\n                Div(Class: row df f-valign){\n                    Div(Class: col-md-1 mt-sm text-right){\n                        Label(For: Search){\n                            Span(Body: LangRes(name))\n                        }\n                    }\n                    Div(Class: col-md-11 mc-sm){\n                        Div(Class: input-group){\n                            Input(Class: form-control, Type: text, Name: Search, Value: #v_Search#)\n                            Div(Class: input-group-btn){\n                                Button(Body: Em(Class: fa fa-search), Class: btn btn-default, Page: voting_list, PageParams: \"isSearch=1,v_Search=Val(Search)\")\n                            }\n                        }\n                    }\n                }\n            }\n            \n            Div(Class: list-group-item){\n                Table(src_voting_instances, \"$id$=custom_id,$name$=custom_name,$type$=custom_type,$subject_voting$=custom_subject,$participants$=custom_participants,$date_start$ / $date_end$=custom_date,$creator$=custom_creator,$notifications$=custom_notifics,$progress$=custom_progress,$decision$=custom_decision,$status$=custom_status,$actions$=actions\")\n                If(GetVar(isSearch) == 1){\n                    Div(Class: text-center){\n                        Button(Body: $view_all$, Class: btn btn-primary, Page: voting_list, PageParams: \"isSearch=0\")\n                    }\n                }\n            }\n            \n            Div(Class: panel-footer clearfix){\n                Div(Class: pull-right){\n                    Button(Body: LangRes(create), Class: btn btn-primary, Page: voting_create)\n                }\n            }\n            \n        }\n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu"
        },
        {
            "Name": "voting_view",
            "Value": "Div(Class: content-wrapper){\n\tIf(#notific_type#==1){\n\t\tSetVar(Name: vID, Value: #notific_param#)\n\t}\n\n    If(#vID# > 0){\n\n        DBFind(Name: voting_instances, Source: src_one).Where(\"id=#vID#\").Vars(instance)\n        \n        SetTitle(#instance_name#)\n        Div(Class: breadcrumb){\n            LinkPage($voting$, voting_list)\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\n            Span(Class: text-muted, Body: #instance_name#)\n        }\n\n\t\tSetVar(Name: vDateNow, Value: Now(\"YYYY-MM-DD HH:MI\")) \n\t\tSetVar(Name: vStartDate, Value: DateTime(DateTime: #instance_startdate#, Format: \"YYYY-MM-DD HH:MI\"))\n\t\tSetVar(Name: vEndDate, Value: DateTime(#instance_enddate#, \"YYYY-MM-DD HH:MI\")) \n\t\tSetVar(Name: vCmpStartDate, Value: CmpTime(#vStartDate#,#vDateNow#)) \n\t\tSetVar(Name: vCmpEndDate, Value: CmpTime(#vEndDate#,#vDateNow#))\n\n\t\tDBFind(Name: voting_participants, Source: src_two).Where(\"voting_id=#vID# and member_id=#key_id# and decision=0\").Vars(participant)\n        If(And(#instance_flag_fulldata#==1,#participant_id#>0,#instance_flag_decision#==0,#vCmpStartDate#<0,#vCmpEndDate#>0)){\n            SetVar(Name: vOpportunityVote, Value: 1)\n        }.Else{\n            SetVar(Name: vOpportunityVote, Value: 0)\n        }\n\n        Div(Class: row df f-valign){\n            Div(Class: col-md-2)\n            Div(Class: col-md-8){\n\n                Div(Class: panel panel-default){\n                    Form(){ \n\n\t\t\t\t\t\tInput(Class: form-control hidden, Type: text, Name: votingID, Value: #vID#)\t\t\t\t\t\n\t\t\t\t\t\n                        Div(Class: list-group-item text-center){\n                            P(Class: h3 text-bold m0, Body: #instance_name#)\n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-12 mt-sm){\n\t\t\t\t\t\t\t\t\tP(Class: h5 text-muted m0, Body: EcosysParam(Name: type_voting_decisions, Index: #instance_typedecision#))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-6 mc-sm text-right){\n                                    P(Class: h5 text-muted m0, Body: LangRes(description))\n                                }\n                                Div(Class: col-md-6 mc-sm text-left){\n\t\t\t\t\t\t\t\t\tP(Class: h5 text-muted m0, Body: #instance_description#)\n                                }\n                            }\n                        }\n\t\t\t\t\t\t\n                        Div(Class: list-group-item text-center){\n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-6 mt-sm text-right){\n                                    P(Class: h4 text-normal m0, Body: LangRes(type))\n                                }\n                                Div(Class: col-md-6 mt-sm text-left){\n\t\t\t\t\t\t\t\t\tP(Class: h4 text-normal m0, Body: EcosysParam(Name: type_voting, Index: #instance_type_voting#))\n                                }\n                            }\n\t\t\t\t\t\t\tIf(Or(#instance_typedecision#==1,#instance_typedecision#==2,#instance_typedecision#==3,#instance_typedecision#==4)){\n\t\t\t\t\t\t\t\tDiv(Class: row df f-valign){\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-right){\n\t\t\t\t\t\t\t\t\t\tP(Class: h4 text-normal m0, Body: LangRes(contract_accept))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-left){\n\t\t\t\t\t\t\t\t\t\tIf(#instance_optional_contract_accept# == NULL){\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h4 text-muted m0, Body: LangRes(optional))\n\t\t\t\t\t\t\t\t\t\t}.Else{\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h4 text-normal m0, Body: #instance_optional_contract_accept#)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tDiv(Class: row df f-valign){\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-right){\n\t\t\t\t\t\t\t\t\t\tP(Class: h4 text-normal m0, Body: LangRes(contract_reject))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-left){\n\t\t\t\t\t\t\t\t\t\tIf(#instance_optional_contract_reject# == NULL){\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h4 text-muted m0, Body: LangRes(optional))\n\t\t\t\t\t\t\t\t\t\t}.Else{\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h4 text-normal m0, Body: #instance_optional_contract_reject#)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-6 mc-sm text-right){\n                                    P(Class: h4 text-normal m0, Body: LangRes(filled))\n                                }\n                                Div(Class: col-md-6 mc-sm text-left){\n                                    If(#instance_flag_fulldata# == 1){\n                                        P(Class: h4 text-success m0, Body: LangRes(yes))\n                                    }.Else{\n                                        P(Class: h4 text-danger m0, Body: LangRes(no))\n                                    } \n                                }\n                            }\n                            If(Or(#instance_typedecision#==1,#instance_typedecision#==2)){\n                                Div(Class: row df f-valign){\n                                    Div(Class: col-md-6 mt-sm text-right){\n                                        P(Class: h5 text-normal m0){\n\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(role))\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\n\t\t\t\t\t\t\t\t\t\t}\n                                    }\n                                    Div(Class: col-md-6 mt-sm text-left){\n\t\t\t\t\t\t\t\t\t\tIf(#instance_optional_role_id# > 0){\n\t\t\t\t\t\t\t\t\t\t\tDBFind(Name: roles_list, Source: src_roles_list).Where(\"id=#instance_optional_role_id#\").Vars(roles)\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #roles_role_name# (LangRes(id): #instance_optional_role_id#))\n\t\t\t\t\t\t\t\t\t\t}.Else{\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: LangRes(empty))\n\t\t\t\t\t\t\t\t\t\t}\n                                    }\n                                }\n                                Div(Class: row df f-valign){\n                                    Div(Class: col-md-6 mc-sm text-right){\n                                        P(Class: h5 text-normal m0){\n\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(vacancies))\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\n\t\t\t\t\t\t\t\t\t\t}\n                                    }\n                                    Div(Class: col-md-6 mc-sm text-left){\n\t\t\t\t\t\t\t\t\t\tIf(#instance_optional_role_vacancies# > 0){\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #instance_optional_role_vacancies#)\n\t\t\t\t\t\t\t\t\t\t}.Else{\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: #instance_optional_role_vacancies#)\n\t\t\t\t\t\t\t\t\t\t}\n                                    }\n                                }\n                                Div(Class: row df f-valign){\n                                    Div(Class: col-md-6 mc-sm text-right){\n                                        P(Class: h5 text-normal m0){\n\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(candidates))\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\n\t\t\t\t\t\t\t\t\t\t}\n                                    }\n                                    Div(Class: col-md-6 mc-sm text-left){\n\t\t\t\t\t\t\t\t\t\tIf(#instance_optional_number_cands# > 0){\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #instance_optional_number_cands#)\n\t\t\t\t\t\t\t\t\t\t}.Else{\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: #instance_optional_number_cands#)\n\t\t\t\t\t\t\t\t\t\t}\n                                    }\n                                }\n                                Div(Class: row df){\n                                    Div(Class: col-md-2 mt-sm)\n                                    Div(Class: col-md-8 mt-sm text-left){\n                                        DBFind(Name: voting_subject, Source: src_voting_subject).Where(\"voting_id=#vID#\").Custom(custom_address){\n                                            Span(Class: h6, Body: Address(#member_id#))\n                                        }.Custom(custom_member){\n                                            Button(Class: btn btn-link, Page: profile_view, PageParams: \"v_member_id=#member_id#\"){\n                                                Image(Src: \"#member_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\n                                                Span(Class: h5 text-bold, Body: #member_name#)\n                                            }\n                                        }.Custom(custom_voting){\n\t\t\t\t\t\t\t\t\t\t\tIf(#vOpportunityVote#==1){\n\t\t\t\t\t\t\t\t\t\t\t\tButton(Body: LangRes(vote), Class: btn btn-success, Page: voting_view, PageParams: \"vID=#vID#\", Contract: voting_AcceptCandidates, Params: \"candidateID=#member_id#\")\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}.Order(\"member_name\")\n                                        Table(src_voting_subject, \"=custom_member,=custom_address,=custom_voting\")\n                                    }\n                                    Div(Class: col-md-2 mt-sm)\n                                }\n                                Div(Class: row df f-valign){\n                                    Div(Class: col-md-12 mc-sm){\n                                        If(And(#vCmpStartDate#>0,#instance_type_voting#==1)){\n                                            If(#instance_typedecision#==1){\n                                                Button(Class: btn btn-link, Page: voting_decision_candidates, PageParams: \"vID=#vID#\"){\n                                                    Span(Class: h5 text-bold, Body: LangRes(subject_voting_edit))\n                                                }\n                                            }\n                                            If(#instance_typedecision#==2){\n                                                Button(Class: btn btn-link, Page: voting_decision_election, PageParams: \"vID=#vID#\"){\n                                                    Span(Class: h5 text-bold, Body: LangRes(subject_voting_edit))\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            } \n\t\t\t\t\t\t\tIf(#instance_typedecision#==3){\n\t\t\t\t\t\t\t\tDBFind(Name: voting_subject, Source: src_voting_subject).Where(\"voting_id=#vID#\").Vars(subject)\n                                Div(Class: row df f-valign){\n                                    Div(Class: col-md-1 mt-lg)\n                                    Div(Class: col-md-10 mt-lg){\n\t\t\t\t\t\t\t\t\t\tDiv(Class: list-group-item){\n\t\t\t\t\t\t\t\t\t\t\tIf(#subject_id# > 0){\n\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #subject_text_document#)\n\t\t\t\t\t\t\t\t\t\t\t}.Else{\n\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: LangRes(empty))\n\t\t\t\t\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tDiv(Class: list-group-item){\n\t\t\t\t\t\t\t\t\t\t\tIf(#subject_id# > 0){\n\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h6 text-muted m0, Body: Hash: #subject_text_doc_hash#)\n\t\t\t\t\t\t\t\t\t\t\t}.Else{\n\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h6 text-muted m0, Body: Hash: LangRes(empty))\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n                                    }\n                                    Div(Class: col-md-1 mt-lg)\n                                }\n                                Div(Class: row df f-valign){\n                                    Div(Class: col-md-12 mc-sm){\n\t\t\t\t\t\t\t\t\t\tIf(And(#vCmpStartDate#>0,#instance_type_voting#==1)){\n\t\t\t\t\t\t\t\t\t\t\tButton(Class: btn btn-link, Page: voting_decision_document, PageParams: \"vID=#vID#\"){\n\t\t\t\t\t\t\t\t\t\t\t\tSpan(Class: h5 text-bold, Body: LangRes(subject_voting_edit))\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n                                    }\n                                }\n                                Div(Class: row df f-valign){\n                                    Div(Class: col-md-1 mt-lg)\n                                    Div(Class: col-md-10 mt-lg){\n\t\t\t\t\t\t\t\t\t\tIf(#vOpportunityVote#==1){\n\t\t\t\t\t\t\t\t\t\t\tDiv(Class: pull-left){\n\t\t\t\t\t\t\t\t\t\t\t\tButton(Body: LangRes(reject), Class: btn btn-danger, Contract: voting_RejectDecision, PageParams: \"vID=#vID#\", Page: voting_view)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tDiv(Class: pull-right){\n\t\t\t\t\t\t\t\t\t\t\t\tButton(Body: LangRes(accept), Class: btn btn-success, Contract: voting_AcceptDecision, PageParams: \"vID=#vID#\", Page: voting_view)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n                                    }\n                                    Div(Class: col-md-1 mt-lg)\n                                }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tIf(#instance_typedecision#==4){\n\t\t\t\t\t\t\t\tDBFind(Name: voting_subject, Source: src_voting_subject).Where(\"voting_id=#vID#\").Vars(subject)\n\t\t\t\t\t\t\t\tDiv(Class: row df f-valign){\n                                    Div(Class: col-md-6 mt-sm text-right){\n                                        P(Class: h5 text-normal m0){\n\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(description))\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\n\t\t\t\t\t\t\t\t\t\t}\n                                    }\n                                    Div(Class: col-md-6 mt-sm text-left){\n\t\t\t\t\t\t\t\t\t\tIf(#subject_id# > 0){\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #subject_formal_decision_description#)\n\t\t\t\t\t\t\t\t\t\t}.Else{\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: LangRes(empty))\n\t\t\t\t\t\t\t\t\t\t}\n                                    }\n                                }\n                                Div(Class: row df f-valign){\n                                    Div(Class: col-md-6 mc-sm text-right){\n                                        P(Class: h5 text-normal m0){\n\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(table_to_written))\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\n\t\t\t\t\t\t\t\t\t\t}\n                                    }\n                                    Div(Class: col-md-6 mc-sm text-left){\n\t\t\t\t\t\t\t\t\t\tIf(#subject_id# > 0){\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #subject_formal_decision_table#)\n\t\t\t\t\t\t\t\t\t\t}.Else{\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: LangRes(empty))\n\t\t\t\t\t\t\t\t\t\t}\n                                    }\n                                }\n\t\t\t\t\t\t\t\tIf(#instance_type_voting#==1){\n\t\t\t\t\t\t\t\t\tDiv(Class: row df f-valign){\n\t\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-right){\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0){\n\t\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(row_id))\n\t\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-left){\n\t\t\t\t\t\t\t\t\t\t\tIf(#subject_id# > 0){\n\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #subject_formal_decision_tableid#)\n\t\t\t\t\t\t\t\t\t\t\t}.Else{\n\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: LangRes(empty))\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n                                Div(Class: row df f-valign){\n                                    Div(Class: col-md-6 mc-sm text-right){\n                                        P(Class: h5 text-normal m0){\n\t\t\t\t\t\t\t\t\t\t\tIf(#instance_type_voting#==1){\n\t\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(column_name))\n\t\t\t\t\t\t\t\t\t\t\t}.Else{\n\t\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(parameter_name))\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\n\t\t\t\t\t\t\t\t\t\t}\n                                    }\n                                    Div(Class: col-md-6 mc-sm text-left){\n\t\t\t\t\t\t\t\t\t\tIf(#subject_id# > 0){\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #subject_formal_decision_column#)\n\t\t\t\t\t\t\t\t\t\t}.Else{\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: LangRes(empty))\n\t\t\t\t\t\t\t\t\t\t}\n                                    }\n                                }\n                                Div(Class: row df f-valign){\n                                    Div(Class: col-md-6 mc-sm text-right){\n                                        P(Class: h5 text-normal m0){\n\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(written_value))\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\n\t\t\t\t\t\t\t\t\t\t}\n                                    }\n                                    Div(Class: col-md-6 mc-sm text-left){\n\t\t\t\t\t\t\t\t\t\tIf(#subject_id# > 0){\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #subject_formal_decision_colvalue#)\n\t\t\t\t\t\t\t\t\t\t}.Else{\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: LangRes(empty))\n\t\t\t\t\t\t\t\t\t\t}\n                                    }\n                                }\n                                Div(Class: row df f-valign){\n                                    Div(Class: col-md-12 mc-sm){\n\t\t\t\t\t\t\t\t\t\tIf(And(#vCmpStartDate#>0,#instance_type_voting#==1)){\n\t\t\t\t\t\t\t\t\t\t\tButton(Class: btn btn-link, Page: voting_decision_formal, PageParams: \"vID=#vID#\"){\n\t\t\t\t\t\t\t\t\t\t\t\tSpan(Class: h5 text-bold, Body: LangRes(subject_voting_edit))\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n                                    }\n                                }\n                                Div(Class: row df f-valign){\n                                    Div(Class: col-md-1 mt-lg)\n                                    Div(Class: col-md-10 mt-lg){\n\t\t\t\t\t\t\t\t\t\tIf(#vOpportunityVote#==1){\n\t\t\t\t\t\t\t\t\t\t\tDiv(Class: pull-left){\n\t\t\t\t\t\t\t\t\t\t\t\tButton(Body: LangRes(reject), Class: btn btn-danger, Contract: voting_RejectDecision, PageParams: \"vID=#vID#\", Page: voting_view)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tDiv(Class: pull-right){\n\t\t\t\t\t\t\t\t\t\t\t\tButton(Body: LangRes(accept), Class: btn btn-success, Contract: voting_AcceptDecision, PageParams: \"vID=#vID#\", Page: voting_view)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n                                    }\n                                    Div(Class: col-md-1 mt-lg)\n                                }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tIf(#instance_typedecision#==5){\n\t\t\t\t\t\t\t\tDBFind(Name: voting_subject, Source: src_voting_subject).Where(\"voting_id=#vID#\").Vars(subject)\n\t\t\t\t\t\t\t\tDiv(Class: row df f-valign){\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-right){\n                                        P(Class: h5 text-normal m0){\n\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(contract_accept))\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-left){\n\t\t\t\t\t\t\t\t\t\tIf(#subject_id# > 0){\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #subject_contract_accept#)\n\t\t\t\t\t\t\t\t\t\t}.Else{\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: LangRes(empty))\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tDiv(Class: row df f-valign){\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-right){\n                                        P(Class: h5 text-normal m0){\n\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(contract_reject))\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-left){\n\t\t\t\t\t\t\t\t\t\tIf(#subject_id# > 0){\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #subject_contract_reject#)\n\t\t\t\t\t\t\t\t\t\t}.Else{\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: LangRes(empty))\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n                                Div(Class: row df f-valign){\n                                    Div(Class: col-md-12 mc-sm){\n\t\t\t\t\t\t\t\t\t\tIf(And(#vCmpStartDate#>0,#instance_type_voting#==1)){\n\t\t\t\t\t\t\t\t\t\t\tButton(Class: btn btn-link, Page: voting_decision_contract, PageParams: \"vID=#vID#\"){\n\t\t\t\t\t\t\t\t\t\t\t\tSpan(Class: h5 text-bold, Body: LangRes(subject_voting_edit))\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n                                    }\n                                }\n                                Div(Class: row df f-valign){\n                                    Div(Class: col-md-1 mt-lg)\n                                    Div(Class: col-md-10 mt-lg){\n\t\t\t\t\t\t\t\t\t\tIf(#vOpportunityVote#==1){\n\t\t\t\t\t\t\t\t\t\t\tDiv(Class: pull-left){\n\t\t\t\t\t\t\t\t\t\t\t\tButton(Body: LangRes(reject), Class: btn btn-danger, Contract: voting_RejectDecision, PageParams: \"vID=#vID#\", Page: voting_view)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tDiv(Class: pull-right){\n\t\t\t\t\t\t\t\t\t\t\t\tButton(Body: LangRes(accept), Class: btn btn-success, Contract: voting_AcceptDecision, PageParams: \"vID=#vID#\", Page: voting_view)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n                                    }\n                                    Div(Class: col-md-1 mt-lg)\n                                }\n\t\t\t\t\t\t\t}\n                        }\n\t\t\t\t\t\t\n                        Div(Class: list-group-item text-center){\n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-6 mt-sm text-right){\n                                    P(Class: h5 text-normal m0, Body: LangRes(status))\n                                }\n                                Div(Class: col-md-6 mt-sm text-left){\n\t\t\t\t\t\t\t\t\tIf(#instance_flag_success#==1){ \n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-success m0, Body: LangRes(success))\n\t\t\t\t\t\t\t\t\t}.Else{\n\t\t\t\t\t\t\t\t\t\tIf(#vCmpEndDate#<0){\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-muted m0, Body: LangRes(finished))\n\t\t\t\t\t\t\t\t\t\t}.Else{\t\n\t\t\t\t\t\t\t\t\t\t\tIf(#vCmpStartDate#<0){ \n\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-success m0, Body: LangRes(started))\n\t\t\t\t\t\t\t\t\t\t\t}.Else{\t\n\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-warning m0, Body: LangRes(waiting))\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n                                }\n                            }\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-right){\n\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(notifications))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-left){\n\t\t\t\t\t\t\t\t\tIf(#instance_flag_notifics#==1){\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(yes))\n\t\t\t\t\t\t\t\t\t}.Else{\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(no))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-6 mc-sm text-right){\n                                    P(Class: h5 text-normal m0, Body: LangRes(decision))\n                                }\n                                Div(Class: col-md-6 mc-sm text-left){\n\t\t\t\t\t\t\t\t\tIf(#instance_flag_decision#==-2){\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(not_enough_votes))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tIf(#instance_flag_decision#==-1){ \n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: LangRes(rejected))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tIf(#instance_flag_decision#==0){\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(no))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tIf(#instance_flag_decision#==1){\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-success m0, Body: LangRes(accepted))\n\t\t\t\t\t\t\t\t\t}\n                                }\n                            }\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-right){\n\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(date_start))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-left){\n\t\t\t\t\t\t\t\t\tIf(#vCmpStartDate#<0){\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-muted m0, Body: DateTime(DateTime: #instance_startdate#, Format: \"DD.MM.YYYY HH:MI\"))\n\t\t\t\t\t\t\t\t\t}.Else{\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: DateTime(DateTime: #instance_startdate#, Format: \"DD.MM.YYYY HH:MI\"))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-right){\n\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(date_end))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-left){\n\t\t\t\t\t\t\t\t\tIf(#vCmpEndDate#<0){\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-muted m0, Body: DateTime(DateTime: #instance_enddate#, Format: \"DD.MM.YYYY HH:MI\"))\n\t\t\t\t\t\t\t\t\t}.Else{\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: DateTime(DateTime: #instance_enddate#, Format: \"DD.MM.YYYY HH:MI\"))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-right){\n\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(voting_volume))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-left){\n\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #instance_volume#)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-right){\n\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(voting_quorum))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-left){\n\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #instance_quorum#)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-right){\n\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0){\n\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(participants))\n\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-left){\n\t\t\t\t\t\t\t\t\tIf(#instance_number_participants# > 0){\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #instance_number_participants#)\n\t\t\t\t\t\t\t\t\t}.Else{\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: #instance_number_participants#)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-2 mt-sm)\n                                Div(Class: col-md-8 mt-sm text-left){\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tDBFind(Name: voting_participants, Source: src_voting_participants).Where(\"voting_id=#vID#\").Custom(custom_address){\n                                            P(Class: h6 m0, Body: Address(#member_id#))\n                                        }.Custom(custom_member){\n                                            Button(Class: btn btn-link, Page: profile_view, PageParams: \"v_member_id=#member_id#\"){\n                                                Image(Src: \"#member_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\n                                                Span(Class: h5 text-bold, Body: #member_name#)\n                                            }\n                                        }.Custom(custom_decision){\n\n\t\t\t\t\t\t\t\t\t\t\tIf(Or(#instance_typedecision#==1,#instance_typedecision#==2)){ \n\t\t\t\t\t\t\t\t\t\t\t\tIf(#decision#==0){ \n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h6 m0, Body: LangRes(did_not_vote))\n\t\t\t\t\t\t\t\t\t\t\t\t}.Else{\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: text-success text-center h6 m0, Body: $vote_for_candidate$:)\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: text-success text-center h6 m0, Body: Address(#decision#) )\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: text-success text-center h6 m0, Body: $at$ DateTime(DateTime: #decision_date#, Format: \"DD.MM.YYYY HH:MI\"))\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tIf(#instance_typedecision#==3){ \n\t\t\t\t\t\t\t\t\t\t\t\tIf(#decision#==0){\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h6 m0, Body: LangRes(did_not_vote))\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tIf(#decision#==1){ \n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: text-success h6 m0, Body: $document_accept$ $at$ DateTime(DateTime: #decision_date#, Format: \"DD.MM.YYYY HH:MI\"))\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tIf(#decision#==-1){ \n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: text-danger h6 m0, Body: $document_reject$ $at$ DateTime(DateTime: #decision_date#, Format: \"DD.MM.YYYY HH:MI\"))\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tIf(#instance_typedecision#==4){\n\t\t\t\t\t\t\t\t\t\t\t\tIf(#decision#==0){\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h6 m0, Body: LangRes(did_not_vote))\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tIf(#decision#==1){\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: text-success h6 m0, Body: $decision_accept$ $at$ DateTime(DateTime: #decision_date#, Format: \"DD.MM.YYYY HH:MI\"))\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tIf(#decision#==-1){ \n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: text-danger h6 m0, Body: $decision_reject$ $at$ DateTime(DateTime: #decision_date#, Format: \"DD.MM.YYYY HH:MI\"))\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tIf(#instance_typedecision#==5){ \n\t\t\t\t\t\t\t\t\t\t\t\tIf(#decision#==0){\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h6 m0, Body: LangRes(did_not_vote))\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tIf(#decision#==1){ \n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: text-success h6 m0, Body: $contract_accepted$ $at$ DateTime(DateTime: #decision_date#, Format: \"DD.MM.YYYY HH:MI\"))\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tIf(#decision#==-1){ \n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: text-danger h6 m0, Body: $contract_rejected$ $at$ DateTime(DateTime: #decision_date#, Format: \"DD.MM.YYYY HH:MI\"))\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}.Order(\"member_name\")\n                                        Table(src_voting_participants, \"=custom_member,=custom_decision\")\n\t\t\t\t\t\t\t\t\n                                }\n\t\t\t\t\t\t\t\tDiv(Class: col-md-2 mt-sm)\n                            }\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\n\t\t\t\t\t\t\t\tDiv(Class: col-md-12 mc-sm){\n\t\t\t\t\t\t\t\t\tIf(And(#vCmpStartDate#>0,#instance_type_voting#==1)){\n\t\t\t\t\t\t\t\t\t\tButton(Class: btn btn-link, Page: voting_invite, PageParams: \"vID=#vID#\"){\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: h5 text-bold, Body: LangRes(participants_add))\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n                        Div(Class: list-group-item text-center){\n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-1 mt-sm )\n                                Div(Class: col-md-5 mt-sm text-center){\n\t\t\t\t\t\t\t\t\tP(Class: h4 text-normal m0, Body: LangRes(voted))\n                                }\n                                Div(Class: col-md-5 mt-sm text-center){\n\t\t\t\t\t\t\t\t\tP(Class: h4 text-normal m0, Body: LangRes(progress))\n                                }\n                                Div(Class: col-md-1 mt-sm)\n                            }\n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-1 mt-sm )\n                                Div(Class: col-md-5 mt-sm text-center){\n\t\t\t\t\t\t\t\t\tP(Class: h6 text-muted m0, Body: LangRes(voting_graph_voted))\n                                }\n                                Div(Class: col-md-5 mt-sm text-center){\n\t\t\t\t\t\t\t\t\tP(Class: h6 text-muted m0, Body: LangRes(voting_graph_progress))\n                                }\n                                Div(Class: col-md-1 mt-sm)\n                            }\n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-1 mt-sm )\n                                Div(Class: col-md-5 mt-sm text-center){\n                                    P(Class: h3 text-normal m0, Body: #instance_number_voters# / #instance_percent_voters#)\n                                }\n                                Div(Class: col-md-5 mt-sm text-center){\n                                    P(Class: h3 text-normal m0, Body: #instance_percent_success# / 100)\n                                }\n                                Div(Class: col-md-1 mt-sm)\n                            }\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n                    }\n                }\n\n            }\n            Div(Class: col-md-2)\n        }   \n    }.Else{\n        Div(Class: md-12 alert alert-danger text-center){\n            Span(Body: LangRes(attention))\n        }\n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu"
        }
    ],
    "parameters": [
        {
            "Name": "type_voting",
            "Value": "type_voting_custom,type_voting_system",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "type_voting_decisions",
            "Value": "voting_decisions_candidate_requests,voting_decisions_candidate_manual,voting_decisions_document,voting_decisions_db,voting_decisions_contract",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "type_voting_participants",
            "Value": "voting_participants_everybody,voting_participants_manual,voting_participants_role",
            "Conditions": "ContractConditions(\"MainCondition\")"
        }
    ],
    "tables": [
        {
            "Name": "voting_instances",
            "Columns": "[{\"name\":\"typeparticipants\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"contract_accept_params\",\"type\":\"varchar\",\"conditions\":\"ContractAccess(\\\"voting_SubjectSettings\\\", \\\"voting_SubjectDocument\\\", \\\"voting_SubjectFormal\\\")\"},{\"name\":\"contract_reject_params\",\"type\":\"varchar\",\"conditions\":\"ContractAccess(\\\"voting_SubjectSettings\\\", \\\"voting_SubjectDocument\\\", \\\"voting_SubjectFormal\\\")\"},{\"name\":\"optional_contract_accept\",\"type\":\"varchar\",\"conditions\":\"ContractAccess(\\\"voting_SubjectSettings\\\", \\\"voting_SubjectDocument\\\", \\\"voting_SubjectFormal\\\")\"},{\"name\":\"creator_id\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"flag_notifics\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_SendNotifics\\\")\"},{\"name\":\"flag_success\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_UpdateDataForGraphs\\\")\"},{\"name\":\"flag_decision\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_CheckDecision\\\")\"},{\"name\":\"optional_role_id\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_SubjectSettings\\\")\"},{\"name\":\"name\",\"type\":\"varchar\",\"conditions\":\"false\"},{\"name\":\"volume\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"creator_avatar\",\"type\":\"bytea\",\"conditions\":\"false\"},{\"name\":\"percent_voters\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_UpdateDataForGraphs\\\")\"},{\"name\":\"optional_number_cands\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_SubjectCandidates\\\")\"},{\"name\":\"enddate\",\"type\":\"datetime\",\"conditions\":\"false\"},{\"name\":\"description\",\"type\":\"text\",\"conditions\":\"false\"},{\"name\":\"flag_fulldata\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_SubjectCheckFulldata\\\")\"},{\"name\":\"percent_success\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_UpdateDataForGraphs\\\")\"},{\"name\":\"quorum\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"creator_name\",\"type\":\"varchar\",\"conditions\":\"false\"},{\"name\":\"typedecision\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"optional_role_vacancies\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_SubjectSettings\\\")\"},{\"name\":\"delete\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_Delete\\\")\"},{\"name\":\"startdate\",\"type\":\"datetime\",\"conditions\":\"false\"},{\"name\":\"optional_contract_reject\",\"type\":\"varchar\",\"conditions\":\"ContractAccess(\\\"voting_SubjectSettings\\\", \\\"voting_SubjectDocument\\\", \\\"voting_SubjectFormal\\\")\"},{\"name\":\"type_voting\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"number_participants\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_Invite\\\")\"},{\"name\":\"number_voters\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_UpdateDataForGraphs\\\")\"}]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"
        },
        {
            "Name": "voting_participants",
            "Columns": "[{\"name\":\"decision\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"member_id\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"voting_id\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"member_name\",\"type\":\"varchar\",\"conditions\":\"false\"},{\"name\":\"decision_date\",\"type\":\"datetime\",\"conditions\":\"ContractAccess(\\\"voting_AcceptCandidates\\\",\\\"voting_AcceptDecision\\\",\\\"voting_RejectDecision\\\")\"},{\"name\":\"member_avatar\",\"type\":\"bytea\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"
        },
        {
            "Name": "voting_subject",
            "Columns": "[{\"name\":\"number_accept\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_AcceptCandidates\\\",\\\"voting_AcceptDecision\\\")\"},{\"name\":\"contract_reject_params\",\"type\":\"text\",\"conditions\":\"ContractAccess(\\\"voting_SubjectContract\\\")\"},{\"name\":\"formal_decision_colvalue\",\"type\":\"varchar\",\"conditions\":\"ContractAccess(\\\"voting_SubjectFormal\\\")\"},{\"name\":\"member_id\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"member_name\",\"type\":\"varchar\",\"conditions\":\"true\"},{\"name\":\"formal_decision_column\",\"type\":\"varchar\",\"conditions\":\"ContractAccess(\\\"voting_SubjectFormal\\\")\"},{\"name\":\"formal_decision_tableid\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_SubjectFormal\\\")\"},{\"name\":\"text_document\",\"type\":\"text\",\"conditions\":\"ContractAccess(\\\"voting_SubjectDocument\\\")\"},{\"name\":\"contract_reject\",\"type\":\"varchar\",\"conditions\":\"ContractAccess(\\\"voting_SubjectContract\\\")\"},{\"name\":\"formal_decision_table\",\"type\":\"varchar\",\"conditions\":\"ContractAccess(\\\"voting_SubjectFormal\\\")\"},{\"name\":\"voting_id\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"member_avatar\",\"type\":\"bytea\",\"conditions\":\"true\"},{\"name\":\"contract_accept_params\",\"type\":\"text\",\"conditions\":\"ContractAccess(\\\"voting_SubjectContract\\\")\"},{\"name\":\"formal_decision_description\",\"type\":\"text\",\"conditions\":\"ContractAccess(\\\"voting_SubjectFormal\\\")\"},{\"name\":\"text_doc_hash\",\"type\":\"text\",\"conditions\":\"ContractAccess(\\\"voting_SubjectDocument\\\")\"},{\"name\":\"contract_accept\",\"type\":\"varchar\",\"conditions\":\"ContractAccess(\\\"voting_SubjectContract\\\")\"}]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"
        }
    ]
}