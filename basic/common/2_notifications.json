{
    "blocks": [],
    "contracts": [
        {
            "Name": "Notifications_Roles_Finishing",
            "Value": "contract Notifications_Roles_Finishing{\n    data {\n\t    notific_id int\n    }\n\n    conditions {\n\t\t$notifications_map = DBFind(\"notifications\").Where(\"id=$\", $notific_id).Row()\n\t\tif ($notifications_map[\"id\"] == nil){\n\t\t\twarning \"Notification not found\"\n\t\t}\n\t\t\n        if ( Int($notifications_map[\"started_processing_id\"]) == 0 ){\n            warning \"Sorry, processing of this notification has not yet begun\"  \n        }\n        if ( Int($notifications_map[\"started_processing_id\"]) != $key_id ){\n            warning \"Sorry, processing of this notice began another member\"   \n        }\n        if ( (Int($notifications_map[\"finished_processing_id\"]) != 0) || (Int($notifications_map[\"closed\"]) > 0) ){\n            warning \"Sorry, this notification has already been closed before\"  \n        }\n\t\t\n\t\t$assign_id = DBFind(\"roles_assign\").Where(\"role_id=$ and member_id=$ and delete=$\", Int($notifications_map[\"role_id\"]), $key_id, 0).One(\"id\")\n        if ($assign_id == 0){\n            warning \"Sorry, you are not part of the role for which this notification is intended\"  \n        }\n    }\n\n    action {\n        DBUpdate(\"notifications\", $notific_id, \"timestamp finished_processing_time,finished_processing_id,closed\", $block_time, $key_id, 1) \n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "Notifications_Roles_Processing",
            "Value": "contract Notifications_Roles_Processing {\n    data {\n\t    notific_id int\n    }\n\n    conditions {\n\t\t$notifications_map = DBFind(\"notifications\").Where(\"id=$\", $notific_id).Row()\n\t\tif ($notifications_map[\"id\"] == nil){\n\t\t\twarning \"Notification not found\"\n\t\t}\n\t\t\n        if ( Int($notifications_map[\"started_processing_id\"]) != 0){\n            warning \"Sorry, processing of this notification has already begun\"  \n        }\n\t\t\n\t\t$assign_id = DBFind(\"roles_assign\").Where(\"role_id=$ and member_id=$ and delete=$\", Int($notifications_map[\"role_id\"]), $key_id, 0).One(\"id\")\n        if ($assign_id == 0){\n            warning \"Sorry, you are not part of the role for which this notification is intended\"  \n        }\n    }\n\n    action {\n        DBUpdate(\"notifications\", $notific_id, \"timestamp started_processing_time,started_processing_id\", $block_time, $key_id) \n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "Notifications_Single_Send",
            "Value": "contract Notifications_Single_Send {\n    data {\n        member_id int\n        icon_name string\n        text_header string\n        text_body string\n        page_name string\n        params_val string\n    }\n\n    conditions {\n\t\t$member_map = DBFind(\"members\").Where(\"id = $\", $member_id).Row()\n\t\t\n\t\tif ($member_map[\"id\"] == nil){\n\t\t\twarning \"Member not found\"\n\t\t}\n    }\n\n    action {\n\t\t$notification_id = DBInsert(\"notifications\", \"icon,header_text,body_text,page_name,notification_type,recipient_id,recipient_name,recipient_avatar,timestamp date_create,page_params\", \n\t\t\t$icon_name, $text_header, $text_body, $page_name, 1, $member_id, $member_map[\"member_name\"], $member_map[\"avatar\"], $block_time, $params_val)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "Notifications_Single_Close",
            "Value": "contract Notifications_Single_Close {\n    data {\n\t    notific_id int\n    }\n\n    conditions {\n    }\n\n    action {\n        DBUpdate(\"notifications\", $notific_id, \"closed,timestamp finished_processing_time,finished_processing_id\", 1, $block_time, $key_id) \n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "Notifications_Roles_Send",
            "Value": "contract Notifications_Roles_Send {\n    data {\n        role_id int\n        closure_type int\n\n        icon_name string\n        text_header string\n        text_body string\n        page_name string\n        params_val string \n    }\n\n    conditions {\n\t\t$assign_id = DBFind(\"roles_assign\").Where(\"role_id=$ and delete=$\", $role_id, 0).One(\"id\")\n        if ($assign_id == nil){\n\t\t\twarning \"Role does not contain members\"\n\t\t}\n    }\n\n    action {\n        //closure_type - Single\n        if ($closure_type == 1){\n\t\t\t$role_name = DBFind(\"roles_list\").Where(\"id=$\", $role_id).One(\"role_name\")\n\t\t\n            $notification_id = DBInsert(\"notifications\", \"icon,header_text,body_text,page_name,notification_type,role_id,role_name,timestamp date_create,page_params\", \n                $icon_name, $text_header, $text_body, $page_name, 2, $role_id, $role_name, $block_time, $params_val)\n        } \n\t\t//closure_type - Multiple \n\t\telse {\n            $ret_role = DBFind(\"roles_assign\").Columns(\"member_id\").Where(\"role_id = $ and delete = $\", $role_id, 0).Order(\"id\")\n\n            $len_role = Len($ret_role)\n            $i_role = 0\n            while($i_role < $len_role){\n                var vals_role map\n                vals_role = $ret_role[$i_role] \n\n                Notifications_Single_Send(\"member_id,icon_name,text_header,text_body,page_name,params_val\", \n                                vals_role[\"member_id\"], $icon_name, $text_header, $text_body, $page_name, $params_val)\n\n                $i_role = $i_role + 1\n            }\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        }
    ],
    "data": [],
    "languages": [],
    "menus": [
        {
            "Name": "default_menu",
            "Value": "MenuGroup(Title:$notifications$, Icon:\"fa fa-bell-o\"){\n    MenuItem(Title:$single_notifics$, Page:notifications_single, Icon:\"fa fa-bell-o\")\n    MenuItem(Title:$role_notifics$, Page:notifications_roles, Icon:\"fa fa-bullhorn\")\n    MenuItem(Title:$test_page$, Page:notifications_testpage, Icon:\"icon-settings\")\n}",
            "Conditions": "ContractAccess(\"@1EditMenu\")"
        }
    ],
    "pages": [
        {
            "Name": "notifications",
            "Value": "DBFind(Name: notifications, Source: noti_s).Where(\"closed=0 and notification_type=1 and recipient_id=#key_id#\")\nDBFind(Name: notifications, Source: noti_r).Where(\"closed=0 and notification_type=2 and (started_processing_id=0 or started_processing_id=#key_id#)\")\n\nForList(noti_s){\n        Div(Class: list-group-item){\n            LinkPage(Page: #page_name#, PageParams: \"notific_id=#id#,notific_type=#notification_type#,notific_header=#header_text#,#page_params#\"){        \n                Div(media-box){\n                    Div(Class: pull-left){\n                        Em(Class: fa #icon# fa-1x text-info)\n                    } \n                    Div(media-box-body clearfix){ \n                        Div(Class: m0 text-normal, Body: #header_text#) \n                        Div(Class: m0 text-muted h6, Body: #body_text#)\n                    }\n                }\n            }\n        }\n}\n\nForList(noti_r){\n    DBFind(Name: roles_assign, Source: src_roles).Where(\"member_id=#key_id# and role_id=#role_id# and delete=0\").Vars(prefix)\n    If(#prefix_id# > 0){\n        Div(Class: list-group-item){\n            LinkPage(Page: #page_name#, PageParams: \"notific_id=#id#,notific_type=#notification_type#,notific_header=#header_text#,#page_params#\"){        \n                Div(media-box){\n                    Div(Class: pull-left){\n                        Em(Class: fa #icon# fa-1x text-primary)\n                    } \n                    Div(media-box-body clearfix){ \n                        Div(Class: m0 text-normal, Body: #header_text#) \n                        Div(Class: m0 text-muted h6, Body: #body_text#)\n                    }\n                }\n            }\n        }\n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu"
        },
        {
            "Name": "notifications_roles",
            "Value": "Div(Class: content-wrapper){\n\n\tSetTitle($role_notifics$)\n\tDiv(breadcrumb){\n\t\tSpan(Class: text-muted, Body: $role_notifics$)\n\t}\n\n    If(GetVar(isSearch) == 1){\n        SetVar(Name: v_Where, Value: \"role_name='#v_Search#' and notification_type=2\")\n    }.Else{\n        SetVar(Name: v_Where, Value: \"notification_type=2\")\n        SetVar(Name: v_Search, Value: \"\")\n    }\n\n    DBFind(Name: notifications, Source: src_notifications).Custom(custom_id){\n        If(#closed# == 0){\n            Span(Body: #id#)  \n        }.Else{\n            Span(Class: text-muted, Body: #id#)\n        }\n    }.Custom(custom_role){\n        If(#closed# == 0){\n            Span(Body: ID: #role_id# - #role_name#)  \n        }.Else{\n            Span(Class: text-muted, Body: ID: #role_id# - #role_name#)\n        }\n    }.Custom(custom_icon){\n        If(#closed# == 0){\n            Em(Class: fa #icon# fa-2x text-info)\n        }.Else{\n            Em(Class: fa #icon# fa-2x text-muted)\n        }\n    }.Custom(custom_page){\n        If(#closed# == 0){\n            LinkPage(Page: #page_name#, PageParams: \"notific_id=#id#,notific_type=#notification_type#,notific_header=#header_text#,#page_params#\"){\n                Span(Class: h5 text-bold, Body: #page_name#)\n            }\n        }.Else{\n            Div(){\n                Span(Class: h5 text-muted, Body: #page_name#)\n            }\n        }\n    }.Custom(custom_params){\n        If(#closed# == 0){\n            Span(Class: h6 m0, Body: \"#page_params#\")  \n        }.Else{\n            Span(Class: text-muted h6 m0, Body: \"#page_params#\")\n        }\n    }.Custom(custom_date_started){\n        If(#started_processing_id# == 0){\n        }.Else{\n            If(#closed# == 0){\n                P(Class: m0, Body: DateTime(DateTime: #started_processing_time#, Format: \"DD.MM.YYYY HH:MI\"))\n                P(Class: m0 h6, Body: Address(#started_processing_id#))\n            }.Else{\n                P(Class: text-muted m0, Body: DateTime(DateTime: #started_processing_time#, Format: \"DD.MM.YYYY HH:MI\"))\n                P(Class: text-muted m0 h6, Body: Address(#started_processing_id#))\n            }\n        }\n    }.Custom(custom_date_finished){\n        If(#finished_processing_id# == 0){\n        }.Else{\n            P(Class: text-muted m0, Body: DateTime(DateTime: #finished_processing_time#, Format: \"DD.MM.YYYY HH:MI\"))\n            P(Class: text-muted m0 h6, Body: Address(#finished_processing_id#))\n        }\n    }.Custom(custom_status){\n        If(#closed# == 0){\n            If(#started_processing_id# == 0){\n                Span(Body: LangRes(active))\n            }.Else{\n                Span(Body: LangRes(processing))\n            }\n        }.Else{\n            Span(Class: text-muted, Body: LangRes(сlosed))\n        }\n    }.Custom(actions){\n        If(#closed# == 0){\n            If(#started_processing_id# == 0){\n                Button(Body: Em(Class: fa icon-paper-clip), Class: btn btn-danger, Contract: Notifications_Roles_Processing, Params: \"notific_id=#id#\", Page: notifications_roles)\n            }.Else{\n                Button(Body: Em(Class: fa fa-trash), Class: btn btn-danger, Contract: Notifications_Roles_Finishing, Params: \"notific_id=#id#\", Page: notifications_roles)\n            }\n        }\n    }.Where(#v_Where#).Order(\"closed ASC, id ASC\")\n\n    Div(Class: panel panel-primary){\n        Form(){\n            Div(Class: list-group-item){\n                Div(Class: row df f-valign){\n                    Div(Class: col-md-1 mt-sm text-right){\n                        Label(For: Search){\n                            Span(Body: LangRes(role))\n                        }\n                    }\n                    Div(Class: col-md-11 mc-sm){\n                        Div(Class: input-group){\n                            Input(Class: form-control, Type: text, Name: Search, Value: #v_Search#)\n                            Div(Class: input-group-btn){\n                                Button(Body: Em(Class: fa fa-search), Class: btn btn-default, Page: notifications_roles, PageParams: \"isSearch=1,v_Search=Val(Search)\")\n                            }\n                        }\n                    }\n                }  \n            }\n\n            Div(Class: list-group-item){ \n                Table(Source: src_notifications, Columns: \"$id$=custom_id,$role$=custom_role,$icon$=custom_icon,$page_name$=custom_page,$params$=custom_params,$started$=custom_date_started,$сlosed$=custom_date_finished,$status$=custom_status,$actions$=actions\")\n                If(GetVar(isSearch) == 1){\n                    Div(Class: text-center){  \n                        Button(Body: $view_all$, Class: btn btn-primary, Page: notifications_roles, PageParams: \"isSearch=0\")\n                    }\n                }\n            }\n\n            Div(Class: panel-footer clearfix){\n                Div(Class: pull-right){\n                    Button(Body: LangRes(send), Class: btn btn-primary, Page: notifications_roles_send)\n                }\n            }\n            \n        }           \n    }\n\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu"
        },
        {
            "Name": "notifications_roles_send",
            "Value": "Div(Class: content-wrapper){\n\tSetTitle($role_notifics$)\n\tDiv(breadcrumb){\n\t\tSpan(Class: text-muted, Body: $role_notifics$)\n\t}\n\n    Div(Class: row df f-valign){\n        Div(Class: col-md-3)\n        Div(Class: col-md-6){\n\n            Div(Class: panel panel-primary){\n                Div(Class: panel-heading, Body: LangRes(role_notifics))\n                Form(){\n\n                    Div(Class: list-group-item){\n                        Div(Class: row df f-valign){\n                            Div(Class: col-md-3 mt-sm text-right){\n                                Label(For: role_id){\n                                    Span(Body: LangRes(role))\n                                }\n                            }\n                            Div(Class: col-md-9 mb-sm text-left){\n                                DBFind(Name: roles_list, Source: source_roles).Where(\"delete=0\")\n                                Select(Name: role_id, Source: source_roles, NameColumn: role_name, ValueColumn: id)\n                            } \n                        }\n                        Div(Class: row df f-valign){\n                            Div(Class: col-md-3 mt-sm text-right){\n                                Label(For: closure_type){\n                                    Span(Body: LangRes(closure_type))\n                                }\n                            }\n                            Div(Class: col-md-9 mc-sm text-left){\n                                EcosysParam(Name: notification_closure, Source: src_closure_type)\n                                Select(Name: closure_type, Source: src_closure_type, NameColumn: name, ValueColumn: id)\n                            } \n                        }\n                    }\n\n                    Div(Class: list-group-item){\n                        Div(Class: row df f-valign){\n                            Div(Class: col-md-3 mt-sm text-right){\n                                Label(For: emission_type){\n                                    Span(Body: LangRes(icon))\n                                }\n                            }\n                            Div(Class: col-md-9 mb-sm text-left){\n                                EcosysParam(Name: notification_icon, Source: src_icon)\n                                Select(Name: icon_name, Source: src_icon, NameColumn: name, ValueColumn: name)\n                            } \n                        }\n                        Div(Class: row df f-valign){\n                            Div(Class: col-md-3 mt-sm text-right){\n                                Label(For: text_header){\n                                    Span(Body: LangRes(header))\n                                }\n                            }\n                            Div(Class: col-md-9 mb-sm text-left){\n                                Input(Class: form-control, Value: \"Header text\", Type: text, Name: text_header)\n                            } \n                        }\n                        Div(Class: row df f-valign){\n                            Div(Class: col-md-3 mt-sm text-right){\n                                Label(For: text_body){\n                                    Span(Body: LangRes(body_text))\n                                }\n                            }\n                            Div(Class: col-md-9 mc-sm text-left){\n                                Input(Class: form-control, Value: \"Body text\", Type: text, Name: text_body)\n                            } \n                        }\n                    }\n\n                    Div(Class: list-group-item){\n                        Div(Class: row df f-valign){\n                            Div(Class: col-md-3 mt-sm text-right){\n                                Label(For: page_name){\n                                    Span(Body: LangRes(page_name))\n                                }\n                            }\n                            Div(Class: col-md-9 mb-sm text-left){\n                                Input(Class: form-control, Value: \"notifications_testpage\", Type: text, Name: page_name)\n                            } \n                        }\n                        Div(Class: row df f-valign){\n                            Div(Class: col-md-3 mt-sm text-right){\n                                Label(For: params_val){\n                                    Span(Body: LangRes(params))\n                                }\n                            }\n                            Div(Class: col-md-9 mc-sm text-left){\n                                Input(Class: form-control, Value: \"notific_val_int=11,notific_val_str=string\", Type: text, Name: params_val)\n                            } \n                        }\n                    }\n\n                    Div(Class: panel-footer clearfix){\n                        Div(Class: pull-right){\n                            Button(Body: LangRes(back), Class: btn btn-default, Page: notifications_roles)\n                            Button(Body: LangRes(send), Class: btn btn-primary, Page: notifications_roles, Contract: Notifications_Roles_Send)\n                        }\n                    }\n                }\n\n            }\n        }\n\n        Div(Class: col-md-3)\n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu"
        },
        {
            "Name": "notifications_single",
            "Value": "Div(Class: content-wrapper){\n\n\tSetTitle($single_notifics$)\n\tDiv(breadcrumb){\n\t\tSpan(Class: text-muted, Body: $single_notifics$)\n\t}\n\n    If(GetVar(isSearch) == 1){\n        SetVar(Name: v_Where, Value: \"recipient_name='#v_Search#' and notification_type=1\")\n    }.Else{\n        SetVar(Name: v_Where, Value: \"notification_type=1\")\n        SetVar(Name: v_Search, Value: \"\")\n    }\n\n    DBFind(Name: notifications, Source: src_notifications).Custom(custom_id){\n        If(#closed# == 0){\n            Span(Body: #id#)  \n        }.Else{\n            Span(Class: text-muted, Body: #id#)\n        }\n    }.Custom(custom_recipient){\n        If(#closed# == 0){\n            LinkPage(Page: profile_view, PageParams: \"v_member_id=#recipient_id#\"){\n                Image(Src: \"#recipient_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\n                Span(Class: h5 text-bold, Body: #recipient_name#)\n            }\n        }.Else{\n            Div(){\n                Image(Src: \"#recipient_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\n                Span(Class: h5 text-muted, Body: #recipient_name#)\n            }\n        }\n    }.Custom(custom_icon){\n        If(#closed# == 0){\n            Em(Class: fa #icon# fa-2x text-info)\n        }.Else{\n            Em(Class: fa #icon# fa-2x text-muted)\n        }\n    }.Custom(custom_page){\n        If(#closed# == 0){\n            LinkPage(Page: #page_name#, PageParams: \"notific_id=#id#,notific_type=#notification_type#,notific_header=#header_text#,#page_params#\"){\n                Span(Class: h5 text-bold, Body: #page_name#)\n            }\n        }.Else{\n            Div(){\n                Span(Class: h5 text-muted, Body: #page_name#)\n            }\n        }\n    }.Custom(custom_params){\n        If(#closed# == 0){\n            Span(Class: h6 m0, Body: \"#page_params#\")  \n        }.Else{\n            Span(Class: h6 m0 text-muted, Body: \"#page_params#\")\n        }\n    }.Custom(custom_date){\n        If(#closed# == 0){\n        }.Else{\n            P(Class: m0 text-muted, Body: DateTime(DateTime: #finished_processing_time#, Format: \"DD.MM.YYYY HH:MI\"))\n            P(Class: m0 h6 text-muted, Body: Address(#finished_processing_id#))\n        }\n    }.Custom(custom_status){\n        If(#closed# == 0){\n            Span(Body: LangRes(active))\n        }.Else{\n            Span(Class: text-muted, Body: LangRes(сlosed))\n        }\n    }.Custom(actions){\n        If(#closed# == 0){\n            Button(Body: Em(Class: fa fa-trash), Class: btn btn-danger, Contract: Notifications_Single_Close, Params: \"notific_id=#id#\", Page: notifications_single)\n        }\n    }.Where(#v_Where#).Order(\"closed ASC, id ASC\")\n\n    Div(Class: panel panel-primary){\n        Form(){\n            Div(Class: list-group-item){\n                Div(Class: row df f-valign){\n                    Div(Class: col-md-1 mt-sm text-right){\n                        Label(For: Search){\n                            Span(Body: LangRes(recipient))\n                        }\n                    }\n                    Div(Class: col-md-11 mc-sm){\n                        Div(Class: input-group){\n                            Input(Class: form-control, Type: text, Name: Search, Value: #v_Search#)\n                            Div(Class: input-group-btn){\n                                Button(Body: Em(Class: fa fa-search), Class: btn btn-default, Page: notifications_single, PageParams: \"isSearch=1,v_Search=Val(Search)\")\n                            }\n                        }\n                    }\n                }  \n            }\n\n            Div(Class: list-group-item){ \n                Table(Source: src_notifications, Columns: \"$id$=custom_id,$recipient$=custom_recipient,$icon$=custom_icon,$page_name$=custom_page,$params$=custom_params,$сlosed$=custom_date,$status$=custom_status,$actions$=actions\")\n                If(GetVar(isSearch) == 1){\n                    Div(Class: text-center){  \n                        Button(Body: $view_all$, Class: btn btn-primary, Page: notifications_single, PageParams: \"isSearch=0\")\n                    }\n                }\n            }\n\n            Div(Class: panel-footer clearfix){\n                Div(Class: pull-right){\n                    Button(Body: LangRes(send), Class: btn btn-primary, Page: notifications_single_send)\n                }\n            }\n            \n        }           \n    }\n\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu"
        },
        {
            "Name": "notifications_single_send",
            "Value": "Div(Class: content-wrapper){\n\tSetTitle($single_notifics$)\n\tDiv(breadcrumb){\n\t\tSpan(Class: text-muted, Body: $single_notifics$)\n\t}\n\n    Div(Class: row df f-valign){\n        Div(Class: col-md-3)\n        Div(Class: col-md-6){\n\n            Div(Class: panel panel-primary){\n                Div(Class: panel-heading, Body: LangRes(single_notifics))\n                Form(){\n\n                    Div(Class: list-group-item){\n                        Div(Class: row df f-valign){\n                            Div(Class: col-md-3 mt-sm text-right){\n                                Label(For: role_name){\n                                    Span(Body: LangRes(member))\n                                }\n                            }\n                            Div(Class: col-md-9 mc-sm text-left){\n                                DBFind(Name: members, Source: source_members)\n                                Select(Name: member_id, Source: source_members, NameColumn: member_name, ValueColumn: id)\n                            } \n                        }\n                    }\n\n                    Div(Class: list-group-item){\n                        Div(Class: row df f-valign){\n                            Div(Class: col-md-3 mt-sm text-right){\n                                Label(For: emission_type){\n                                    Span(Body: LangRes(icon))\n                                }\n                            }\n                            Div(Class: col-md-9 mb-sm text-left){\n                                EcosysParam(Name: notification_icon, Source: src_icon)\n                                Select(Name: icon_name, Source: src_icon, NameColumn: name, ValueColumn: name)\n                            } \n                        }\n                        Div(Class: row df f-valign){\n                            Div(Class: col-md-3 mt-sm text-right){\n                                Label(For: text_header){\n                                    Span(Body: LangRes(header))\n                                }\n                            }\n                            Div(Class: col-md-9 mb-sm text-left){\n                                Input(Class: form-control, Value: \"Header text\", Type: text, Name: text_header)\n                            } \n                        }\n                        Div(Class: row df f-valign){\n                            Div(Class: col-md-3 mt-sm text-right){\n                                Label(For: text_body){\n                                    Span(Body: LangRes(body_text))\n                                }\n                            }\n                            Div(Class: col-md-9 mc-sm text-left){\n                                Input(Class: form-control, Value: \"Body text\", Type: text, Name: text_body)\n                            } \n                        }\n                    }\n\n                    Div(Class: list-group-item){\n                        Div(Class: row df f-valign){\n                            Div(Class: col-md-3 mt-sm text-right){\n                                Label(For: page_name){\n                                    Span(Body: LangRes(page_name))\n                                }\n                            }\n                            Div(Class: col-md-9 mb-sm text-left){\n                                Input(Class: form-control, Value: \"notifications_testpage\", Type: text, Name: page_name)\n                            } \n                        }\n                        Div(Class: row df f-valign){\n                            Div(Class: col-md-3 mt-sm text-right){\n                                Label(For: params_val){\n                                    Span(Body: LangRes(params))\n                                }\n                            }\n                            Div(Class: col-md-9 mc-sm text-left){\n                                Input(Class: form-control, Value: \"notific_val_int=11,notific_val_str=string\", Type: text, Name: params_val)\n                            } \n                        }\n                    }\n\n                    Div(Class: panel-footer clearfix){\n                        Div(Class: pull-right){\n                            Button(Body: LangRes(back), Class: btn btn-default, Page: notifications_single)\n                            Button(Body: LangRes(send), Class: btn btn-primary, Page: notifications_single, Contract: Notifications_Single_Send)\n                        }\n                    }\n                }\n\n            }\n        }\n\n        Div(Class: col-md-3)\n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu"
        },
        {
            "Name": "notifications_testpage",
            "Value": "Div(Class: content-wrapper){\n\n\tSetTitle($test_page$)\n\tDiv(Class: breadcrumb){\n\t\tSpan(Class: text-muted, Body: LangRes(test_page))\n\t}\n\n    If(#notific_id# > 0){\n    }.Else{\n        Div(Class: md-12 alert alert-danger text-center){\n            Span(Body: LangRes(attention))\n        }\n        SetVar(Name: notific_id, Value: \"0\")\n        SetVar(Name: notific_type, Value: \"0\")\n        SetVar(Name: notific_header, Value: \"null\")\n        SetVar(Name: notific_val_int, Value: \"null\")\n        SetVar(Name: notific_val_str, Value: \"null\")\n    }\n\n    Div(Class: row df f-valign){\n        Div(Class: col-md-3)\n        Div(Class: col-md-6){\n            Div(Class: panel panel-default){\n                Form(){ \n\n\t\t\t\t\tDiv(Class: list-group-item text-center){\n\t\t\t\t\t\tSpan(Class: h3 , Body: #notific_header#)\t\n\t\t\t\t\t}\n\n\t\t\t\t\tDiv(Class: list-group-item){\n\t\t\t\t\t\tDiv(Class: row df f-valign){\n\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-right){\n\t\t\t\t\t\t\t\tSpan(Class: h4, Body: LangRes(id))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-left){\n\t\t\t\t\t\t\t\tSpan(Class: h4, Body: #notific_id#)\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t}\n\t\t\t\t\t\tDiv(Class: row df f-valign){\n\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-right){\n\t\t\t\t\t\t\t\tSpan(Class: h4, Body: LangRes(type))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-left){\n                                If(#notific_type# > 0){\n\t\t\t\t\t\t\t\t    Span(Class: h4, Body: EcosysParam(Name: notification_type, Index: #notific_type#))\n                                }.Else{\n                                    Span(Class: h4, Body: #notific_type#)\n                                }\n                            } \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tDiv(Class: list-group-item){\n\t\t\t\t\t\tDiv(Class: row df f-valign){\n\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-right){\n\t\t\t\t\t\t\t\tSpan(Class: h4, Body: LangRes(value_number))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-left){\n\t\t\t\t\t\t\t\tSpan(Class: h4, Body: #notific_val_int#)\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t}\n\t\t\t\t\t\tDiv(Class: row df f-valign){\n\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-right){\n\t\t\t\t\t\t\t\tSpan(Class: h4, Body: LangRes(value_string))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-left){\n\t\t\t\t\t\t\t\tSpan(Class: h4, Body: #notific_val_str#)\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t}\n\t\t\t\t\t}\t\t\t\t\n\n\t\t\t\t\tIf(#notific_type# == 1){\n\t\t\t\t\t\tDiv(Class: panel-footer clearfix){\n\t\t\t\t\t\t\tDiv(Class: pull-right){\n                                Button(Body: LangRes(close), Class: btn btn-danger, Contract: Notifications_Single_Close, Params: \"notific_id=#notific_id#\", Page: notifications_single)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tIf(#notific_type# == 2){\n\t\t\t\t\t\tDiv(Class: panel-footer clearfix){\n\t\t\t\t\t\t\tDiv(Class: pull-left){\n                                Button(Body: LangRes(begin), Class: btn btn-danger, Contract: Notifications_Roles_Processing, Params: \"notific_id=#notific_id#\", Page: notifications_roles)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tDiv(Class: pull-right){\n                                Button(Body: LangRes(close), Class: btn btn-danger, Contract: Notifications_Roles_Finishing, Params: \"notific_id=#notific_id#\", Page: notifications_roles)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n                }\n            }\n        }\n        Div(Class: col-md-3)\n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu"
        }
    ],
    "parameters": [
        {
            "Name": "notification_closure",
            "Value": "single,multiple",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "notification_icon",
            "Value": "fa-bell,fa-comment,fa-envelope,fa-bookmark,fa-check,fa-exclamation-triangle,fa-info-circle",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "notification_type",
            "Value": "single,role",
            "Conditions": "ContractConditions(\"MainCondition\")"
        }
    ],
    "tables": []
}