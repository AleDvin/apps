{
    "name": "Basic application",
    "data": [
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "MenuItem(Title:$profile$, Page:profile_view, Icon:\"fa icon-user\")\nMenuGroup(Title:$membership$, Icon:\"fa icon-people\"){\n    MenuItem(Title:$membership$, Page:members_list, Icon:\"fa icon-people\")\n    MenuItem(Title:$request_membership$, Page:membership_ecosystems, Icon:\"fa fa-list-ul\")\n}\nMenuGroup(Title:$notifications$, Icon:\"icon-arrow-right\"){\n    MenuItem(Title:$single_notifics$, Page:notifications_single, Icon:\"fa fa-bell-o\")\n    MenuItem(Title:$role_notifics$, Page:notifications_roles, Icon:\"fa fa-bullhorn\")\n    MenuItem(Title:$test_page$, Page:notifications_testpage, Icon:\"icon-settings\")\n}\nMenuItem(Title:$roles$, Page:roles_list, Icon:\"fa fa-list-ul\")\nMenuGroup(Title:$admin$, Icon:\"icon-arrow-right\"){\n\tMenuItem(Title:$tokens_transfer$, Page:money_transfer, Icon:\"icon-energy\")\n\tMenuItem(Title:$new_ecosystem$, Page:ecosystem_new, Icon:\"icon-globe\")\n}\nMenuGroup(Title:$voting$, Icon:\"icon-arrow-right\"){\n    MenuItem(Title:$voting$, Page:voting_list, Icon:\"fa fa-edit\")\n}",
            "Name": "default_menu",
            "Type": "menu"
        },
        {
            "Name": "membership_requests",
            "Columns": "[{\"name\":\"member_id\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"ecosystem_id\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"request_status\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"membership_accept\\\", \\\"membership_decline\\\"},]",
            "Permissions": "{\"insert\": \"ContractConditions(\\\"MainCondition\\\")\", \"update\": \"ContractConditions(\\\"MainCondition\\\")\", \"new_column\": \"ContractConditions(\\\"MainCondition\\\")\"}",
            "Type": "tables"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "Div(content-wrapper){\r\n    SetTitle(Membership Request)\r\n\t\r\n\tDBFind(Name: notifications, Source: src_notific).Columns(\"page_params->request_id,sender->image_id,sender->member_id,sender->member_name\").Where(\"id = #notific_id#\").Vars(notific)\r\n    \r\n    If(#prefix_image_id#>0){\r\n        DBFind(Name: binaries, Source: src_binaries).Columns(\"id,data\").Where(\"id=#notific_sender_image_id#\").Vars(img)\r\n    }\r\n    \r\n    Div(row){\r\n        Div(col-sm-8 col-sm-offset-2 col-lg-6 col-lg-offset-3){\r\n            Form(panel panel-default){\r\n                Div(panel-heading text-center){\r\n                    Span(Class: h3, Body: Membership Request)\r\n                }\r\n                Div(panel-body){\r\n                    Div(form-group){\r\n                        Div(row){\r\n                            Div(col-md-12 mt-sm text-center){\r\n\t\t\t\t\t\t\t\tIf(#img_id#>0){\r\n\t\t\t\t\t\t\t\t\tImage(Src: \"#img_data#\", Class: img-circle).Style(width: 80px; border: 1px solid #5A5D63;)\r\n\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\tSpan(Class: fa icon-user fa-5x)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDiv(m0 h3 text-bold){#notific_sender_member_name#}\r\n\t\t\t\t\t\t\t\r\n                            }\r\n                        }\r\n                    }\r\n                    Div(list-group-item text-center){\r\n                        Div(text-muted m0 h5, Body: LangRes(address))\r\n                        Span(Class: h5 text-bold, Body: Address(#notific_sender_member_id#))\r\n                    }\r\n\t\t\t\t\tDiv(list-group-item text-center){\r\n                        Button(Class: btn btn-success, Body: Accept, Contract: \"membership_accept\", Page: default_page, Params: \"request_id=#notific_page_params_request_id#,notific_id=#notific_id#\")\r\n                        Button(Class: btn btn-danger, Body: Reject, Contract: \"membership_decline\", Page: default_page, Params: \"request_id=#notific_page_params_request_id#,notific_id=#notific_id#\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Name": "membership_admin_view",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "Div(content-wrapper){\r\n\r\n\tSetTitle(\"Membership: Ecosystems\")\r\n\r\n    If(GetVar(isSearch) == 1){\r\n        SetVar(Name: v_Where, Value: \"name='#v_Search#' and id != 1\")\r\n    }.Else{\r\n        SetVar(Name: v_Where, Value: \"id != 1\")\r\n        SetVar(Name: v_Search, Value: \"\")\r\n    }\r\n\r\n    Form(panel panel-primary){\r\n        Div(panel-body){\r\n            Div(row){\r\n                Div(col-md-1 mt-sm text-right){\r\n                    Label(For: Search){\r\n                        Span(Body: LangRes(name))\r\n                    }\r\n                }\r\n                Div(col-md-11){\r\n                    Div(input-group){\r\n                        Input(Name: Search, Value: #v_Search#)\r\n                        Div(input-group-btn){\r\n                            Button(Body: Em(Class: fa fa-search), Class: btn btn-default, Page: membership_ecosystems, PageParams: \"isSearch=1,v_Search=Val(Search)\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            DBFind(ecosystems, src_ecosystems).Ecosystem(1).Where(\"#v_Where#\").Custom(custom_actions) {\r\n                DBFind(membership_requests, src_requests).Where(\"member_id = #key_id# and ecosystem_id = #id# and request_status = 0\").Limit(1).Vars(\"req\")\r\n                If(GetVar(req_id) == \"\"){\r\n                    Button(Class: btn btn-primary pull-right, Body: Send Request, Contract: \"membership_send_request\", Page: membership_ecosystems, Params: \"ecosystem_num=#id#\")\r\n                }\r\n            }\r\n\t\t\t\r\n            Div(row){\r\n                Div(col-md-12){\r\n                    Table(Source: src_ecosystems, Columns: \"ID=id,$name$=name,=custom_actions\")\r\n                }\r\n            }\r\n\t\t\t\r\n            If(GetVar(isSearch) == 1){\r\n                Div(row){\r\n                    Div(col-md-12 mt-lg){\r\n                        Div(text-center){\r\n                            Button(Body: $view_all$, Class: btn btn-primary, Page: membership_ecosystems, PageParams: \"isSearch=0\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Name": "membership_ecosystems",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "Div(content-wrapper){\r\n    SetTitle(Membership Request)\r\n\t\r\n\tDBFind(Name: notifications, Source: src_notific).Columns(\"page_params->request_id,sender->image_id,sender->member_id,sender->member_name\").Where(\"id = #notific_id#\").Vars(notific)\r\n\tDBFind(Name: membership_requests, Source: src_requests).Where(\"id = #notific_page_params_request_id#\").Vars(\"req\")\r\n    \r\n    If(#prefix_image_id#>0){\r\n        DBFind(Name: binaries, Source: src_binaries).Columns(\"id,data\").Where(\"id=#notific_sender_image_id#\").Vars(img)\r\n    }\r\n    \r\n    Div(row){\r\n        Div(col-sm-8 col-sm-offset-2 col-lg-6 col-lg-offset-3){\r\n            Form(panel panel-default){\r\n                Div(panel-heading text-center){\r\n                    Span(Class: h3, Body: Membership Request)\r\n                }\r\n                Div(panel-body){\r\n                    Div(form-group){\r\n                        Div(row){\r\n                            Div(col-md-12 mt-sm text-center){\r\n\t\t\t\t\t\t\t\tIf(#img_id#>0){\r\n\t\t\t\t\t\t\t\t\tImage(Src: \"#img_data#\", Class: img-circle).Style(width: 80px; border: 1px solid #5A5D63;)\r\n\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\tSpan(Class: fa icon-user fa-5x)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDiv(m0 h3 text-bold){#notific_sender_member_name#}\r\n\t\t\t\t\t\t\t\r\n                            }\r\n                        }\r\n                    }\r\n                    If(#req_request_status# == 1){\r\n                        Div(list-group-item text-center){\r\n                            Span(Class: text-success h3){\r\n                                Request is accepted!\r\n                            }\r\n                        }\r\n                        Div(list-group-item text-center){\r\n                            Button(Class: btn btn-primary, Body: Add ecosystem to list, Contract: \"notifications_Close\", Params: \"notific_id=#notific_id#\", Page: \"@invite\", PageParams: \"ecosystem=#req_ecosystem_id#,page=default_page\")\r\n                        }\r\n                    }.Else{\r\n                       Div(list-group-item text-center){\r\n                            Span(Class: text-danger h3){\r\n                                Request is rejected!\r\n                            }\r\n                        }\r\n                        Div(list-group-item text-center){\r\n                            Button(Class: btn btn-primary, Body: OK, Contract: \"notifications_Close\", Params: \"notific_id=#notific_id#\", Page: default_page)\r\n                        } \r\n                    }\r\n\t\t\t\t\t\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Name": "membership_user_view",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract membership_accept {\r\n    data {\r\n        request_id int\r\n        notific_id int\r\n    }\r\n    conditions {\r\n\r\n    }\r\n    action {\r\n        notifications_Close(\"notific_id\", $notific_id)\r\n\r\n        var request map\r\n        request = DBFind(\"membership_requests\").Where(\"id = ?\", $request_id).Row()\r\n        DBUpdate(\"membership_requests\", $request_id, \"request_status\", 1)\r\n\r\n        var params map\r\n        params[\"request_id\"] = $request_id\r\n\r\n        notifications_Send(\"member_id,sender,icon_name,text_header,text_body,page_name,params_map\", request[\"member_id\"], 1, \"icon icon-user-follow\", \"Request is accepted\", \"Your request for membership is accepted\", \"membership_user_view\", params)\r\n    }\r\n}",
            "Name": "membership_accept",
            "Type": "contracts"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract membership_decline {\r\n    data {\r\n        request_id int\r\n        notific_id int\r\n    }\r\n    conditions {\r\n\r\n    }\r\n    action {\r\n        notifications_Close(\"notific_id\", $notific_id)\r\n\r\n        var request map\r\n        request = DBFind(\"membership_requests\").Where(\"id = ?\", $request_id).Row()\r\n        DBUpdate(\"membership_requests\", $request_id, \"request_status\", -1)\r\n\r\n        var params map\r\n        params[\"request_id\"] = $request_id\r\n\r\n        notifications_Send(\"member_id,sender,icon_name,text_header,text_body,page_name,params_map\", request[\"member_id\"], 1, \"icon icon-user-follow\", \"Request is rejected\", \"Your request for membership is rejected\", \"membership_user_view\", params)\r\n    }\r\n}",
            "Name": "membership_decline",
            "Type": "contracts"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract membership_send_request {\r\n    data {\r\n        ecosystem_num int\r\n    }\r\n    \r\n    conditions {\r\n        \r\n    }\r\n    \r\n    action {\r\n\r\n        var found int\r\n        found = DBFind(\"membership_requests\").Where(\"ecosystem_id = ? and member_id = ? and request_status = 0\", $ecosystem_num, $key_id)\r\n        \r\n        if Len(found) > 0 {\r\n            warning Sprintf(\"Request already sent.\", $ecosystem_num)\r\n        }\r\n\r\n        var request_id int\r\n        request_id = DBInsert(\"membership_requests\", \"member_id,ecosystem_id\", $key_id, $ecosystem_num)\r\n\r\n        var admin_json string\r\n        admin_json = DBFind(\"roles_participants\").Where(\"role->id = ? and deleted = 0\", 1).Ecosystem($ecosystem_num).One(\"member\")\r\n\r\n        var admin map\r\n        admin = JSONToMap(admin_json)\r\n\r\n        var notific_params map\r\n        notific_params[\"request_id\"] = request_id\r\n        \r\n        \r\n        notifications_Send(\"member_id,sender,icon_name,text_header,text_body,page_name,params_map\", admin[\"member_id\"], 1, \"icon icon-user-follow\", \"New request for membership\", \"View details\", \"membership_admin_view\", notific_params)\r\n    }\r\n}",
            "Name": "membership_send_request",
            "Type": "contracts"
        }
    ]
}