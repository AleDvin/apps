{
    "blocks": [],
    "contracts": [
        {
            "Name": "sysparams_RefreshInvestors",
            "Value": "contract sysparams_RefreshInvestors {\n    data {\n        role_id int\n    }\n    \n    conditions{\n        $limitInvestors = 3\n        \n        $founder = EcosysParam(\"founder_account\")\n        if Str($key_id) != $founder{\n            info \"You can not start to voting\"\n        }\n        \n        $role = DBFind(\"roles_list\").Where(\"id=?\", $role_id).Row()\n        if !$role{\n            warning \"Role not found\"\n        }\n        \n        $role_name = $role[\"role_name\"]\n        $role_type = Int($role[\"role_type\"])\n        \n    }\n    \n    action{\n        // remove old investors\n        DBUpdateExt(\"roles_assign\", \"role_id\", $role_id, \"delete\", 1)\n        \n        // get appointer\n        $appointerFind = DBFind(\"members\").Where(\"member_id=?\",$key_id)\n        $appointer = $appointerFind[0]\n        \n        // assign new investors\n        $investorsFind = DBFind(\"keys\").Order(\"amount desc, id\").Limit($limitInvestors)\n        $lenInvestors = Len($investorsFind)\n        \n        $i = 0\n        while($i < $lenInvestors){\n            $investor = $investorsFind[$i]\n            $memberFind = DBFind(\"members\").Where(\"member_id=?\", $investor[\"id\"])\n            if Len($memberFind) > 0{\n                $member = $memberFind[0]\n                DBInsert(\"roles_assign\", \"role_id,role_type,role_name,member_id,member_name,member_avatar,appointed_by_id,appointed_by_name,timestamp date_start,delete\", $role_id, $role_type, $role_name, $investor[\"id\"], $member[\"member_name\"], $member[\"avatar\"], $key_id, $appointer[\"member_name\"], $block_time, 0)\n            }\n            $i =$i+1\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "sysparams_NewVoting",
            "Value": "contract sysparams_NewVoting {\n    data {\n        v_name string\n        new_val string\n        \n        now_date string \"date\"\n        start_date string \"date\"\n        end_date string \"date\"\n    }\n    \n    conditions {\n        $voting_name = \"New system parameter\"\n        $description = \"Voting for the system parameter\"\n        $volume = 75\n        $quorum = 50\n        \n        $role_name = \"Investor with voting rights\"\n        $type_participants = 3 // role\n        $type_decision = 4 // formal decision\n        $table_to_written = \"system_parameters\"\n        $column_name = \"value\"\n    }\n    \n    action {\n        // create new voting\n        voting_CreateNew(\"voting_name,type_voting,description,type_participants,type_decision,now_date,start_time,start_date,end_date,end_time,volume,quorum\",\n            $voting_name, 2, $description, $type_participants, $type_decision, $now_date, \"00:00\", $start_date, $end_date, \"00:00\", $volume, $quorum)\n            \n            // get voting id\n            $ret_instance = DBFind(\"voting_instances\").Order(\"id DESC\")\n            if(Len($ret_instance) > 0){\n                $vals_instance = $ret_instance[0]\n                $votingID = Int($vals_instance[\"id\"])\n                \n                // set subject of voting\n                voting_SubjectFormal(\"votingID,description,table_to_written,row_id,column_name,written_value\",\n                    $votingID, $description, \"system_parameters\", 0, $v_name, $new_val)\n                    \n                    // search role\n                    $ret_role = DBFind(\"roles_list\").Where(\"role_name=$ and role_type=$ and delete=0\", $role_name, 3).Order(\"id\")\n                    if(Len($ret_role) > 0){\n                        $vals_role = $ret_role[0]\n                        $role_id = Int($vals_role[\"id\"])\n                        \n                        // refresh list of the investors in the role\n                        sysparams_RefreshInvestors(\"role_id\", $role_id)\n                        \n                        // add all participants from the role\n                        voting_Invite(\"votingID,var_id\", $votingID, $role_id)\n                    }\n                }\n            }\n        }",
            "Conditions": "ContractConditions(\"MainCondition\")"
        }
    ],
    "data": [],
    "languages": [],
    "menus": [
        {
            "Name": "default_menu",
            "Value": "MenuGroup(Title:$admin$, Icon:\"fa icon-settings\"){\n    MenuItem(Title: $sysparams_list$,Page:sysparams_list, Icon:\"fa icon-settings\")\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        }
    ],
    "pages": [
        {
            "Name": "sysparams_list",
            "Value": "Div(Class: content-wrapper){\n\n\tSetTitle($system_params$)\n\tDiv(breadcrumb){\n\t\tSpan(Class: text-muted, Body: $system_params$)\n\t}\n\n    Data(src_parameters,\"id,name\"){\n        1,\"gap_between_blocks\"\n        2,\"default_ecosystem_page\"\n        3,\"full_nodes\"\n        4,\"count_of_nodes\"\n        5,\"ecosystem_price\"\n        6,\"blockchain_url\"\n        7,\"max_block_size\"\n    }.Custom(custom_value){\n        SysParam(#name#)\n    }.Custom(actions){\n        Button(Body: $edit$, Class: btn btn-primary, Page: sysparams_voting, PageParams: \"params_id=#id#,params_name=#name#\")\n    }\n\n    Div(Class: panel panel-primary){\n        Form(){\n            Div(Class: list-group-item){\n                Table(src_parameters, \"$id$=id,$name$=name,$value$=custom_value,$actions$=actions\")\n            }\n        }           \n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu"
        },
        {
            "Name": "sysparams_voting",
            "Value": "Div(Class: content-wrapper){\n\n    SetTitle($voting$)\n    Div(Class: breadcrumb){\n        LinkPage($system_params$, sysparams_list)\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\n        Span(Class: text-muted, Body: $voting$)\n    }\n\n    If(#params_id# > 0){\n        Div(Class: row df f-valign){\n            Div(Class: col-md-3)\n            Div(Class: col-md-6){\n                Div(Class: panel panel-default){\n                    Form(){ \n                        Input(Name: now_date, Class: form-control hidden, Type: text, Value: Now(\"YYYY-MM-DD\"))\n                        Input(Name: start_date, Class: form-control hidden, Type: text, Value: Now(\"YYYY-MM-DD\", 3 days))\n                        Input(Name: end_date, Class: form-control hidden, Type: text, Value: Now(\"YYYY-MM-DD\", 21 days))\n\n                        Div(Class: list-group-item text-center){\n                            P(Class: h3 text-bold m0, Body: #params_name#)\n                        }\n                        Div(Class: list-group-item){\n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-3 mt-lg text-right){\n                                    Label(For: voting_name){\n                                        Span(Body: LangRes(value))\n                                    }\n                                }\n                                Div(Class: col-md-9 mc-sm text-left){\n                                    Input(Name: description, Class: form-control, Type: textarea, Value: SysParam(#params_name#))\n                                }\n                            }                   \n                        }\n                        Div(Class: list-group-item){\n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-3 mt-sm text-right){\n                                    Label(For: voting_name){\n                                        Span(Body: LangRes(new_value))\n                                    }\n                                }\n                                Div(Class: col-md-9 mc-sm text-left){\n                                    Input(Class: form-control, Type: text, Name: new_val)\n                                }\n                            }                   \n                        }\n                        Div(Class: panel-footer clearfix){\n                            Div(Class: pull-right){\n                                Button(Body: LangRes(back), Class: btn btn-default, Page: sysparams_list)\n                                Button(Body: LangRes(voting), Class: btn btn-primary, Contract: sysparams_NewVoting, Params: \"v_name=#params_name#,new_val=Val(new_val)\", Page: voting_list)\n                            }\n                        }\n\n                    }\n                }\n            }\n            Div(Class: col-md-3)\n        }\n    }.Else{\n        Div(Class: md-12 alert alert-danger text-center){\n            Span(Body: LangRes(attention))\n        }\n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu"
        }
    ],
    "parameters": [],
    "tables": []
}