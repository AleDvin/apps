{
    "blocks": [],
    "contracts": [
        {
            "Name": "voting_TemplateRun",
            "Value": "contract voting_TemplateRun{\n    data{\n        KeyId int \"optional\"\n        TemplateId int\n        Start string \"date\"\n        StartTime string \"date,optional\"\n        End string \"date\"\n        EndTime string \"date,optional\"\n    }\n    \n    func conditions{\n        $template = DBFind(\"voting_templates\").WhereId($TemplateId).Row()\n        if !$template{\n            warning \"Voting template not found\"\n        }\n        if $KeyId != 0{\n            $keyFind = DBFind(\"keys\").Where(\"id=?\", $KeyId).Row()\n            if !$keyFind{\n                warning \"Keyid not found\"\n            }\n        }\n        if $StartTime == \"\"{\n            $StartTime = \"00:00\"\n        }\n        if $EndTime == \"\"{\n            $EndTime = \"23:59\"\n        }\n        \n        $condition = $template[\"init_condition\"]\n        ContractConditions($condition)\n        \n        $candidateRoleName = $template[\"precondition\"]\n        $votersRoleName = $template[\"voters\"]\n        $votingName = $template[\"title\"]\n        $volume = Int($template[\"volume\"])\n        $quorum = Int($template[\"quorum\"])\n        $typeVoting = Int($template[\"type_voting\"])\n        $typeParticipants = Int($template[\"type_participants\"])\n        $typeDecision = Int($template[\"type_decision\"])\n        $vacancies = Int($template[\"vacancies\"])\n        \n        $desc = Sprintf(\"%v [#%v]\", $votingName, $TemplateId)\n\n        $contractAccept = $template[\"contract_accept\"]\n        $acceptParams = $template[\"contract_accept_params\"]\n        $contractReject = $template[\"contract_reject\"]\n        $rejectParams = $template[\"contract_reject_params\"]\n        \n        $isCreated = DBFind(\"voting_instances\").Where(\"name=? and description=? and delete=0\", $votingName, $desc).Row()\n        if $isCreated{\n            // info \"Voting already created\" // must uncomment on prod\n        }\n        \n        // if not special then use default\n        $defaultParams = Sprintf(\"VotingTemplateId->%v;KeyId->%v\", $TemplateId, $KeyId)\n        if Size($acceptParams) == 0{\n            $acceptParams = $defaultParams\n        }\n        if Size($rejectParams) == 0{\n            $rejectParams = $defaultParams\n        }\n    }\n    \n    func action{\n        var roleId int\n        roleId = DBFind(\"roles_list\").Where(\"role_name=? and delete=0\", $votersRoleName).One(\"id\")\n        \n        $voting_id = 0 // will be set in voting_CreateNew\n        voting_CreateNew(\"voting_name,type_voting,description,type_participants,type_decision,now_date,start_time,start_date,end_date,end_time,volume,quorum\", $votingName, $typeVoting, $desc, $typeParticipants, $typeDecision, $Start, $StartTime, $Start, $End, $EndTime, $volume, $quorum)\n        if $voting_id == 0 {\n            $voting_id = DBFind(\"voting_instances\").Where(\"voting_name=? and start_date=?\", $votingName, $Start).One(\"id\")\n            $voting_id = Int($voting_id)\n        }\n        // after success voting set Validator Role to Candidate\n        voting_SubjectCandidates(\"votingID,memberID\", $voting_id, $KeyId)\n        voting_SubjectSettings(\"votingID,roleID,vacancies,contract_reject,contract_accept,accept_params,reject_params\", $voting_id, roleId, $vacancies, \"\", $contractAccept, $acceptParams, $rejectParams)\n        $value = Sprintf(\"%v : %v\", $voting_id, roleId)\n        \n        voting_Invite(\"votingID,var_id\", $voting_id, roleId)\n        \n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "voting_TemplateStore",
            "Value": "contract voting_TemplateStore{\n    data{\n        Title string\n        TypeParticipants int\n        TypeVoting int\n        TypeDecision int\n        Volume int\n        Quorum int\n        Precondition string \"optional\" //old subject, any propertion\n        Subject string\n        Voters string\n        InitCondition string \"optional\"\n        Vacancies int\n        ContractAccept string \"optional\"\n        ParamsAccept string \"optional\"\n        ContractReject string \"optional\"\n        ParamsReject string \"optional\"\n    }\n    \n    func conditions{\n        if Size($InitCondition) > 0{\n            if !IsObject($InitCondition, $ecosystem_id){\n                warning \"Init condition not found\"\n            }\n        }\n        \n        if Size($Title) <3{\n            warning \"Please enter title\"\n        }\n        if $Volume <0 || $Volume > 100{\n            warning \"Wrong volume range\"\n        }\n        if $Quorum <0 || $Quorum > 100{\n            warning \"Wrong volume range\"\n        }\n        \n        if $Vacancies < 1 {\n            warning \"wrong number vacancies\"\n        }\n        \n        if Size($ContractAccept) > 0{\n            if !IsObject($ContractAccept, $ecosystem_id){\n                warning \"wrong contract on voting accept\"\n            }\n        }\n        if Size($ContractReject) > 0{\n            if !IsObject($ContractReject, $ecosystem_id){\n                warning \"wrong contract on voting accept\"\n            }\n        }\n    }\n    \n    func action{\n        DBInsert(\"voting_templates\", \"title,precondition,subject,voters,init_condition,volume,quorum,type_voting,type_participants,type_decision,vacancies,contract_accept,contract_accept_params,contract_reject,contract_reject_params\", $Title,$Precondition,$Subject,$Voters,$InitCondition,$Volume,$Quorum,$TypeVoting,$TypeParticipants,$TypeDecision,$Vacancies,$ContractAccept,$ParamsAccept,$ContractReject,$ParamsReject)\n        \n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        }
    ],
    "data": [
        {
            "Table": "voting_templates",
            "Columns": [
                "type",
                "quorum",
                "type_voting",
                "contract_reject",
                "volume",
                "type_decision",
                "contract_accept",
                "type_participants",
                "subject",
                "precondition",
                "init_condition",
                "title",
                "voters",
                "type_id",
                "vacancies",
                "contract_accept_params",
                "contract_reject_params"
            ],
            "Data": [
                [
                    "NULL",
                    "50",
                    "2",
                    "",
                    "50",
                    "2",
                    "sysparams_AcceptRole",
                    "3",
                    "Validator",
                    "Candidate for validators",
                    "MainCondition",
                    "Voting for Validator",
                    "Delegate",
                    "0",
                    "1",
                    "",
                    ""
                ]
            ]
        }
    ],
    "languages": [],
    "menus": [
        {
            "Name": "default_menu",
            "Value": "MenuGroup(Title:$voting$, Icon:\"fa fa-edit\"){\n    MenuItem(Title:$voting_templates$, Page:voting_templates, Icon:\"fa icon-pin\")\n}",
            "Conditions": "ContractAccess(\"@1EditMenu\")"
        }
    ],
    "pages": [
        {
            "Name": "voting_template_create",
            "Value": "Div(content-wrapper){\n\n    SetTitle($template_create$)\n\tDiv(Class: breadcrumb){\n\t\tLinkPage($voting_templates$, voting_templates)\n\t\tSpan(/).Style(margin-right: 10px; margin-left: 10px;)\n\t\tSpan(Class: text-muted, Body: $template_create$)\n\t}\n\n    If(#TemplateId#>0){\n        DBFind(Name:voting_templates, Source: templates).Where(id=#TemplateId#).Vars(t)\n    }.Else{\n        SetVar(t_id, 0)\n    }\n\n    Div(row){\n        Div(col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3){\n            Div(panel panel-primary){\n                Div(panel-heading){LangRes(new_template)}\n                Form(panel-body){\n                    Div(form-group){\n                        Div(row){\n                            Div(col-md-4 mt-sm text-right){\n                                Label(For: Title){LangRes(name)}\n                            }\n                            Div(col-md-8 text-left){\n                                If(#t_id#>0){\n                                    SetVar(title, #t_title#)\n                                }.Else{\n                                    SetVar(title, New voting)\n                                }\n                                Input(Name: Title, Class: form-control, Type: text, Value: #title#)\n                            }\n                        }\n                    }\n                    \n                    Div(form-group){\n                        Div(row){\n                            Div(col-md-4 mt-sm text-right){\n                                Label(For: TypeParticipants){LangRes(participants)}\n                            }\n                            Div(col-md-8 text-left){\n                                If(#t_id#>0){\n                                    SetVar(typepart, #t_type_participants#)\n                                }.Else{\n                                    SetVar(typepart, 0)\n                                }\n                                EcosysParam(Name: type_voting_participants, Source: type_voting_participants)\n                                Select(Name: TypeParticipants, Source: type_voting_participants, NameColumn: name, ValueColumn: id, Value: #typepart#)\n                            }\n                        }\n                    }\n                    \n                    Div(form-group){\n                        Div(row){\n                            Div(col-md-4 mt-sm text-right){\n                                Label(For: TypeVoting){LangRes(voting_type)}\n                            }\n                            Div(col-md-8 text-left){\n                                If(#t_id#>0){\n                                    SetVar(typevoting, #t_type_voting#)\n                                }.Else{\n                                    SetVar(typevoting, 0)\n                                }\n                                EcosysParam(Name: type_voting, Source: type_voting)\n                                Select(Name: TypeVoting, Source: type_voting, NameColumn: name, ValueColumn: id, Value: #typevoting#)\n                            }\n                        }\n                    }\n                    \n                    Div(form-group){\n                        Div(row){\n                            Div(col-md-4 mt-sm text-right){\n                                Label(For: TypeDecision){LangRes(decision)}\n                            }\n                            Div(col-md-8 text-left){\n                                If(#t_id#>0){\n                                    SetVar(typedec, #t_type_decision#)\n                                }.Else{\n                                    SetVar(typedec, 0)\n                                }\n                                EcosysParam(Name: type_voting_decisions, Source: type_voting_decisions)\n                                Select(Name: TypeDecision, Source: type_voting_decisions, NameColumn: name, ValueColumn: id, Value: typedec)\n                            }\n                        }\n                    }\n                    \n                    Div(form-group){\n                        Div(row){\n                            Div(col-md-4 mt-sm text-right){\n                                Label(For: Volume){LangRes(voting_volume)}\n                            }\n                            Div(col-md-8 text-left){\n                                If(#t_id#>0){\n                                    SetVar(volume, #t_volume#)\n                                }.Else{\n                                    SetVar(volume, 50)\n                                }\n                                Input(Name: Volume, Class: form-control, Type: number, Value: #volume#).Validate(minLength: 1)\n                                InputErr(Name: Volume, minLength: Please enter voting volume)\n                                \n                                P(Class: m0 text-muted, Body: $voting_volume_desc$)\n                            }\n                        }\n                    }\n                    \n                    Div(form-group){\n                        Div(row){\n                            Div(col-md-4 mt-sm text-right){\n                                Label(For: quorum){LangRes(voting_quorum)}\n                            }\n                            Div(col-md-8 text-left){\n                                If(#t_id#>0){\n                                    SetVar(quorum, #t_quorum#)\n                                }.Else{\n                                    SetVar(quorum, 50)\n                                }\n                                Input(Name: Quorum, Class: form-control, Type: number, Value: #quorum#).Validate(minLength: 1)\n                                InputErr(Name: Quorum, minLength: Please enter voting quorum)\n                                P(Class: m0 text-muted, Body: $voting_quorum_desc$)\n                            }\n                        }\n                    }\n                    \n                    Div(form-group){\n                        Div(row){\n                            Div(col-md-4 mt-sm text-right){\n                                Label(For: Subject){LangRes(voting_subject)}\n                            }\n                            Div(col-md-8 text-left){\n                                If(#t_id#>0){\n                                    SetVar(subj, #t_subject#)\n                                }.Else{\n                                    SetVar(subj, \"\")\n                                }\n                                Input(Name: Subject, Class: form-control, Type: text, Value: #subj#)\n                            }\n                        }\n                    }\n                    \n                    Div(form-group){\n                        Div(row){\n                            Div(col-md-4 mt-sm text-right){\n                                Label(For: Voters){LangRes(voters)}\n                            }\n                            Div(col-md-8 text-left){\n                                If(#t_id#>0){\n                                    SetVar(voters, #t_voters#)\n                                }.Else{\n                                    SetVar(voters, \"\")\n                                }\n                                Input(Name: Voters, Class: form-control, Type: text, Value: #voters#)\n                            }\n                        }\n                    }\n                    \n                    \n                    Div(form-group){\n                        Div(row){\n                            Div(col-md-4 mt-sm text-right){\n                                Label(For: Vacancies){LangRes(vacancies)}\n                            }\n                            Div(col-md-8 text-left){\n                                If(#t_id#>0){\n                                    SetVar(vacancies, #t_vacancies#)\n                                }.Else{\n                                    SetVar(vacancies, 1)\n                                }\n                                Input(Name: Vacancies, Class: form-control, Type: number, #vacancies#)\n                            }\n                        }\n                    }\n                    \n                    Div(form-group){\n                        Div(row){\n                            Div(col-md-4 mt-sm text-right){\n                                Label(For: InitCondition){LangRes(voting_init_condition)}\n                            }\n                            Div(col-md-8 text-left){\n                                If(#t_id#>0){\n                                    SetVar(initcon, #t_init_condition#)\n                                }.Else{\n                                    SetVar(initcon, \"\")\n                                }\n                                Input(Name: InitCondition, Class: form-control, Type: text, Value: #initcon#)\n                                P(Class: m0 text-muted, Body: $voting_init_condition_desc$)\n                            }\n                        }\n                    }\n                    \n                    Div(form-group){\n                        Div(row){\n                            Div(col-md-4 mt-sm text-right){\n                                Label(For: ContractAccept){LangRes(voting_contract_accept)}\n                            }\n                            Div(col-md-8){\n                                Div(row){\n                                    If(#t_id#>0){\n                                        SetVar(conacc, #t_contract_accept#)\n                                        SetVar(accpar, #t_contract_accept_params#)\n                                    }.Else{\n                                        SetVar(conacc, \"\")\n                                        SetVar(accpar, \"\")\n                                    }\n                                    Div(col-md-6){\n                                        Input(Name: ContractAccept, Class: form-control, Type: text,Placeholder: contract, Value: #conacc#)\n                                    }\n                                    Div(col-md-6){\n                                        Input(Name: ParamsAccept, Class: form-control, Type: text,Placeholder: arguments, Value: #accpar#)\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    \n                    Div(form-group){\n                        Div(row){\n                            Div(col-md-4 mt-sm text-right){\n                                Label(For: ContractReject){LangRes(voting_contract_reject)}\n                            }\n                            Div(col-md-8){\n                                Div(row){\n                                    If(#t_id#>0){\n                                        SetVar(conrej, #t_contract_reject#)\n                                        SetVar(rejpar, #t_contract_reject_params#)\n                                    }.Else{\n                                        SetVar(conrej, \"\")\n                                        SetVar(rejpar, \"\")\n                                    }\n                                    Div(col-md-6){\n                                        Input(Name: ContractReject, Class: form-control, Type: text, Placeholder: contract, Value: #conrej#)\n                                    }\n                                    Div(col-md-6){\n                                        Input(Name: ParamsReject, Class: form-control, Type: text, Placeholder: arguments, Value: #rejpar#)\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n\t\t\t\t\n\t\t\t\tDiv(panel-footer clearfix){\n\t\t\t\t\tDiv(pull-right){\n\t\t\t\t\t\tButton(Body: LangRes(back), Class: btn btn-default, Page: voting_templates)\n\t\t\t\t\t\tButton(Body: LangRes(create), Class: btn btn-primary, Page: voting_templates, Contract: voting_TemplateStore)\n\t\t\t\t\t}\n\t\t\t\t}\n            }\n        }\n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu"
        },
        {
            "Name": "voting_template_start",
            "Value": "Div(content-wrapper){\n\n\tSetTitle($voting_start$)\n\tDiv(Class: breadcrumb){\n\t\tLinkPage($voting_templates$, voting_templates)\n\t\tSpan(/).Style(margin-right: 10px; margin-left: 10px;)\n\t\tSpan(Class: text-muted, Body: $voting_start$)\n\t}\n\n\tIf(#TemplateId#>0){\n\t\tDBFind(Name:voting_templates, Source: templates).Where(id=#TemplateId#).Vars(t)\n\t\tDiv(row){\n\t\t\tDiv(col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3){\n\t\t\t\tForm(panel panel-primary){\n\t\t\t\t\tDiv(panel-heading){LangRes(voting_start)}\n\t\t\t\t\tDiv(panel-body){\n\t\t\t\t\t\tDiv(form-group){\n\t\t\t\t\t\t\tDiv(row){\n\t\t\t\t\t\t\t\tDiv(col-md-4 mt-sm text-right){\n\t\t\t\t\t\t\t\t\tLabel(For: Title){LangRes(name)}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tDiv(col-md-8 mt-sm text-left){\n\t\t\t\t\t\t\t\t\t#t_title#\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tDiv(row){\n\t\t\t\t\t\t\t\tDiv(col-md-4 mt-sm text-right){\n\t\t\t\t\t\t\t\t\tLabel(For: TypeParticipants){LangRes(participants)}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tDiv(col-md-8 mt-sm text-left){\n\t\t\t\t\t\t\t\t\tEcosysParam(Name: type_voting_participants, Index: #t_type_participants#)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tDiv(row){\n\t\t\t\t\t\t\t\tDiv(col-md-4 mt-sm text-right){\n\t\t\t\t\t\t\t\t\tLabel(For: TypeVoting){LangRes(voting_type)}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tDiv(col-md-8 mt-sm text-left){\n\t\t\t\t\t\t\t\t\tEcosysParam(Name: type_voting, Index: #t_type_voting#)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tDiv(row){\n\t\t\t\t\t\t\t\tDiv(col-md-4 mt-sm text-right){\n\t\t\t\t\t\t\t\t\tLabel(For: TypeDecision){LangRes(decision)}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tDiv(col-md-8 mt-sm text-left){\n\t\t\t\t\t\t\t\t\tEcosysParam(Name: type_voting_decisions, Index: #t_type_decision#)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tDiv(row){\n\t\t\t\t\t\t\t\tDiv(col-md-4 mt-sm text-right){\n\t\t\t\t\t\t\t\t\tLabel(For: Volume){LangRes(voting_volume)}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tDiv(col-md-8 mt-sm text-left){\n\t\t\t\t\t\t\t\t\t#t_volume#\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tDiv(row){\n\t\t\t\t\t\t\t\tDiv(col-md-4 mt-sm text-right){\n\t\t\t\t\t\t\t\t\tLabel(For: quorum){LangRes(voting_quorum)}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tDiv(col-md-8 mt-sm text-left){\n\t\t\t\t\t\t\t\t\t#t_quorum#\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tDiv(row){\n\t\t\t\t\t\t\t\tDiv(col-md-4 mt-sm text-right){\n\t\t\t\t\t\t\t\t\tLabel(For: Subject){LangRes(voting_subject)}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tDiv(col-md-8 mt-sm text-left){\n\t\t\t\t\t\t\t\t\t#t_subject#\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tDiv(row){\n\t\t\t\t\t\t\t\tDiv(col-md-4 mt-sm text-right){\n\t\t\t\t\t\t\t\t\tLabel(For: Voters){LangRes(voters)}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tDiv(col-md-8 mt-sm text-left){\n\t\t\t\t\t\t\t\t\t#t_voters#\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tDiv(row){\n\t\t\t\t\t\t\t\tDiv(col-md-4 mt-sm text-right){\n\t\t\t\t\t\t\t\t\tLabel(For: Vacancies){LangRes(vacancies)}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tDiv(col-md-8 mt-sm text-left){\n\t\t\t\t\t\t\t\t\t#t_vacancies#\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tDiv(row){\n\t\t\t\t\t\t\t\tDiv(col-md-4 mt-sm text-right){\n\t\t\t\t\t\t\t\t\tLabel(For: InitCondition){LangRes(init_condition)}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tDiv(col-md-8 mt-sm text-left){\n\t\t\t\t\t\t\t\t\t#t_init_condition#\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tIf(#t_contract_accept#!=\"\"){\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tDiv(row){\n\t\t\t\t\t\t\t\t\tDiv(col-md-4 mt-sm text-right){\n\t\t\t\t\t\t\t\t\t\tLabel(For: ContractAccept){LangRes(voting_contract_accept)}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tDiv(col-md-8){\n\t\t\t\t\t\t\t\t\t\t#t_contract_accept#\n\t\t\t\t\t\t\t\t\t\tIf(#t_contract_accept_params#!=\"\"){\n\t\t\t\t\t\t\t\t\t\t\t(#t_contract_accept_params#)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tIf(#t_contract_reject#!=\"\"){\n\t\t\t\t\t\t\t\tDiv(row){\n\t\t\t\t\t\t\t\t\tDiv(col-md-4 mt-sm text-right){\n\t\t\t\t\t\t\t\t\t\tLabel(For: ContractReject){LangRes(voting_contract_reject)}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tDiv(col-md-8){\n\t\t\t\t\t\t\t\t\t\t#t_contract_reject#\n\t\t\t\t\t\t\t\t\t\tIf(#t_contract_reject_params#!=\"\"){\n\t\t\t\t\t\t\t\t\t\t\t(#t_contract_reject_params#)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tDiv(row){\n\t\t\t\t\t\t\t\tDiv(col-md-4 mt-sm text-right){\n\t\t\t\t\t\t\t\t\tLabel(For: Precondition){LangRes(voting_precondition)}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tDiv(col-md-8 mt-sm text-left){\n\t\t\t\t\t\t\t\t\t#t_precondition#\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tDiv(row){\n\t\t\t\t\t\t\t\tDiv(col-md-4 mt-sm text-right){\n\t\t\t\t\t\t\t\t\tLabel(For: Start){LangRes(date_start)}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tDiv(col-md-8 mt-sm text-left){\n\t\t\t\t\t\t\t\t\tInput(Name:Start, Type: date)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tDiv(row){\n\t\t\t\t\t\t\t\tDiv(col-md-4 mt-sm text-right){\n\t\t\t\t\t\t\t\t\tLabel(For: End){LangRes(date_end)}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tDiv(col-md-8 mt-sm text-left){\n\t\t\t\t\t\t\t\t\tInput(Name:End, Type: date)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tInput(Name:StartTime, Type: hidden, Value: Now(\"HH:MI\", 15 minutes))\n\t\t\t\t\tDiv(panel-footer clearfix){\n\t\t\t\t\t\tDiv(pull-left){\n\t\t\t\t\t\t\tButton(Body: LangRes(copy), Class: btn btn-default, Page: voting_template_create, PageParams: \"TemplateId=#TemplateId#\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\tDiv(pull-right){\n\t\t\t\t\t\t\tButton(Body: LangRes(back), Class: btn btn-default, Page: voting_templates)\n\t\t\t\t\t\t\tButton(Body: LangRes(voting_start), Class: btn btn-primary, Page: voting_list, Contract: voting_TemplateRun, Params: \"TemplateId=#TemplateId#\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}.Else{\n\t\tDiv(col-md-12 alert alert-danger text-center){\n\t\t\tLangRes(attention)\n\t\t}\n\t}\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu"
        },
        {
            "Name": "voting_templates",
            "Value": "Div(content-wrapper){\n    SetTitle($voting_templates$)\n\tDiv(breadcrumb){\n\t\tSpan(Class: text-muted, Body: $voting_templates$)\n\t}\n\n    DBFind(Name:voting_templates, Source: templates).Order(id desc).Custom(_participants){\n        EcosysParam(Name:type_voting_participants, #type_participants#)\n    }.Custom(_decision){\n        EcosysParam(Name:type_voting_decisions, #type_decision#)\n    }.Custom(_type){\n        EcosysParam(Name:type_voting, #type_voting#)\n    }.Custom(_buttons){\n        Button(Class: btn btn-default, Page: voting_template_start, PageParams: \"TemplateId=#id#\", Body: $use$)\n    }\n\n    Div(Class: panel panel-primary){\n        Form(){\n            Div(Class: list-group-item){ \n                Table(Source: templates, Columns:\"$title$=title,$voting_subject$=subject,$voters$=voters,$volume$=volume,$quorum$=quorum,$voting_type$=_type,$participants$=_participants,$decision$=_decision,$vacancies$=vacancies,$contract_accept$=contract_accept,$contract_reject$=contract_reject,=_buttons\")\n            }\n            Div(Class: panel-footer clearfix){\n                Div(Class: pull-right){\n                    Button(Body: LangRes(create), Class: btn btn-primary, Page: voting_template_create)\n                }\n            }\n        }\n    }\n}",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu"
        }
    ],
    "parameters": [],
    "tables": [
        {
            "Name": "voting_templates",
            "Columns": "[{\"name\":\"voters\",\"type\":\"varchar\",\"conditions\":\"true\"},{\"name\":\"contract_reject\",\"type\":\"varchar\",\"conditions\":\"true\"},{\"name\":\"type_participants\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"init_condition\",\"type\":\"varchar\",\"conditions\":\"true\"},{\"name\":\"contract_reject_params\",\"type\":\"varchar\",\"conditions\":\"true\"},{\"name\":\"type\",\"type\":\"varchar\",\"conditions\":\"true\"},{\"name\":\"title\",\"type\":\"varchar\",\"conditions\":\"true\"},{\"name\":\"precondition\",\"type\":\"varchar\",\"conditions\":\"true\"},{\"name\":\"type_decision\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"contract_accept_params\",\"type\":\"varchar\",\"conditions\":\"true\"},{\"name\":\"quorum\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"subject\",\"type\":\"varchar\",\"conditions\":\"true\"},{\"name\":\"type_voting\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"contract_accept\",\"type\":\"varchar\",\"conditions\":\"true\"},{\"name\":\"volume\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"type_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"vacancies\",\"type\":\"number\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"
        }
    ]
}