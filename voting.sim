{
    "pages": [
        {
            "Name": "voting_list",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu",
            "Value": "Div(Class: content-wrapper){\r\n\r\n\tSetTitle($voting$)\r\n\tDiv(breadcrumb){\r\n\t\tSpan(Class: text-muted, Body: $voting$)\r\n\t}\r\n\r\n    If(GetVar(isSearch) == 1){\r\n        SetVar(Name: v_Where, Value: \"name='#v_Search#' and delete = 0\")\r\n    }.Else{\r\n        SetVar(Name: v_Where, Value: \"delete=0\")\r\n\t\tSetVar(Name: v_Search, Value: \"\")\r\n    }\r\n\r\n\tDBFind(Name: voting_instances, Source: src_voting_instances).Custom(custom_id){\r\n\t    Span(Body: #id#)\r\n\t\tSetVar(Name: vDateNow, Value: Now(\"YYYY-MM-DD HH:MI\")) \r\n\t\tSetVar(Name: vStartDate, Value: DateTime(DateTime: #startdate#, Format: \"YYYY-MM-DD HH:MI\"))\r\n\t\tSetVar(Name: vEndDate, Value: DateTime(#enddate#, \"YYYY-MM-DD HH:MI\")) \r\n\t\tSetVar(Name: vCmpStartDate, Value: CmpTime(#vStartDate#,#vDateNow#)) \r\n\t\tSetVar(Name: vCmpEndDate, Value: CmpTime(#vEndDate#,#vDateNow#))\r\n\t}.Custom(custom_name){\r\n\t\tButton(Class: btn btn-link, Page: voting_view, PageParams: \"vID=#id#\"){\r\n\t\t\tSpan(Class: h5 text-bold, Body: #name#)\r\n\t\t}\r\n\t}.Custom(custom_subject){\r\n\t\tIf(Or(#vCmpStartDate#<=0,#type_voting#==2)){\r\n\t\t\tSpan(Class: h6, Body: EcosysParam(Name: type_voting_decisions, Index: #typedecision#)).Style(margin-left: 20px;)\r\n\t\t}.Else{\r\n\t\t\tIf(#typedecision# == 1){\r\n\t\t\t\tButton(Class: btn btn-link, Page: voting_decision_candidates, PageParams: \"vID=#id#\"){\r\n\t\t\t\t\tSpan(Class: h6 text-bold, Body: EcosysParam(Name: type_voting_decisions, Index: #typedecision#))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tIf(#typedecision# == 2){\r\n\t\t\t\tButton(Class: btn btn-link, Page: voting_decision_election, PageParams: \"vID=#id#\"){\r\n\t\t\t\t\tSpan(Class: h6 text-bold, Body: EcosysParam(Name: type_voting_decisions, Index: #typedecision#))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tIf(#typedecision# == 3){\r\n\t\t\t\tButton(Class: btn btn-link, Page: voting_decision_document, PageParams: \"vID=#id#\"){\r\n\t\t\t\t\tSpan(Class: h6 text-bold, Body: EcosysParam(Name: type_voting_decisions, Index: #typedecision#))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tIf(#typedecision# == 4){\r\n\t\t\t\tButton(Class: btn btn-link, Page: voting_decision_formal, PageParams: \"vID=#id#\"){\r\n\t\t\t\t\tSpan(Class: h6 text-bold, Body: EcosysParam(Name: type_voting_decisions, Index: #typedecision#))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tIf(#typedecision# == 5){\r\n\t\t\t\tButton(Class: btn btn-link, Page: voting_decision_contract, PageParams: \"vID=#id#\"){\r\n\t\t\t\t\tSpan(Class: h6 text-bold, Body: EcosysParam(Name: type_voting_decisions, Index: #typedecision#))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}.Custom(custom_participants){\r\n\t\tIf(Or(#vCmpStartDate#<=0,#type_voting#==2)){\r\n\t\t\tSpan(Class: h6, Body: EcosysParam(Name: type_voting_participants, Index: #typeparticipants#)).Style(margin-left: 20px;)\r\n\t\t}.Else{\r\n\t\t\tButton(Class: btn btn-link, Page: voting_invite, PageParams: \"vID=#id#\"){\r\n\t\t\t\tSpan(Class: h6 text-bold, Body: EcosysParam(Name: type_voting_participants, Index: #typeparticipants#))\r\n\t\t\t}\r\n\t\t}\r\n\t}.Custom(custom_notifics){\r\n\t\tIf(#flag_notifics# == 1){\r\n\t\t\tSpan(Class: text-bold, Body: LangRes(yes))\r\n\t\t}.Else{\t\r\n\t\t\tIf(And(#flag_success#!=1,#vCmpEndDate#>0,#vCmpStartDate#<0,#creator_id#==#key_id#)){\r\n\t\t\t\tButton(Body: LangRes(send), Class: btn btn-primary, Contract: voting_SendNotifics, Params: \"votingID=#id#\", Page: voting_list)\r\n\t\t\t}.Else{\r\n\t\t\t\tSpan(Class: text-bold, Body: LangRes(no))\r\n\t\t\t}\r\n\t\t}\r\n\t}.Custom(custom_creator){\r\n        Button(Class: btn btn-link, Page: profile_view, PageParams: \"v_member_id=#creator_id#\"){\r\n            Image(Src: \"#creator_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\r\n            Span(Class: h5 text-bold, Body: #creator_name#)\r\n        }\r\n\t}.Custom(custom_date){\r\n\t\tIf(#vCmpStartDate# < 0){\r\n\t\t\tDiv(Class: text-muted, Body: DateTime(DateTime: #startdate#, Format: \"DD.MM.YYYY HH:MI\"))\r\n\t\t}.Else{\t\r\n\t\t\tDiv(Class: text-bold, Body: DateTime(DateTime: #startdate#, Format: \"DD.MM.YYYY HH:MI\"))\r\n\t\t} \r\n\t\tIf(#vCmpEndDate# < 0){\r\n\t\t\tDiv(Class: text-muted, Body: DateTime(DateTime: #enddate#, Format: \"DD.MM.YYYY HH:MI\"))\r\n\t\t}.Else{\r\n\t\t\tDiv(Class: text-bold, Body: DateTime(DateTime: #enddate#, Format: \"DD.MM.YYYY HH:MI\"))\r\n\t\t}\r\n\t}.Custom(custom_type){\r\n\t\tSpan(Class: h6, Body: EcosysParam(Name: type_voting, Index: #type_voting#))\r\n\t}.Custom(custom_progress){\r\n\t\tDiv(Class: text-center h5 text-bold, Body: #percent_success# %)\r\n\t}.Custom(custom_decision){\r\n\t\tIf(#flag_decision# == 0){\r\n\t\t\tIf(And(#vCmpEndDate#<0,#creator_id#==#key_id#)){\r\n\t\t\t\tButton(Body: LangRes(decision), Class: btn btn-primary, Contract: voting_CheckDecision, Params: \"votingID=#id#\", Page: voting_list)\r\n\t\t\t}.Else{\r\n\t\t\t\tSpan(Class: text-muted, Body: LangRes(no))\r\n\t\t\t}\r\n\t\t}\r\n\t\tIf(#flag_decision# == -2){\r\n\t\t\tSpan(Class: text-muted, Body: LangRes(not_enough_votes))\r\n\t\t}\r\n\t\tIf(#flag_decision# == 1){\r\n\t\t\tSpan(Class: text-success, Body: LangRes(accepted))\r\n\t\t}\r\n\t\tIf(#flag_decision# == -1){\r\n\t\t\tSpan(Class: text-danger, Body: LangRes(rejected))\r\n\t\t}\r\n\t}.Custom(custom_status){\r\n\t\tIf(#flag_success# == 1){ \r\n\t\t\tSpan(Class: text-success, Body: LangRes(success))\r\n\t\t}.Else{\t\r\n\t\t\tIf(#vCmpEndDate# < 0){\r\n\t\t\t\tSpan(Class: text-muted, Body: LangRes(finished))\r\n\t\t\t}.Else{\r\n\t\t\t\tIf(#vCmpStartDate# < 0){ \r\n\t\t\t\t\tButton(Class: btn btn-link, Page: voting_view, PageParams: \"vID=#id#\"){\r\n\t\t\t\t\t\tSpan(Class: h4 text-bold, Body: Em(Class: fa icon-eye))\r\n\t\t\t\t\t}\r\n\t\t\t\t}.Else{\r\n\t\t\t\t\tSpan(Class: text-warning, Body: LangRes(waiting))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\t\r\n\t}.Custom(actions){\r\n        Button(Body: Em(Class: fa fa-close), Class: btn btn-danger, Contract: voting_Delete, Params: \"votingID=#id#\", Page: voting_list)\r\n\t}.Where(#v_Where#).Order(id)\r\n\r\n    Div(Class: panel panel-primary){\r\n        Form(){\r\n            Div(Class: list-group-item){\r\n                Div(Class: row df f-valign){\r\n                    Div(Class: col-md-1 mt-sm text-right){\r\n                        Label(For: Search){\r\n                            Span(Body: LangRes(name))\r\n                        }\r\n                    }\r\n                    Div(Class: col-md-11 mc-sm){\r\n                        Div(Class: input-group){\r\n                            Input(Class: form-control, Type: text, Name: Search, Value: #v_Search#)\r\n                            Div(Class: input-group-btn){\r\n                                Button(Body: Em(Class: fa fa-search), Class: btn btn-default, Page: voting_list, PageParams: \"isSearch=1,v_Search=Val(Search)\")\r\n                            }\r\n                        }\r\n                    }\r\n                }  \r\n            }\r\n\r\n            Div(Class: list-group-item){ \r\n                Table(src_voting_instances, \"$id$=custom_id,$name$=custom_name,$type$=custom_type,$subject_voting$=custom_subject,$participants$=custom_participants,$notifications$=custom_notifics,$creator$=custom_creator,$date_start$ / $date_end$=custom_date,$progress$=custom_progress,$decision$=custom_decision,$status$=custom_status,$actions$=actions\")\r\n                If(GetVar(isSearch) == 1){\r\n                    Div(Class: text-center){  \r\n                        Button(Body: $view_all$, Class: btn btn-primary, Page: voting_list, PageParams: \"isSearch=0\")\r\n                    }\r\n                }\r\n            }\r\n\r\n            Div(Class: panel-footer clearfix){\r\n                Div(Class: pull-right){\r\n                    Button(Body: LangRes(create), Class: btn btn-primary, Page: voting_create)\r\n                }\r\n            }\r\n            \r\n        }           \r\n    }\r\n}"
        },
        {
            "Name": "voting_create",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu",
            "Value": "Div(Class: content-wrapper){\r\n\r\n\tSetTitle($new_voting$)\r\n\tDiv(Class: breadcrumb){\r\n\t\tLinkPage($voting$, voting_list)\r\n\t\tSpan(/).Style(margin-right: 10px; margin-left: 10px;)\r\n\t\tSpan(Class: text-muted, Body: $new_voting$)\r\n\t}\r\n\r\n    Div(Class: row df f-valign){\r\n        Div(Class: col-md-3)\r\n        Div(Class: col-md-6){\r\n\t\t\r\n            Div(Class: panel panel-primary){\r\n                Div(Class: panel-heading, Body: LangRes(new_voting))\r\n                Form(){\r\n\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                \t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: voting_name){\r\n                                    Span(Body: LangRes(name))\r\n                                }\r\n                \t\t\t}\r\n                \t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n                \t\t\t    Input(Name: voting_name, Class: form-control, Type: text, Value: New voting)\r\n                \t\t\t}\r\n                        }                   \r\n                    }\r\n\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                \t\t\tDiv(Class: col-md-3 mt-lg text-right){\r\n                                Label(For: description){\r\n                                    Span(Body: LangRes(description))\r\n                                }\r\n                            }\r\n                \t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n                \t\t\t    Input(Name: description, Class: form-control, Type: textarea, Value: no)\r\n                \t\t\t}\r\n                        }                      \r\n                    }\r\n\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                \t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: type_participants){\r\n                                    Span(Body: LangRes(participants))\r\n                                }\r\n                \t\t\t}\r\n                \t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n                                EcosysParam(Name: type_voting_participants, Source: type_voting_participants)\r\n                \t\t\t    Select(Name: type_participants, Source: type_voting_participants, NameColumn: name, ValueColumn: id)\r\n                \t\t\t}\r\n                        }  \r\n                    }\r\n\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                \t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: type_decision){\r\n                                    Span(Body: LangRes(decision))\r\n                                }\r\n                \t\t\t}\r\n                \t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n                                EcosysParam(Name: type_voting_decisions, Source: type_voting_decisions)\r\n                \t\t\t    Select(Name: type_decision, Source: type_voting_decisions, NameColumn: name, ValueColumn: id)\r\n                \t\t\t}\r\n                        }                       \r\n                    }\r\n\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                \t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: start_date){\r\n                                    Span(Body: LangRes(date_start))\r\n                                }\r\n                            }\r\n                \t\t\tDiv(Class: col-md-5 mc-sm text-left){\r\n                                Input(Name: start_date, Class: form-control, Type: date, Value: Now(\"YYYY-MM-DD\", 3 days))\r\n                            }\r\n                \t\t\tDiv(Class: col-md-4 mc-sm text-left){\r\n                                Input(Name: start_time, Class: form-control, Type: time, Value: Now(\"HH:MI\"))\r\n                            }\r\n                        }                       \r\n                    }\r\n\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                \t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: end_date){\r\n                                    Span(Body: LangRes(date_end))\r\n                                }\r\n                            }\r\n                \t\t\tDiv(Class: col-md-5 mc-sm text-left){\r\n                                Input(Name: end_date, Class: form-control, Type: date, Value: Now(\"YYYY-MM-DD\", 21 days))\r\n                            }\r\n                \t\t\tDiv(Class: col-md-4 mc-sm text-left){\r\n                                Input(Name: end_time, Class: form-control, Type: time, Value: Now(\"HH:MI\"))\r\n                            }\r\n                        }                       \r\n                    }\r\n\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                \t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: volume){\r\n                                    Span(Body: LangRes(voting_volume))\r\n                                }\r\n                            }\r\n                \t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n                                Input(Name: volume, Class: form-control, Type: number, Value: 75)\r\n                                P(Class: m0 text-muted, Body: $voting_volume_desc$)\r\n                            }\r\n                        }                       \r\n                    }\r\n\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                \t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: quorum){\r\n                                    Span(Body: LangRes(voting_quorum))\r\n                                }\r\n                            }\r\n                \t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n                                Input(Name: quorum, Class: form-control, Type: number, Value: 50)\r\n                                P(Class: m0 text-muted, Body: $voting_quorum_desc$)\r\n                            }\r\n                        }                     \r\n                    }\r\n\r\n                    Div(Class: panel-footer clearfix){\r\n                        Div(Class: pull-left){\r\n                            Input(Name: now_date, Class: form-control hidden, Type: text, Value: Now(\"YYYY-MM-DD HH:MI\"))\r\n                            Input(Name: type_voting, Class: form-control hidden, Type: text, Value: 1)\r\n                        }\r\n                        Div(Class: pull-right){\r\n                            Button(Body: LangRes(back), Class: btn btn-default, Page: voting_list)\r\n                            Button(Body: LangRes(create), Class: btn btn-primary, Page: voting_list, Contract: voting_CreateNew)\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\t\t}\r\n\t\tDiv(Class: col-md-3)\r\n    }\r\n}"
        },
        {
            "Name": "voting_decision_candidates",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu",
            "Value": "Div(Class: content-wrapper){\r\n\t\r\n    If(#vID# > 0){\r\n\r\n        DBFind(Name: voting_instances, Source: src_voting_instances).Where(\"id=#vID#\").Vars(instance)\r\n\r\n        SetTitle($subject_voting$)\r\n        Div(Class: breadcrumb){\r\n            LinkPage($voting$, voting_list)\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            LinkPage(#instance_name#, voting_view,, \"vID=#vID#\")\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            Span(Class: text-muted, Body: $subject_voting$)\r\n        }\r\n\r\n        Div(Class: row df f-valign){\r\n            Div(Class: col-md-2)\r\n            Div(Class: col-md-8){\r\n\r\n                Div(Class: panel panel-primary){\r\n                    Form(){  \r\n\t\t\t\t\t\r\n\t\t\t\t\t\tInput(Name: memberID, Class: form-control hidden, Type: text, Value: 0)\r\n\t\t\t\t\t\tInput(Name: votingID, Class: form-control hidden, Type: text, Value: #vID#)\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tDiv(Class: list-group-item){\r\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\t\tLabel($candidates$)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-left){\r\n                                    Div(form-text text-muted, $can_apply_voting$)\r\n\t\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-3 mc-sm text-right){\r\n                                    Button(Body: LangRes(apply), Class: btn btn-primary, Page: voting_decision_candidates, PageParams: \"vID=Val(votingID)\", Contract: voting_SubjectCandidates)\r\n                                } \r\n\t\t\t\t\t\t\t}\r\n                            Div(Class: row df){\r\n                    \t\t\tDiv(Class: col-md-3 mt-sm)\r\n                    \t\t\tDiv(Class: col-md-8 mt-sm text-left){\r\n                                    DBFind(Name: voting_subject, Source: src_voting_subject).Where(\"voting_id=#vID#\").Custom(custom_address){\r\n                                        Span(Address(#member_id#))\r\n\t                                }.Custom(custom_member){\r\n\t\t\t\t\t\t\t\t\t\tButton(Class: btn btn-link, Page: profile_view, PageParams: \"v_member_id=#member_id#\"){\r\n\t\t\t\t\t\t\t\t\t\t\tImage(Src: \"#member_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: h5 text-bold, Body: #member_name#)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n                                    Table(src_voting_subject, \"$candidates$=custom_member,$member_id$=custom_address\")\r\n                                }\r\n                    \t\t\tDiv(Class: col-md-1 mt-sm)\r\n                            }\r\n                        }\r\n\r\n                        Div(Class: list-group-item){\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: roleID){\r\n                                        Span(Body: LangRes(role))\r\n                                    }\r\n                                }\r\n                                Div(Class: col-md-9 mb-sm text-left){\r\n                                    DBFind(Name: roles_list, Source: source_roles).Columns(role_name, id).Where(\"role_type=2 and delete=0\")\r\n                                    Select(Name: roleID, Source: source_roles, NameColumn: role_name, ValueColumn: id, Value: #instance_optional_role_id#)\r\n                                } \r\n                            }\r\n\r\n                            Div(row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: vacancies){\r\n                                        Span(Body: LangRes(vacancies))\r\n                                    }\r\n                                }\r\n                    \t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n                    \t\t\t    Input(Name: vacancies, Class: form-control, Type: Number, Value: #instance_optional_role_vacancies#)\r\n                                }\r\n                            }                    \r\n                        }\r\n\r\n                        Div(Class: list-group-item){\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: contract_accept){\r\n                                        Span(Body: LangRes(contract_accept))\r\n                                    }\r\n                                    P(Class: m0 text-muted, Body: $optional$)\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    Input(Name: contract_accept, Class: form-control, Type: text, Value: #instance_optional_contract_accept#)\r\n                                    P(Class: text-muted, Body: $contract_accept_des$)\r\n                                }\r\n                            }                     \r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: contract_reject){\r\n                                        Span(Body: LangRes(contract_reject))\r\n                                    }\r\n                                    P(Class: m0 text-muted, Body: $optional$)\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    Input(Name: contract_reject, Class: form-control, Type: text, Value: #instance_optional_contract_reject#)\r\n                                    P(Class: m0 text-muted, Body: $contract_reject_des$)\r\n                                }\r\n                            }                     \r\n                        }\r\n\r\n                        Div(Class: panel-footer clearfix){\r\n                            Div(Class: pull-right){\r\n                                Button(Body: LangRes(back), Class: btn btn-default, Page: voting_view, PageParams: \"vID=#vID#\")\r\n                                Button(Body: LangRes(save), Class: btn btn-primary, Page: voting_view, PageParams: \"vID=#vID#\", Contract: voting_SubjectSettings)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            Div(Class: col-md-2)\r\n        }\r\n        \r\n    }.Else{\r\n\r\n        Div(Class: md-12 alert alert-danger text-center){\r\n            Span(Body: LangRes(attention))\r\n        }\r\n    }\r\n}"
        },
        {
            "Name": "voting_decision_contract",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu",
            "Value": "Div(Class: content-wrapper){\r\n\t\r\n    If(#vID# > 0){\r\n\r\n        DBFind(Name: voting_instances, Source: src_voting_instances).Where(\"id=#vID#\").Vars(instance)\r\n\t\tDBFind(Name: voting_subject, Source: src_voting_subject).Where(\"voting_id=#vID#\").Vars(subject)\r\n\r\n\t\tIf(#subject_id#>0){\r\n\t\t}.Else{\r\n\t\t\tSetVar(Name: subject_contract_accept, Value: \"\")\r\n\t\t\tSetVar(Name: subject_contract_reject, Value: \"\")\r\n\t\t}\r\n\t\t\r\n        SetTitle($subject_voting$)\r\n        Div(Class: breadcrumb){\r\n            LinkPage($voting$, voting_list)\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            LinkPage(#instance_name#, voting_view,, \"vID=#vID#\")\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            Span(Class: text-muted, Body: $subject_voting$)\r\n        }\r\n\r\n        Div(Class: row df f-valign){\r\n            Div(Class: col-md-2)\r\n            Div(Class: col-md-8){\r\n\r\n                Div(Class: panel panel-primary){\r\n                    Form(){  \r\n\r\n                        Input(Name: votingID, Class: form-control hidden, Type: text, Value: #vID#)\r\n\r\n                        Div(Class: list-group-item){\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: contract_accept){\r\n                                        Span(Body: LangRes(contract_accept))\r\n                                    }\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    Input(Name: contract_accept, Class: form-control, Type: text, Value: #subject_contract_accept#)\r\n                                    P(Class: text-muted, Body: $contract_accept_des$)\r\n                                }\r\n                            }                     \r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: contract_reject){\r\n                                        Span(Body: LangRes(contract_reject))\r\n                                    }\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    Input(Name: contract_reject, Class: form-control, Type: text, Value: #subject_contract_reject#)\r\n                                    P(Class: m0 text-muted, Body: $contract_reject_des$)\r\n                                }\r\n                            }                     \r\n                        }\r\n\r\n                        Div(Class: panel-footer clearfix){\r\n                            Div(Class: pull-right){\r\n                                Button(Body: LangRes(back), Class: btn btn-default, Page: voting_view, PageParams: \"vID=#vID#\")\r\n                                Button(Body: LangRes(save), Class: btn btn-primary, Page: voting_view, PageParams: \"vID=#vID#\", Contract: voting_SubjectContract)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            Div(Class: col-md-2)\r\n        }\r\n        \r\n    }.Else{\r\n\r\n        Div(Class: md-12 alert alert-danger text-center){\r\n            Span(Body: LangRes(attention))\r\n        }\r\n    }\r\n}"
        },
        {
            "Name": "voting_decision_document",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu",
            "Value": "Div(Class: content-wrapper){\r\n\t\r\n    If(#vID# > 0){\r\n\r\n        DBFind(Name: voting_instances, Source: src_voting_instances).Where(\"id=#vID#\").Vars(instance)\r\n        DBFind(Name: voting_subject, Source: src_voting_subject).Where(\"voting_id=#vID#\").Vars(subject)\r\n\t\t\r\n\t\tIf(#subject_id#>0){\r\n\t\t}.Else{\r\n\t\t\tSetVar(Name: subject_text_document, Value: \"\")\r\n\t\t}\r\n\r\n        SetTitle($subject_voting$)\r\n        Div(Class: breadcrumb){\r\n            LinkPage($voting$, voting_list)\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            LinkPage(#instance_name#, voting_view,, \"vID=#vID#\")\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            Span(Class: text-muted, Body: $subject_voting$)\r\n        }\r\n\r\n        Div(Class: row df f-valign){\r\n            Div(Class: col-md-2)\r\n            Div(Class: col-md-8){\r\n\r\n                Div(Class: panel panel-primary){\r\n                    Form(){  \r\n\r\n                        Input(Name: votingID, Class: form-control hidden, Type: text, Value: #vID#)\r\n\r\n\t\t\t\t\t\tDiv(Class: list-group-item){\r\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-12 mt-sm){\r\n                                    P(Class: m0 text-muted, Body: $text_document$)\r\n                                    Input(Name: text_document, Class: form-control, Type: textarea, Value: #subject_text_document#)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n                        }\r\n\r\n                        Div(Class: list-group-item){\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: contract_accept){\r\n                                        Span(Body: LangRes(contract_accept))\r\n                                    }\r\n                                    P(Class: m0 text-muted, Body: $optional$)\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    Input(Name: contract_accept, Class: form-control, Type: text, Value: #instance_optional_contract_accept#)\r\n                                    P(Class: text-muted, Body: $contract_accept_des$)\r\n                                }\r\n                            }                     \r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: contract_reject){\r\n                                        Span(Body: LangRes(contract_reject))\r\n                                    }\r\n                                    P(Class: m0 text-muted, Body: $optional$)\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    Input(Name: contract_reject, Class: form-control, Type: text, Value: #instance_optional_contract_reject#)\r\n                                    P(Class: m0 text-muted, Body: $contract_reject_des$)\r\n                                }\r\n                            }                     \r\n                        }\r\n\r\n                        Div(Class: panel-footer clearfix){\r\n                            Div(Class: pull-right){\r\n                                Button(Body: LangRes(back), Class: btn btn-default, Page: voting_view, PageParams: \"vID=#vID#\")\r\n                                Button(Body: LangRes(save), Class: btn btn-primary, Page: voting_view, PageParams: \"vID=#vID#\", Contract: voting_SubjectDocument)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            Div(Class: col-md-2)\r\n        }\r\n        \r\n    }.Else{\r\n\r\n        Div(Class: md-12 alert alert-danger text-center){\r\n            Span(Body: LangRes(attention))\r\n        }\r\n    }\r\n}"
        },
        {
            "Name": "voting_decision_election",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu",
            "Value": "Div(Class: content-wrapper){\r\n\t\r\n    If(#vID# > 0){\r\n\r\n        DBFind(Name: voting_instances, Source: src_voting_instances).Where(\"id=#vID#\").Vars(instance)\r\n\r\n        SetTitle($subject_voting$)\r\n        Div(Class: breadcrumb){\r\n            LinkPage($voting$, voting_list)\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            LinkPage(#instance_name#, voting_view,, \"vID=#vID#\")\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            Span(Class: text-muted, Body: $subject_voting$)\r\n        }\r\n\r\n        Div(Class: row df f-valign){\r\n            Div(Class: col-md-2)\r\n            Div(Class: col-md-8){\r\n\r\n                Div(Class: panel panel-primary){\r\n                    Form(){  \r\n\r\n\t\t\t\t\t\tInput(Name: votingID, Class: form-control hidden, Type: text, Value: #vID#)\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tDiv(Class: list-group-item){\r\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\t\tLabel($candidates$)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n                                    Div(Class: input-group){\r\n                                        DBFind(Name: member, Source: source_members).Columns(member_name, member_id).Custom(custom_username){\r\n                                            Span(Body: #member_name# ( Address(#member_id#) ) ) \r\n                                        }\r\n                                        Select(Name: memberID, Source: source_members, NameColumn: custom_username, ValueColumn: member_id)\r\n                                        Div(Class: input-group-btn){\r\n                                            Button(Body: LangRes(add), Class: btn btn-default, Page: voting_decision_election, PageParams: \"vID=Val(votingID)\", Contract: voting_SubjectCandidates)\r\n                                        }\r\n                                    }\r\n\t\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t}\r\n                            Div(Class: row df){\r\n                    \t\t\tDiv(Class: col-md-3 mt-sm)\r\n                    \t\t\tDiv(Class: col-md-8 mt-sm text-left){\r\n                                    DBFind(Name: voting_subject, Source: src_voting_subject).Where(\"voting_id=#vID#\").Custom(custom_address){\r\n                                        Span(Address(#member_id#))\r\n\t                                }.Custom(custom_member){\r\n\t\t\t\t\t\t\t\t\t\tButton(Class: btn btn-link, Page: profile_view, PageParams: \"v_member_id=#member_id#\"){\r\n\t\t\t\t\t\t\t\t\t\t\tImage(Src: \"#member_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\r\n                                            Span(Class: h5 text-bold, Body: #member_name#)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n                                    Table(src_voting_subject, \"$candidates$=custom_member,$member_id$=custom_address\")\r\n                                }\r\n                    \t\t\tDiv(Class: col-md-1 mt-sm)\r\n                            }\r\n                        }\r\n\r\n\r\n                        Div(Class: list-group-item){\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: roleID){\r\n                                        Span(Body: LangRes(role))\r\n                                    }\r\n                                }\r\n                                Div(Class: col-md-9 mb-sm text-left){\r\n                                    DBFind(Name: roles_list, Source: source_roles).Columns(role_name, id).Where(\"role_type=2 and delete=0\")\r\n                                    Select(Name: roleID, Source: source_roles, NameColumn: role_name, ValueColumn: id, Value: #instance_optional_role_id#)\r\n                                } \r\n                            }\r\n\r\n                            Div(row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: vacancies){\r\n                                        Span(Body: LangRes(vacancies))\r\n                                    }\r\n                                }\r\n                    \t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n                    \t\t\t    Input(Name: vacancies, Class: form-control, Type: Number, Value: #instance_optional_role_vacancies#)\r\n                                }\r\n                            }                    \r\n                        }\r\n\r\n                        Div(Class: list-group-item){\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: contract_accept){\r\n                                        Span(Body: LangRes(contract_accept))\r\n                                    }\r\n                                    P(Class: m0 text-muted, Body: $optional$)\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    Input(Name: contract_accept, Class: form-control, Type: text, Value: #instance_optional_contract_accept#)\r\n                                    P(Class: text-muted, Body: $contract_accept_des$)\r\n                                }\r\n                            }                     \r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: contract_reject){\r\n                                        Span(Body: LangRes(contract_reject))\r\n                                    }\r\n                                    P(Class: m0 text-muted, Body: $optional$)\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    Input(Name: contract_reject, Class: form-control, Type: text, Value: #instance_optional_contract_reject#)\r\n                                    P(Class: m0 text-muted, Body: $contract_reject_des$)\r\n                                }\r\n                            }                     \r\n                        }\r\n\r\n                        Div(Class: panel-footer clearfix){\r\n                            Div(Class: pull-right){\r\n                                Button(Body: LangRes(back), Class: btn btn-default, Page: voting_view, PageParams: \"vID=#vID#\")\r\n                                Button(Body: LangRes(save), Class: btn btn-primary, Page: voting_view, PageParams: \"vID=#vID#\", Contract: voting_SubjectSettings)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            Div(Class: col-md-2)\r\n        }\r\n        \r\n    }.Else{\r\n\r\n        Div(Class: md-12 alert alert-danger text-center){\r\n            Span(Body: LangRes(attention))\r\n        }\r\n    }\r\n}"
        },
        {
            "Name": "voting_decision_formal",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu",
            "Value": "Div(Class: content-wrapper){\r\n\t\r\n    If(#vID# > 0){\r\n\r\n        DBFind(Name: voting_instances, Source: src_voting_instances).Where(\"id=#vID#\").Vars(instance)\r\n\t\tDBFind(Name: voting_subject, Source: src_voting_subject).Where(\"voting_id=#vID#\").Vars(subject)\r\n\r\n\t\tIf(#subject_id#>0){\r\n\t\t}.Else{\r\n\t\t\tSetVar(Name: subject_formal_decision_description, Value: \"\")\r\n\t\t\tSetVar(Name: subject_formal_decision_table, Value: \"\")\r\n\t\t\tSetVar(Name: subject_formal_decision_tableid, Value: \"\")\r\n\t\t\tSetVar(Name: subject_formal_decision_column, Value: \"\")\r\n\t\t\tSetVar(Name: subject_formal_decision_colvalue, Value: \"\")\r\n\t\t}\r\n\t\t\r\n        SetTitle($subject_voting$)\r\n        Div(Class: breadcrumb){\r\n            LinkPage($voting$, voting_list)\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            LinkPage(#instance_name#, voting_view,, \"vID=#vID#\")\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            Span(Class: text-muted, Body: $subject_voting$)\r\n        }\r\n\r\n        Div(Class: row df f-valign){\r\n            Div(Class: col-md-2)\r\n            Div(Class: col-md-8){\r\n\r\n                Div(Class: panel panel-primary){\r\n                    Form(){  \r\n\r\n                        Input(Name: votingID, Class: form-control hidden, Type: text, Value: #vID#)\r\n                    \r\n\t\t\t\t\t\tDiv(Class: list-group-item){\r\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-3 mt-lg text-right){\r\n\t\t\t\t\t\t\t\t\tLabel(For: description){\r\n\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(description))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\tInput(Name: description, Class: form-control, Type: textarea, Value: #subject_formal_decision_description#)\r\n                                    P(Class: m0 text-muted, Body: $description_desc$)\r\n                                }\r\n\t\t\t\t\t\t\t}                      \r\n\t\t\t\t\t\t}\r\n\r\n                        Div(Class: list-group-item){\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: table_to_written){\r\n                                        Span(Body: LangRes(table_to_written))\r\n                                    }\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    Input(Name: table_to_written, Class: form-control, Type: text, Value: #subject_formal_decision_table#)\r\n                                    P(Class: text-muted, Body: $table_to_written_desc$)\r\n                                }\r\n                            }                     \r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: row_id){\r\n                                        Span(Body: LangRes(row_id))\r\n                                    }\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    Input(Name: row_id, Class: form-control, Type: text, Value: #subject_formal_decision_tableid#)\r\n                                    P(Class: text-muted, Body: $row_id_desc$)\r\n                                }\r\n                            }  \r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: column_name){\r\n                                        Span(Body: LangRes(column_name))\r\n                                    }\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    Input(Name: column_name, Class: form-control, Type: text, Value: #subject_formal_decision_column#)\r\n                                    P(Class: m0 text-muted, Body: $column_name_desc$)\r\n                                }\r\n                            }                   \r\n                        }\r\n\r\n                        Div(Class: list-group-item){\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: written_value){\r\n                                        Span(Body: LangRes(written_value))\r\n                                    }\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    Input(Name: written_value, Class: form-control, Type: text, Value: #subject_formal_decision_colvalue#)\r\n                                    P(Class: m0 text-muted, Body: $written_value_desc$)\r\n                                }\r\n                            }                                        \r\n                        }\r\n\r\n\r\n                        Div(Class: list-group-item){\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: contract_accept){\r\n                                        Span(Body: LangRes(contract_accept))\r\n                                    }\r\n                                    P(Class: m0 text-muted, Body: $optional$)\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    Input(Name: contract_accept, Class: form-control, Type: text, Value: #instance_optional_contract_accept#)\r\n                                    P(Class: text-muted, Body: $contract_accept_des$)\r\n                                }\r\n                            }                     \r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: contract_reject){\r\n                                        Span(Body: LangRes(contract_reject))\r\n                                    }\r\n                                    P(Class: m0 text-muted, Body: $optional$)\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    Input(Name: contract_reject, Class: form-control, Type: text, Value: #instance_optional_contract_reject#)\r\n                                    P(Class: m0 text-muted, Body: $contract_reject_des$)\r\n                                }\r\n                            }                     \r\n                        }\r\n\r\n                        Div(Class: panel-footer clearfix){\r\n                            Div(Class: pull-right){\r\n                                Button(Body: LangRes(back), Class: btn btn-default, Page: voting_view, PageParams: \"vID=#vID#\")\r\n                                Button(Body: LangRes(save), Class: btn btn-primary, Page: voting_view, PageParams: \"vID=#vID#\", Contract: voting_SubjectFormal)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            Div(Class: col-md-2)\r\n        }\r\n        \r\n    }.Else{\r\n\r\n        Div(Class: md-12 alert alert-danger text-center){\r\n            Span(Body: LangRes(attention))\r\n        }\r\n    }\r\n}"
        },
        {
            "Name": "voting_invite",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu",
            "Value": "Div(Class: content-wrapper){\r\n\t\r\n    If(#vID# > 0){\r\n\r\n        DBFind(Name: voting_instances, Source: src_voting_instances).Where(\"id=#vID#\").Vars(instance)\r\n\t\t\r\n        SetTitle($participants$)\r\n        Div(Class: breadcrumb){\r\n            LinkPage($voting$, voting_list)\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            LinkPage(#instance_name#, voting_view,, \"vID=#vID#\")\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            Span(Class: text-muted, Body: $participants$)\r\n        }\r\n\r\n        Div(Class: row df f-valign){\r\n            Div(Class: col-md-2)\r\n            Div(Class: col-md-8){\r\n\t\t\t\r\n                Div(Class: panel panel-primary){\r\n\t\t\t\t\tDiv(Class: panel-heading, Body: LangRes(participants))\r\n                    Form(){\r\n\t\t\t\t\t\r\n                        Input(Name: votingID, Class: form-control hidden, Type: text, Value: #vID#)\r\n\r\n\t\t\t\t\t\tDiv(Class: list-group-item){\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-12){\r\n                                    DBFind(Name: voting_participants, Source: src_voting_participants).Columns(id,member_id,member_name,member_avatar).Where(\"voting_id=#vID#\").Custom(custom_id){\r\n                                        Span(Body:  #id#)\r\n                                    }.Custom(custom_member){\r\n                                        Button(Class: btn btn-link, Page: profile_view, PageParams: \"v_member_id=#member_id#\"){\r\n                                            Image(Src: \"#member_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\r\n                                            Span(Class: h5 text-bold, Body: #member_name#)\r\n                                        }\r\n                                    }\r\n                                    Table(src_voting_participants, \"$id$=custom_id,$member_name$=custom_member\")\r\n                                }\r\n                            }\r\n\r\n                            If(#instance_typeparticipants# == 1){\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-12){\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            If(#instance_typeparticipants# == 2){\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-12){\r\n                                        Span(Class: text-muted, Body: LangRes(select_member))\r\n                                        DBFind(Name: member, Source: source_members).Columns(member_name, member_id).Custom(custom_username){\r\n                                            Span(Body: #member_name# ( Address(#member_id#) ) ) \r\n                                        }\r\n                                        Select(Name: var_id, Source: source_members, NameColumn: custom_username, ValueColumn: member_id)\r\n                                    }\r\n                                }\r\n                            }\r\n                        \r\n                            If(#instance_typeparticipants# == 3){\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-12){\r\n                                        Span(Class: text-muted, Body: LangRes(select_role))\r\n                                        DBFind(Name: roles_list, Source: source_roles).Columns(role_name, id).Where(\"delete=0\")\r\n                                        Select(Name: var_id, Source: source_roles, NameColumn: role_name, ValueColumn: id)\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n                        Div(Class: panel-footer clearfix){\r\n                            Div(Class: pull-right){\r\n                                Button(Body: LangRes(back), Class: btn btn-default, Page: voting_view, PageParams: \"vID=#vID#\")\r\n                                If(#instance_typeparticipants# == 2){\r\n                                    Button(Body: LangRes(add_member), Class: btn btn-primary, Page: voting_view, PageParams: \"vID=#vID#\", Contract: voting_Invite)\r\n                                }\r\n                                If(#instance_typeparticipants# == 3){\r\n                                    Button(Body: LangRes(add_role), Class: btn btn-primary, Page: voting_view, PageParams: \"vID=#vID#\", Contract: voting_Invite)\r\n                                }\r\n                            }\r\n                        }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n            }\r\n            Div(Class: col-md-2)\r\n        }\r\n        \r\n    }.Else{\r\n\r\n        Div(Class: md-12 alert alert-danger text-center){\r\n            Span(Body: LangRes(attention))\r\n        }\r\n    }\r\n}"
        },
        {
            "Name": "voting_view",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu",
            "Value": "Div(Class: content-wrapper){\r\n\tIf(#notific_type#==1){\r\n\t\tSetVar(Name: vID, Value: #notific_val_int#)\r\n\t}\r\n\r\n    If(#vID# > 0){\r\n\r\n        DBFind(Name: voting_instances, Source: src_one).Where(\"id=#vID#\").Vars(instance)\r\n        \r\n        SetTitle(#instance_name#)\r\n        Div(Class: breadcrumb){\r\n            LinkPage($voting$, voting_list)\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            Span(Class: text-muted, Body: #instance_name#)\r\n        }\r\n\r\n\t\tSetVar(Name: vDateNow, Value: Now(\"YYYY-MM-DD HH:MI\")) \r\n\t\tSetVar(Name: vStartDate, Value: DateTime(DateTime: #instance_startdate#, Format: \"YYYY-MM-DD HH:MI\"))\r\n\t\tSetVar(Name: vEndDate, Value: DateTime(#instance_enddate#, \"YYYY-MM-DD HH:MI\")) \r\n\t\tSetVar(Name: vCmpStartDate, Value: CmpTime(#vStartDate#,#vDateNow#)) \r\n\t\tSetVar(Name: vCmpEndDate, Value: CmpTime(#vEndDate#,#vDateNow#))\r\n\r\n\t\tDBFind(Name: voting_participants, Source: src_two).Columns(id).Where(\"voting_id=#vID# and member_id=#key_id# and decision=0\").Vars(participant)\r\n        If(And(#instance_flag_fulldata#==1,#participant_id#>0,#instance_flag_decision#==0,#vCmpStartDate#<0,#vCmpEndDate#>0)){\r\n            SetVar(Name: vOpportunityVote, Value: 1)\r\n        }.Else{\r\n            SetVar(Name: vOpportunityVote, Value: 0)\r\n        }\r\n\r\n        Div(Class: row df f-valign){\r\n            Div(Class: col-md-2)\r\n            Div(Class: col-md-8){\r\n\r\n                Div(Class: panel panel-default){\r\n                    Form(){ \r\n\r\n                        Div(Class: list-group-item text-center){\r\n                            P(Class: h3 text-bold m0, Body: #instance_name#)\r\n                            P(Class: h5 text-muted m0, Body: EcosysParam(Name: type_voting_decisions, Index: #instance_typedecision#))\t\r\n                        }\r\n\t\t\t\t\t\t\r\n                        Div(Class: list-group-item text-center){\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-6 mt-sm text-right){\r\n                                    P(Class: h4 text-normal m0, Body: LangRes(filled))\r\n                                }\r\n                                Div(Class: col-md-6 mt-sm text-left){\r\n                                    If(#instance_flag_fulldata# == 1){\r\n                                        P(Class: h4 text-success m0, Body: LangRes(yes))\r\n                                    }.Else{\r\n                                        P(Class: h4 text-danger m0, Body: LangRes(no))\r\n                                    } \r\n                                }\r\n                            }\r\n                            If(Or(#instance_typedecision#==1,#instance_typedecision#==2)){\r\n\t\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-right){\r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(contract_accept))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-left){\r\n\t\t\t\t\t\t\t\t\t\tIf(#instance_optional_contract_accept# == \"\"){\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-muted m0, Body: LangRes(optional))\r\n\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #instance_optional_contract_accept#)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-right){\r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(contract_reject))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\t\tIf(#instance_optional_contract_reject# == \"\"){\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-muted m0, Body: LangRes(optional))\r\n\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #instance_optional_contract_reject#)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-6 mt-sm text-right){\r\n                                        P(Class: h5 text-normal m0){\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(role))\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                    Div(Class: col-md-6 mt-sm text-left){\r\n\t\t\t\t\t\t\t\t\t\tIf(#instance_optional_role_id# > 0){\r\n\t\t\t\t\t\t\t\t\t\t\tDBFind(Name: roles_list, Source: src_roles_list).Where(\"id=#instance_optional_role_id#\").Vars(roles)\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #roles_role_name# (LangRes(id): #instance_optional_role_id#))\r\n\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: LangRes(empty))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                }\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-6 mc-sm text-right){\r\n                                        P(Class: h5 text-normal m0){\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(vacancies))\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                    Div(Class: col-md-6 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\t\tIf(#instance_optional_role_vacancies# > 0){\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #instance_optional_role_vacancies#)\r\n\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: #instance_optional_role_vacancies#)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                }\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-6 mc-sm text-right){\r\n                                        P(Class: h5 text-normal m0){\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(candidates))\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                    Div(Class: col-md-6 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\t\tIf(#instance_optional_number_cands# > 0){\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #instance_optional_number_cands#)\r\n\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: #instance_optional_number_cands#)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                }\r\n                                Div(Class: row df){\r\n                                    Div(Class: col-md-2 mt-sm)\r\n                                    Div(Class: col-md-8 mt-sm text-left){\r\n                                        DBFind(Name: voting_subject, Source: src_voting_subject).Where(\"voting_id=#vID#\").Custom(custom_address){\r\n                                            Span(Class: h6, Body: Address(#member_id#))\r\n                                        }.Custom(custom_member){\r\n                                            Button(Class: btn btn-link, Page: profile_view, PageParams: \"v_member_id=#member_id#\"){\r\n                                                Image(Src: \"#member_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\r\n                                                Span(Class: h5 text-bold, Body: #member_name#)\r\n                                            }\r\n                                        }.Custom(custom_voting){\r\n\t\t\t\t\t\t\t\t\t\t\tIf(#vOpportunityVote#==1){\r\n\t\t\t\t\t\t\t\t\t\t\t\tInput(Class: form-control hidden, Type: text, Name: votingID, Value: #vID#)\r\n\t\t\t\t\t\t\t\t\t\t\t\tInput(Class: form-control hidden, Type: text, Name: candidateID, Value: #member_id#)\r\n\t\t\t\t\t\t\t\t\t\t\t\tButton(Body: LangRes(vote), Class: btn btn-success, Page: voting_view, PageParams: \"vID=#vID#\", Contract: voting_AcceptCandidates)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                        Table(src_voting_subject, \"=custom_member,=custom_address,=custom_voting\")\r\n                                    }\r\n                                    Div(Class: col-md-2 mt-sm)\r\n                                }\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-12 mc-sm){\r\n                                        If(And(#vCmpStartDate#>0,#instance_type_voting#==1)){\r\n                                            If(#instance_typedecision#==1){\r\n                                                Button(Class: btn btn-link, Page: voting_decision_candidates, PageParams: \"vID=#vID#\"){\r\n                                                    Span(Class: h5 text-bold, Body: LangRes(subject_voting_edit))\r\n                                                }\r\n                                            }\r\n                                            If(#instance_typedecision#==2){\r\n                                                Button(Class: btn btn-link, Page: voting_decision_election, PageParams: \"vID=#vID#\"){\r\n                                                    Span(Class: h5 text-bold, Body: LangRes(subject_voting_edit))\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            } \r\n\t\t\t\t\t\t\tIf(#instance_typedecision#==3){\r\n\t\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-right){\r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(contract_accept))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-left){\r\n\t\t\t\t\t\t\t\t\t\tIf(#instance_optional_contract_accept# == \"\"){\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-muted m0, Body: LangRes(optional))\r\n\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #instance_optional_contract_accept#)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-right){\r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(contract_reject))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\t\tIf(#instance_optional_contract_reject# == \"\"){\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-muted m0, Body: LangRes(optional))\r\n\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #instance_optional_contract_reject#)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDBFind(Name: voting_subject, Source: src_voting_subject).Columns(id,text_doc_hash,text_document).Where(\"voting_id=#vID#\").Vars(subject)\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-1 mt-lg)\r\n                                    Div(Class: col-md-10 mt-lg){\r\n\t\t\t\t\t\t\t\t\t\tDiv(Class: list-group-item){\r\n\t\t\t\t\t\t\t\t\t\t\tIf(#subject_id# > 0){\r\n\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #subject_text_document#)\r\n\t\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: LangRes(empty))\r\n\t\t\t\t\t\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tDiv(Class: list-group-item){\r\n\t\t\t\t\t\t\t\t\t\t\tIf(#subject_id# > 0){\r\n\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h6 text-muted m0, Body: Hash: #subject_text_doc_hash#)\r\n\t\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h6 text-muted m0, Body: Hash: LangRes(empty))\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                    Div(Class: col-md-1 mt-lg)\r\n                                }\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-12 mc-sm){\r\n\t\t\t\t\t\t\t\t\t\tIf(And(#vCmpStartDate#>0,#instance_type_voting#==1)){\r\n\t\t\t\t\t\t\t\t\t\t\tButton(Class: btn btn-link, Page: voting_decision_document, PageParams: \"vID=#vID#\"){\r\n\t\t\t\t\t\t\t\t\t\t\t\tSpan(Class: h5 text-bold, Body: LangRes(subject_voting_edit))\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                }\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-1 mt-lg)\r\n                                    Div(Class: col-md-10 mt-lg){\r\n\t\t\t\t\t\t\t\t\t\tIf(#vOpportunityVote#==1){\r\n\t\t\t\t\t\t\t\t\t\t\tInput(Class: form-control hidden, Type: text, Name: votingID, Value: #vID#)\r\n\t\t\t\t\t\t\t\t\t\t\tDiv(Class: pull-left){\r\n\t\t\t\t\t\t\t\t\t\t\t\tButton(Body: LangRes(reject), Class: btn btn-danger, Contract: voting_RejectDecision, PageParams: \"vID=#vID#\", Page: voting_view)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tDiv(Class: pull-right){\r\n\t\t\t\t\t\t\t\t\t\t\t\tButton(Body: LangRes(accept), Class: btn btn-success, Contract: voting_AcceptDecision, PageParams: \"vID=#vID#\", Page: voting_view)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                    Div(Class: col-md-1 mt-lg)\r\n                                }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tIf(#instance_typedecision#==4){\r\n\t\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-right){\r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(contract_accept))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-left){\r\n\t\t\t\t\t\t\t\t\t\tIf(#instance_optional_contract_accept# == \"\"){\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-muted m0, Body: LangRes(optional))\r\n\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #instance_optional_contract_accept#)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-right){\r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(contract_reject))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\t\tIf(#instance_optional_contract_reject# == \"\"){\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-muted m0, Body: LangRes(optional))\r\n\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #instance_optional_contract_reject#)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDBFind(Name: voting_subject, Source: src_voting_subject).Columns(id,formal_decision_description,formal_decision_table,formal_decision_tableid,formal_decision_column,formal_decision_colvalue).Where(\"voting_id=#vID#\").Vars(subject)\r\n\t\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n                                    Div(Class: col-md-6 mt-sm text-right){\r\n                                        P(Class: h5 text-normal m0){\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(description))\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                    Div(Class: col-md-6 mt-sm text-left){\r\n\t\t\t\t\t\t\t\t\t\tIf(#subject_id# > 0){\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #subject_formal_decision_description#)\r\n\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: LangRes(empty))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                }\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-6 mc-sm text-right){\r\n                                        P(Class: h5 text-normal m0){\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(table_to_written))\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                    Div(Class: col-md-6 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\t\tIf(#subject_id# > 0){\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #subject_formal_decision_table#)\r\n\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: LangRes(empty))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                }\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-6 mc-sm text-right){\r\n                                        P(Class: h5 text-normal m0){\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(row_id))\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                    Div(Class: col-md-6 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\t\tIf(#subject_id# > 0){\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #subject_formal_decision_tableid#)\r\n\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: LangRes(empty))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                }\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-6 mc-sm text-right){\r\n                                        P(Class: h5 text-normal m0){\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(column_name))\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                    Div(Class: col-md-6 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\t\tIf(#subject_id# > 0){\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #subject_formal_decision_column#)\r\n\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: LangRes(empty))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                }\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-6 mc-sm text-right){\r\n                                        P(Class: h5 text-normal m0){\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(written_value))\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                    Div(Class: col-md-6 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\t\tIf(#subject_id# > 0){\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #subject_formal_decision_colvalue#)\r\n\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: LangRes(empty))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                }\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-12 mc-sm){\r\n\t\t\t\t\t\t\t\t\t\tIf(And(#vCmpStartDate#>0,#instance_type_voting#==1)){\r\n\t\t\t\t\t\t\t\t\t\t\tButton(Class: btn btn-link, Page: voting_decision_formal, PageParams: \"vID=#vID#\"){\r\n\t\t\t\t\t\t\t\t\t\t\t\tSpan(Class: h5 text-bold, Body: LangRes(subject_voting_edit))\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                }\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-1 mt-lg)\r\n                                    Div(Class: col-md-10 mt-lg){\r\n\t\t\t\t\t\t\t\t\t\tIf(#vOpportunityVote#==1){\r\n\t\t\t\t\t\t\t\t\t\t\tInput(Class: form-control hidden, Type: text, Name: votingID, Value: #vID#)\r\n\t\t\t\t\t\t\t\t\t\t\tDiv(Class: pull-left){\r\n\t\t\t\t\t\t\t\t\t\t\t\tButton(Body: LangRes(reject), Class: btn btn-danger, Contract: voting_RejectDecision, PageParams: \"vID=#vID#\", Page: voting_view)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tDiv(Class: pull-right){\r\n\t\t\t\t\t\t\t\t\t\t\t\tButton(Body: LangRes(accept), Class: btn btn-success, Contract: voting_AcceptDecision, PageParams: \"vID=#vID#\", Page: voting_view)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                    Div(Class: col-md-1 mt-lg)\r\n                                }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tIf(#instance_typedecision#==5){\r\n\t\t\t\t\t\t\t\tDBFind(Name: voting_subject, Source: src_voting_subject).Columns(id,contract_accept,contract_reject).Where(\"voting_id=#vID#\").Vars(subject)\r\n\t\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-right){\r\n                                        P(Class: h5 text-normal m0){\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(contract_accept))\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-left){\r\n\t\t\t\t\t\t\t\t\t\tIf(#subject_id# > 0){\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #subject_contract_accept#)\r\n\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: LangRes(empty))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-right){\r\n                                        P(Class: h5 text-normal m0){\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(contract_reject))\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\t\tIf(#subject_id# > 0){\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #subject_contract_reject#)\r\n\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: LangRes(empty))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-12 mc-sm){\r\n\t\t\t\t\t\t\t\t\t\tIf(And(#vCmpStartDate#>0,#instance_type_voting#==1)){\r\n\t\t\t\t\t\t\t\t\t\t\tButton(Class: btn btn-link, Page: voting_decision_contract, PageParams: \"vID=#vID#\"){\r\n\t\t\t\t\t\t\t\t\t\t\t\tSpan(Class: h5 text-bold, Body: LangRes(subject_voting_edit))\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                }\r\n                                Div(Class: row df f-valign){\r\n                                    Div(Class: col-md-1 mt-lg)\r\n                                    Div(Class: col-md-10 mt-lg){\r\n\t\t\t\t\t\t\t\t\t\tIf(#vOpportunityVote#==1){\r\n\t\t\t\t\t\t\t\t\t\t\tInput(Class: form-control hidden, Type: text, Name: votingID, Value: #vID#)\r\n\t\t\t\t\t\t\t\t\t\t\tDiv(Class: pull-left){\r\n\t\t\t\t\t\t\t\t\t\t\t\tButton(Body: LangRes(reject), Class: btn btn-danger, Contract: voting_RejectDecision, PageParams: \"vID=#vID#\", Page: voting_view)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tDiv(Class: pull-right){\r\n\t\t\t\t\t\t\t\t\t\t\t\tButton(Body: LangRes(accept), Class: btn btn-success, Contract: voting_AcceptDecision, PageParams: \"vID=#vID#\", Page: voting_view)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                    }\r\n                                    Div(Class: col-md-1 mt-lg)\r\n                                }\r\n\t\t\t\t\t\t\t}\r\n                        }\r\n\t\t\t\t\t\t\r\n                        Div(Class: list-group-item text-center){\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-6 mt-sm text-right){\r\n                                    P(Class: h5 text-normal m0, Body: LangRes(status))\r\n                                }\r\n                                Div(Class: col-md-6 mt-sm text-left){\r\n\t\t\t\t\t\t\t\t\tIf(#instance_flag_success#==1){ \r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-success m0, Body: LangRes(success))\r\n\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\tIf(#vCmpEndDate#<0){\r\n\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-muted m0, Body: LangRes(finished))\r\n\t\t\t\t\t\t\t\t\t\t}.Else{\t\r\n\t\t\t\t\t\t\t\t\t\t\tIf(#vCmpStartDate#<0){ \r\n\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-success m0, Body: LangRes(started))\r\n\t\t\t\t\t\t\t\t\t\t\t}.Else{\t\r\n\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-warning m0, Body: LangRes(waiting))\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n                                }\r\n                            }\r\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-right){\r\n\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(notifications))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\tIf(#instance_flag_notifics#==1){\r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(yes))\r\n\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(no))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-6 mc-sm text-right){\r\n                                    P(Class: h5 text-normal m0, Body: LangRes(decision))\r\n                                }\r\n                                Div(Class: col-md-6 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\tIf(#instance_flag_decision#==-2){\r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(not_enough_votes))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tIf(#instance_flag_decision#==-1){ \r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: LangRes(rejected))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tIf(#instance_flag_decision#==0){\r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(no))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tIf(#instance_flag_decision#==1){\r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-success m0, Body: LangRes(accepted))\r\n\t\t\t\t\t\t\t\t\t}\r\n                                }\r\n                            }\r\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-right){\r\n\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(date_start))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-left){\r\n\t\t\t\t\t\t\t\t\tIf(#vCmpStartDate#<0){\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-muted m0, Body: DateTime(DateTime: #instance_startdate#, Format: \"DD.MM.YYYY HH:MI\"))\r\n\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: DateTime(DateTime: #instance_startdate#, Format: \"DD.MM.YYYY HH:MI\"))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-right){\r\n\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(date_end))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\tIf(#vCmpEndDate#<0){\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-muted m0, Body: DateTime(DateTime: #instance_enddate#, Format: \"DD.MM.YYYY HH:MI\"))\r\n\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: DateTime(DateTime: #instance_enddate#, Format: \"DD.MM.YYYY HH:MI\"))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-right){\r\n\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(voting_volume))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-left){\r\n\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #instance_volume#)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-right){\r\n\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: LangRes(voting_quorum))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #instance_quorum#)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-right){\r\n\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0){\r\n\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(participants))\r\n\t\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-left){\r\n\t\t\t\t\t\t\t\t\tIf(#instance_number_participants# > 0){\r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-normal m0, Body: #instance_number_participants#)\r\n\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\tP(Class: h5 text-danger m0, Body: #instance_number_participants#)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-2 mt-sm)\r\n                                Div(Class: col-md-8 mt-sm text-left){\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tDBFind(Name: voting_participants, Source: src_voting_participants).Columns(id,decision,member_name,member_id,member_avatar,decision_date).Where(\"voting_id=#vID#\").Custom(custom_address){\r\n                                            P(Class: h6 m0, Body: Address(#member_id#))\r\n                                        }.Custom(custom_member){\r\n                                            Button(Class: btn btn-link, Page: profile_view, PageParams: \"v_member_id=#member_id#\"){\r\n                                                Image(Src: \"#member_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\r\n                                                Span(Class: h5 text-bold, Body: #member_name#)\r\n                                            }\r\n                                        }.Custom(custom_decision){\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tIf(Or(#instance_typedecision#==1,#instance_typedecision#==2)){ \r\n\t\t\t\t\t\t\t\t\t\t\t\tIf(#decision#==0){ \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h6 m0, Body: LangRes(did_not_vote))\r\n\t\t\t\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tDBFind(Name: member, Source: src_member).Where(\"member_id=#decision#\").Vars(list)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: text-success text-center h6 m0, Body: $vote_for_candidate$:)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: text-success text-center h6 m0, Body: #list_member_name# Address(#decision#) )\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: text-success text-center h6 m0, Body: $at$ DateTime(DateTime: #decision_date#, Format: \"DD.MM.YYYY HH:MI\"))\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tIf(#instance_typedecision#==3){ \r\n\t\t\t\t\t\t\t\t\t\t\t\tIf(#decision#==0){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h6 m0, Body: LangRes(did_not_vote))\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tIf(#decision#==1){ \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: text-success h6 m0, Body: $document_accept$ $at$ DateTime(DateTime: #decision_date#, Format: \"DD.MM.YYYY HH:MI\"))\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tIf(#decision#==-1){ \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: text-danger h6 m0, Body: $document_reject$ $at$ DateTime(DateTime: #decision_date#, Format: \"DD.MM.YYYY HH:MI\"))\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tIf(#instance_typedecision#==4){\r\n\t\t\t\t\t\t\t\t\t\t\t\tIf(#decision#==0){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h6 m0, Body: LangRes(did_not_vote))\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tIf(#decision#==1){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: text-success h6 m0, Body: $decision_accept$ $at$ DateTime(DateTime: #decision_date#, Format: \"DD.MM.YYYY HH:MI\"))\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tIf(#decision#==-1){ \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: text-danger h6 m0, Body: $decision_reject$ $at$ DateTime(DateTime: #decision_date#, Format: \"DD.MM.YYYY HH:MI\"))\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tIf(#instance_typedecision#==5){ \r\n\t\t\t\t\t\t\t\t\t\t\t\tIf(#decision#==0){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: h6 m0, Body: LangRes(did_not_vote))\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tIf(#decision#==1){ \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: text-success h6 m0, Body: $contract_accepted$ $at$ DateTime(DateTime: #decision_date#, Format: \"DD.MM.YYYY HH:MI\"))\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tIf(#decision#==-1){ \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tP(Class: text-danger h6 m0, Body: $contract_rejected$ $at$ DateTime(DateTime: #decision_date#, Format: \"DD.MM.YYYY HH:MI\"))\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n                                        Table(src_voting_participants, \"=custom_member,=custom_decision\")\r\n\t\t\t\t\t\t\t\t\r\n                                }\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-2 mt-sm)\r\n                            }\r\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-12 mc-sm){\r\n\t\t\t\t\t\t\t\t\tIf(And(#vCmpStartDate#>0,#instance_type_voting#==1)){\r\n\t\t\t\t\t\t\t\t\t\tButton(Class: btn btn-link, Page: voting_invite, PageParams: \"vID=#vID#\"){\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Class: h5 text-bold, Body: LangRes(participants_add))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n                        Div(Class: list-group-item text-center){\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-1 mt-sm )\r\n                                Div(Class: col-md-5 mt-sm text-center){\r\n\t\t\t\t\t\t\t\t\tP(Class: h4 text-normal m0, Body: LangRes(voted))\r\n                                }\r\n                                Div(Class: col-md-5 mt-sm text-center){\r\n\t\t\t\t\t\t\t\t\tP(Class: h4 text-normal m0, Body: LangRes(progress))\r\n                                }\r\n                                Div(Class: col-md-1 mt-sm)\r\n                            }\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-1 mt-sm )\r\n                                Div(Class: col-md-5 mt-sm text-center){\r\n\t\t\t\t\t\t\t\t\tP(Class: h6 text-muted m0, Body: LangRes(voting_graph_voted))\r\n                                }\r\n                                Div(Class: col-md-5 mt-sm text-center){\r\n\t\t\t\t\t\t\t\t\tP(Class: h6 text-muted m0, Body: LangRes(voting_graph_progress))\r\n                                }\r\n                                Div(Class: col-md-1 mt-sm)\r\n                            }\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-1 mt-sm )\r\n                                Div(Class: col-md-5 mt-sm text-center){\r\n                                    P(Class: h3 text-normal m0, Body: #instance_number_voters# / #instance_percent_voters#)\r\n                                }\r\n                                Div(Class: col-md-5 mt-sm text-center){\r\n                                    P(Class: h3 text-normal m0, Body: #instance_percent_success# / 100)\r\n                                }\r\n                                Div(Class: col-md-1 mt-sm)\r\n                            }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n                    }\r\n                }\r\n\r\n            }\r\n            Div(Class: col-md-2)\r\n        }   \r\n    }.Else{\r\n        Div(Class: md-12 alert alert-danger text-center){\r\n            Span(Body: LangRes(attention))\r\n        }\r\n    }\r\n}"
        }
    ],
    "blocks": [],
    "menus": [],
    "parameters": [
        {
            "Name": "type_voting_decisions",
            "Value": "voting_decisions_candidate_requests,voting_decisions_candidate_manual,voting_decisions_document,voting_decisions_db,voting_decisions_contract",
            "Conditions": "ContractConditions(`MainCondition`)"
        },
        {
            "Name": "type_voting_participants",
            "Value": "voting_participants_everybody,voting_participants_manual,voting_participants_role",
            "Conditions": "ContractConditions(`MainCondition`)"
        },
        {
            "Name": "type_voting",
            "Value": "type_voting_custom,type_voting_system",
            "Conditions": "ContractConditions(`MainCondition`)"
        }
    ],
    "languages": [],
    "contracts": [
        {
            "Name": "voting_Invite",
            "Value": "contract voting_Invite {\n    data {\n        votingID int\n        var_id int      //0, member_id, role_id\n    }\n\n    conditions {\n        $check_flag = 0\n\n        $ret_instance = DBFind(\"voting_instances\").Where(\"id=$ and enddate > now()\", $votingID)\n\t\tif (Len($ret_instance) > 0){\n\t\t\t$vals_instance = $ret_instance[0]\n\n            $type_p = Int($vals_instance[\"typeparticipants\"])\n            $number_participants = Int($vals_instance[\"number_participants\"])\n            $type_voting = Int($vals_instance[\"type_voting\"])\n\n            if (($number_participants > 1) && ($type_voting == 2)){\n                warning \"This vote is a system. Add new participants are not possible\"\n            }\n\n            if ($type_p == 1){       //anyone   \n            }\n\n            if ($type_p == 2){       //list of candidates\n                $ret_participants = DBFind(\"voting_participants\").Where(\"voting_id=$ and member_id=$\", $votingID, $var_id)\n                if (Len($ret_participants) > 0){\n                    warning \"Member has already been added before\"\n                }\n            }\n\n            if ($type_p == 3){       //list of candidates\n                $ret_participants = DBFind(\"voting_participants\").Where(\"voting_id=$\", $votingID)\n                if (Len($ret_participants) > 0){\n                    warning \"Voting participants have already been added before\"\n                }\n            }\n\n            $check_flag = 1\n\t\t} else {\n            warning \"Voting has expired. Can not add new participants\"\n        }\n    }\n\n    action {\n        if ($check_flag == 1){\n\n            if ($type_p == 1){\n                $ret_member = DBFind(\"member\").Columns(\"member_id,member_name,avatar\").Where(\"id > $\", 0).Order(\"id\")\n                $len = Len($ret_member)\n                $i = 0\n                while($i < $len){\n                    $vals_member = $ret_member[$i]\n                    DBInsert(`voting_participants`, `voting_id, member_id, member_name, member_avatar, decision`, $votingID, $vals_member[\"member_id\"], $vals_member[\"member_name\"], $vals_member[\"avatar\"], 0)  \n                    $number_participants = $number_participants + 1\n\n                    $i = $i + 1\n                } \n            }\n\n            if ($type_p == 2){\n                $ret_member = DBFind(\"member\").Columns(\"member_name,avatar\").Where(\"member_id = $\", $var_id).Order(\"id\")\n                if (Len($ret_member) > 0){\n                    $vals_member = $ret_member[0]\n\n                    DBInsert(`voting_participants`, `voting_id, member_id, member_name, member_avatar, decision`, $votingID, $var_id, $vals_member[\"member_name\"], $vals_member[\"avatar\"], 0)  \n                    $number_participants = $number_participants + 1\n                } \n            }\n\n            if ($type_p == 3){\n                $ret_member = DBFind(\"roles_assign\").Columns(\"member_id,member_name,member_avatar\").Where(\"role_id=$ and delete=0\", $var_id).Order(\"id\")\n                $len = Len($ret_member)\n                $i = 0\n                while($i < $len){\n                    $vals_member = $ret_member[$i]\n                    DBInsert(`voting_participants`, `voting_id, member_id, member_name, member_avatar, decision`, $votingID, $vals_member[\"member_id\"], $vals_member[\"member_name\"], $vals_member[\"member_avatar\"], 0)  \n                    $number_participants = $number_participants + 1\n                    \n                    $i = $i + 1\n                } \n            }\n\n            DBUpdate(`voting_instances`, $votingID, `number_participants`, $number_participants)\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "voting_CreateNew",
            "Value": "contract voting_CreateNew {\n    data {\n        voting_name string\n        type_voting int\n        description string\n        type_participants int\n        type_decision int\n        now_date string \"date\"\n        start_time string \"date\"\n        start_date string \"date\"\n        end_date string \"date\"\n        end_time string \"date\"\n        volume int\n        quorum int\n    }\n\n    func conditions {\n        $check_flag = 0\n\n        $start_date = $start_date + \" \"+ $start_time \n        $end_date = $end_date + \" \"+ $end_time \n\n        if ( $now_date >= $start_date ){\n            warning \"Voting start date is less than the current date\"\n        }\n        \n        if ( $start_date >= $end_date ){\n            warning \"Voting end date is less than the start date\"\n        }\n        \n        if ( ($volume < 50) || ($volume > 100) ){\n            warning \"Volume should be in the range from 50 to 100\"  \n        }\n        \n        if ( ($quorum < 5) || ($quorum > 100) ){\n            warning \"Quorum should be in the range from 5 to 100\"  \n        }\n\n\t\t$ret_member = DBFind(\"member\").Columns(\"member_name,avatar\").Where(\"member_id = $\", $key_id).Order(\"id\")\n\t\tif (Len($ret_member) > 0){\n\t\t\t$vals_member = $ret_member[0]\n\t\t\t$check_flag = 1\n\t\t}\n    }\n\n    func action {\n        if ($check_flag == 1){\n\t\t    $voting_id = DBInsert(`voting_instances`, `name,type_voting,description,typeParticipants,typeDecision,startDate,endDate,volume,quorum,creator_id,creator_name,creator_avatar,flag_success,percent_success,number_participants,number_voters,flag_decision,flag_notifics,delete`, \n\t\t\t\t\t    $voting_name, $type_voting, $description, $type_participants, $type_decision, $start_date, $end_date, $volume, $quorum, $key_id, $vals_member[\"member_name\"], $vals_member[\"avatar\"], 0, 0, 0, 0, 0, 0, 0)\n        \n            // if all members are voting participants\n            if ($type_participants==1){\n                voting_Invite(\"votingID,var_id\", $voting_id, 0)\n            }\n        }\n    } \n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "voting_Delete",
            "Value": "contract voting_Delete {\n    data {\n        votingID int\n    }\n\n    conditions {\n\t\t$check_flag = 0\n\t\t\n        $ret_instance = DBFind(\"voting_instances\").Columns(\"id, creator_id\").Where(\"id=? and startdate > now()\", $votingID)\n        if (Len($ret_instance) > 0){\n\n            $vals_instance = $ret_instance[0]\n            $creator_id    = Int($vals_instance[\"creator_id\"])\n\n            if ($creator_id != $key_id){\n                warning \"You are not the creator of the voting\"\n            }\n\n\t\t\t$check_flag = 1\n        } else {\n            warning \"Voting already started. Delete voting impossible\"\n        }\n    }\n\n    action {\n        if($check_flag == 1){\n            DBUpdate(`voting_instances`, $votingID, `delete`, 1)\n        }\n\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "voting_SendNotifics",
            "Value": "contract voting_SendNotifics {\n    data {\n        votingID int\n    }\n\n    conditions {\n\t\t$check_flag = 0\n\t\t\n        $ret_instance = DBFind(\"voting_instances\").Where(\"id=$ and startdate < now()\", $votingID)\n        if (Len($ret_instance) > 0){\n            $vals_instance = $ret_instance[0]\n\n            $creator_id    = Int($vals_instance[\"creator_id\"])\n            $flag_notifics = Int($vals_instance[\"flag_notifics\"])\n            $voting_name = string($vals_instance[\"name\"])\n\n            if( $creator_id != $key_id ){\n                warning \"You are not the creator of the voting\"\n            }\n            if( $flag_notifics == 1 ){\n                warning \"Notifications have already been sent\"\n            }\n\n            $check_flag = 1\n        }\n        else{\n            warning \"Voting has not yet begun. Try again later, please\"\n        }\n\n        $v_ID2 = DBFind(\"voting_instances\").Where(\"id=$ and enddate > now()\", $votingID)\n        if (Len($v_ID2) == 0){\n            $check_flag = 0\n            warning \"Voting has expired. Notifications can not be sent\" \n        }\n\n    }\n\n    action {\n        if ($check_flag == 1){\n\t\t\t$ret_participants = DBFind(\"voting_participants\").Where(\"voting_id=$ and decision=$\", $votingID, 0)\n\t\t\t$len_participants = Len($ret_participants)\n\t\t\t$i_participants = 0\n\t\t\twhile($i_participants < $len_participants){\n\t\t\t\t$vals_participants = $ret_participants[$i_participants]\n\t\t\t\t$i_participants = $i_participants + 1\n\t\t\t\t$recipient = Int($vals_participants[\"member_id\"])\n\t\t\t\t\n\t\t\t\tNotifications_Single_Send(\"icon_name,text_header,text_body,page_name,val_int,val_str,member_id\", \"fa-check\", \"Voting\", $voting_name, \"voting_view\", $votingID, \"\", $recipient)\n\t\t\t}\n\t\t\t\n\t\t\tDBUpdate(`voting_instances`, $votingID, `flag_notifics`, 1)\n        }\n    }\n}",
            "Conditions": "ContractConditions(`MainCondition`)"
        },
        {
            "Name": "voting_SubjectCheckFulldata",
            "Value": "contract voting_SubjectCheckFulldata {\n    data {\n        votingID int\n    }\n\n    conditions {\n        $check_flag = 0\n\n        $ret_instance = DBFind(\"voting_instances\").Columns(\"typedecision,optional_number_cands,optional_role_vacancies,optional_role_id\").Where(\"id=?\", $votingID)\n        $ret_subject = DBFind(\"voting_subject\").Columns(\"text_document,text_doc_hash,formal_decision_description,formal_decision_table,formal_decision_tableid,formal_decision_column,formal_decision_colvalue,contract_accept,contract_reject\").Where(\"voting_id=?\", $votingID)\n\n        if ( (Len($ret_instance) > 0) && (Len($ret_subject) > 0) ){\n             $vals_instance = $ret_instance[0]\n             $vals_subject= $ret_subject[0]\n             $check_flag = 1\n        }\n    }\n\n    action {\n        if ($check_flag == 1){\n\n            $typedecision = Int($vals_instance[\"typedecision\"])\n\n            if ( ($typedecision == 1) || ($typedecision == 2) ){\n                if ( (Int($vals_instance[\"optional_number_cands\"]) > 0) && (Int($vals_instance[\"optional_role_vacancies\"]) > 0) && (Int($vals_instance[\"optional_role_id\"])  > 0) ){\n                    DBUpdate(`voting_instances`, $votingID, `flag_fulldata`, 1)\n                } \n            }\n\n            if ($typedecision == 3){\n                if ( (string($vals_subject[\"text_document\"]) != \"\") && (string($vals_subject[\"text_doc_hash\"]) != \"\") ){\n                    DBUpdate(`voting_instances`, $votingID, `flag_fulldata`, 1)\n                } \n            }\n\n            if ($typedecision == 4){\n                if ( (string($vals_subject[\"formal_decision_description\"]) != \"\") && (string($vals_subject[\"formal_decision_table\"])  != \"\") && \n                     (string($vals_subject[\"formal_decision_tableid\"])     != \"\") && (string($vals_subject[\"formal_decision_column\"]) != \"\") && \n                     (string($vals_subject[\"formal_decision_colvalue\"])    != \"\") ){\n                    DBUpdate(`voting_instances`, $votingID, `flag_fulldata`, 1)\n                } \n            }\n\n            if ($typedecision == 5){\n                if ( (string($vals_subject[\"contract_accept\"]) != \"\") && (string($vals_subject[\"contract_reject\"]) != \"\") ){\n                    DBUpdate(`voting_instances`, $votingID, `flag_fulldata`, 1)\n                } \n            }\n\n        }\n    }\n\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "voting_SubjectCandidates",
            "Value": "contract voting_SubjectCandidates {\n    data {\n        votingID int\n        memberID int\n    }\n\n    conditions {\n        $check_flag = 0\n\n        if($memberID == 0){\n            $memberID = $key_id\n        }\n\n        $ret_instance = DBFind(\"voting_instances\").Columns(\"id,type_voting,flag_fulldata,optional_number_cands\").Where(\"id=$ and startdate > now()\", $votingID)\n        if (Len($ret_instance) > 0){\n            $vals_instance = $ret_instance[0]\n\n            $type_voting = Int($vals_instance[\"type_voting\"])\n            $flag_fulldata = Int($vals_instance[\"flag_fulldata\"])\n\n            if (($flag_fulldata == 1) && ($type_voting == 2)){\n                warning \"This vote is a system. Change settings not allowed\"\n            }\n\n            $ret_check = DBFind(\"voting_subject\").Columns(\"id\").Where(\"voting_id=$ and member_id=$\", $votingID, $memberID)\n            if (Len($ret_check) > 0){\n                warning \"This candidature for this role has already been added before\"\n            }\n\n            $ret_member = DBFind(\"member\").Columns(\"member_name,avatar\").Where(\"member_id = $\", $memberID)\n            if (Len($ret_member) > 0){\n                $vals_member = $ret_member[0]\n                $check_flag = 1\n            } else {\n                warning \"Specified member not found\"\n            }\n        } else {\n            warning \"Voting already started. New candidate can not be added\"\n        }\n    }\n\n    action {\n        if ($check_flag == 1){\n            DBInsert(`voting_subject`, `member_id,member_name,member_avatar,voting_id`, $memberID, $vals_member[\"member_name\"], $vals_member[\"avatar\"], $votingID)\n        \n            $optional_number_cands = Int($vals_instance[\"optional_number_cands\"])\n            $optional_number_cands = $optional_number_cands + 1\n            DBUpdate(`voting_instances`, $votingID, `optional_number_cands`, $optional_number_cands)\n\n            voting_SubjectCheckFulldata(\"votingID\", $votingID)\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "voting_SubjectSettings",
            "Value": "contract voting_SubjectSettings {\n    data {\n        votingID int\n        \n        roleID int\n        vacancies int\n        \n        contract_reject string \"optional\"\n        contract_accept string \"optional\"\n    }\n\n    conditions {\n        $ret_instance = DBFind(\"voting_instances\").Columns(\"id,type_voting,flag_fulldata\").Where(\"id=? and startdate > now()\", $votingID).Order(\"id\")\n        if (Len($ret_instance) > 0){\n            $vals_instance = $ret_instance[0]\n\n            $type_voting = Int($vals_instance[\"type_voting\"])\n            $flag_fulldata = Int($vals_instance[\"flag_fulldata\"])\n\n            if (($flag_fulldata == 1) && ($type_voting == 2)){\n                warning \"This vote is a system. Change settings not allowed\"\n            }\n        } else {\n            warning \"Voting already started. Change settings not allowed\"\n        }\n\n        $ret_role = DBFind(\"roles_list\").Columns(\"id,role_type\").Where(\"id=? and delete=0\", $roleID)\n        if (Len($ret_role) > 0){\n            $vals_role = $ret_role[0]\n            if (Int($vals_role[\"role_type\"]) != 2)\n            {\n                warning \"The chosen role is not elective or has been removed\"\n            }\n        } else {\n            warning \"Specified role not found\"\n        }\n\n        if ($vacancies < 1)\n        {\n            warning \"Number of vacancies can not be less than 1\"\n        }\n    }\n\n    action {\n        DBUpdate(`voting_instances`, $votingID, `optional_role_id,optional_role_vacancies,optional_contract_accept,optional_contract_reject`, \n                $roleID, $vacancies, $contract_accept, $contract_reject)\n\n        voting_SubjectCheckFulldata(\"votingID\", $votingID)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "voting_SubjectDocument",
            "Value": "contract voting_SubjectDocument {\n    data {\n        votingID int\n        \n        text_document string\n        \n        contract_reject string \"optional\"\n        contract_accept string \"optional\"\n    }\n\n    conditions {\n\t\t$check_flag = 0\n\t\t$hash = Sha256($text_document)\n\t\t\n        $ret_instance = DBFind(\"voting_instances\").Columns(\"id,type_voting,flag_fulldata\").Where(\"id=? and startdate > now()\", $votingID)\n        if (Len($ret_instance) > 0){\n            $vals_instance = $ret_instance[0]\n\n            $type_voting = Int($vals_instance[\"type_voting\"])\n            $flag_fulldata = Int($vals_instance[\"flag_fulldata\"])\n\n            if (($flag_fulldata == 1) && ($type_voting == 2)){\n                warning \"This vote is a system. Change settings not allowed\"\n            } else {\n\t\t\t    $check_flag = 1\n            }\n        } else {\n            warning \"Voting already started. Can not edit document\"\n        }\n    }\n\n    action {\n\t\tif ($check_flag == 1){\n\t\t\t$ret_subject = DBFind(\"voting_subject\").Columns(\"id\").Where(\"voting_id = $\", $votingID)\n\n\t\t\tif (Len($ret_subject) > 0){\n\t\t\t\t$vals_subject = $ret_subject[0]\n\t\t\t\tDBUpdate(`voting_subject`, Int($vals_subject[\"id\"]), `text_document, text_doc_hash`, $text_document, $hash)\n\t\t\t} else {\n\t\t\t\tDBInsert(`voting_subject`, `text_document, text_doc_hash, voting_id`, $text_document, $hash, $votingID)\n\t\t\t}\n\n\t\t\tDBUpdate(`voting_instances`, $votingID, `optional_contract_accept,optional_contract_reject`, $contract_accept, $contract_reject)\n\t\t\t\n\t\t\tvoting_SubjectCheckFulldata(\"votingID\", $votingID)\n\t\t}\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "voting_SubjectFormal",
            "Value": "contract voting_SubjectFormal {\n    data {\n        votingID int\n        \n        description string\n        table_to_written string\n        row_id string\n        column_name string\n        written_value string\n        \n        contract_reject string \"optional\"\n        contract_accept string \"optional\"\n    }\n\n    conditions {\n\t\t$check_flag = 0\n\t\t\n        $ret_instance = DBFind(\"voting_instances\").Columns(\"id,type_voting,flag_fulldata\").Where(\"id=? and startdate > now()\", $votingID)\n        if (Len($ret_instance) > 0){\n            $vals_instance = $ret_instance[0]\n\n            $type_voting = Int($vals_instance[\"type_voting\"])\n            $flag_fulldata = Int($vals_instance[\"flag_fulldata\"])\n\n            if (($flag_fulldata == 1) && ($type_voting == 2)){\n                warning \"This vote is a system. Change settings not allowed\"\n            } else {\n\t\t\t    $check_flag = 1\n            }\n        } else {\n            warning \"Voting already started. Change settings not allowed\"\n        }\n    }\n\n    action {\n        if ($check_flag == 1){\n            $ret_subject = DBFind(\"voting_subject\").Columns(\"id\").Where(\"voting_id = $\", $votingID)\n\n            if (Len($ret_subject) > 0){\n                $vals_subject = $ret_subject[0]\n                DBUpdate(`voting_subject`, Int($vals_subject[\"id\"]), `formal_decision_description,formal_decision_table,formal_decision_tableid,formal_decision_column,formal_decision_colvalue`, \n                    $description, $table_to_written, $row_id, $column_name, $written_value)\n            } else {\n                DBInsert(`voting_subject`, `voting_id,formal_decision_description,formal_decision_table,formal_decision_tableid,formal_decision_column,formal_decision_colvalue`, \n                    $votingID, $description, $table_to_written, $row_id, $column_name, $written_value)\n            }\n\n            DBUpdate(`voting_instances`, $votingID, `optional_contract_accept,optional_contract_reject`, $contract_accept, $contract_reject)\n\n            voting_SubjectCheckFulldata(\"votingID\", $votingID)\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "voting_SubjectContract",
            "Value": "contract voting_SubjectContract {\n    data {\n        votingID int\n        \n        contract_reject string\n        contract_accept string\n    }\n\n    conditions {\n\t\t$check_flag = 0\n\t\t\n        $ret_instance = DBFind(\"voting_instances\").Columns(\"id,type_voting,flag_fulldata\").Where(\"id=? and startdate > now()\", $votingID)\n        if (Len($ret_instance) > 0){\n            $vals_instance = $ret_instance[0]\n\n            $type_voting = Int($vals_instance[\"type_voting\"])\n            $flag_fulldata = Int($vals_instance[\"flag_fulldata\"])\n\n            if (($flag_fulldata == 1) && ($type_voting == 2)){\n                warning \"This vote is a system. Change settings not allowed\"\n            } else {\n\t\t\t    $check_flag = 1\n            }\n        } else {\n            warning \"Voting already started. Change settings not allowed\"\n        }\n    }\n\n    action {\n        if ($check_flag == 1){\n            $ret_subject = DBFind(\"voting_subject\").Columns(\"id\").Where(\"voting_id = $\", $votingID)\n\n            if (Len($ret_subject) > 0){\n                $vals_subject = $ret_subject[0]\n                DBUpdate(`voting_subject`, Int($vals_subject[\"id\"]), `contract_accept,contract_reject`, $contract_accept, $contract_reject)\n            } else {\n                DBInsert(`voting_subject`, `voting_id,contract_accept,contract_reject`, $votingID, $contract_accept, $contract_reject)\n            }\n            \n            voting_SubjectCheckFulldata(\"votingID\", $votingID)\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "voting_UpdateDataForGraphs",
            "Value": "contract voting_UpdateDataForGraphs {\n    data {\n        votingID int\n    }\n\n    conditions {\n        $check_flag = 0\n\n        $ret_instance = DBFind(\"voting_instances\").Where(\"id=$\", $votingID)\n\t\tif (Len($ret_instance) > 0){\n\t\t\t$vals_instance = $ret_instance[0]\n\n            $number_participants = Int($vals_instance[\"number_participants\"])  // number of participants\n            $number_voters       = Int($vals_instance[\"number_voters\"])        // number of voters\n            $volume              = Int($vals_instance[\"volume\"])               // percentage of votes for this vote\n\n            $check_flag = 1\n        }\n    }\n\n    action {\n        if ($check_flag == 1){\n            // increment count of voters\n            $number_voters = $number_voters + 1\n            \n            // calculate the percentage of the ratio of the number of voters to the number of participants (for the graph)\n            $percent_voters = ($number_voters * 100) / $number_participants\n            if ($percent_voters > 100) {$percent_voters = 100}\n            \n            // update progress\n            $percent_success = ($percent_voters * 100) / $volume\n            if ($percent_success > 100) {$percent_success = 100}\n            \n            // update the flag of success\n            $flag_success = 0\n            if ($percent_success == 100) {$flag_success = 1}\n\n            DBUpdate(`voting_instances`, $votingID, `number_voters,percent_voters,percent_success,flag_success`, \n                    $number_voters, $percent_voters, $percent_success, $flag_success)\n        }\n    }\n    \n}",
            "Conditions": "ContractConditions(`MainCondition`)"
        },
        {
            "Name": "voting_AcceptCandidates",
            "Value": "contract voting_AcceptCandidates {\n    data {\n        votingID int\n        candidateID int\n    }\n\n    conditions {\n        $check_flag = 0\n\n        $ret_instance = DBFind(\"voting_instances\").Where(\"id=$\", $votingID)\n\t\tif (Len($ret_instance) > 0){\n\t\t\t$vals_instance = $ret_instance[0]\n\n            $flag_decision       = Int($vals_instance[\"flag_decision\"])\n            $flag_notifics       = Int($vals_instance[\"flag_notifics\"])\n\n            $check_flag = 1\n        }\n    }\n\n    action {\n        if ($check_flag == 1){\n\n            // if notifications have been sent, then close it\n            if ($flag_notifics==1){\n                $ret_notification = DBFind(\"notifications\").Where(\"page_name=$ and page_val_int=$ and recipient_id=$\", \"voting_view\", $votingID, $key_id) \n                if (Len($ret_notification) > 0){\n                    $vals_notification = $ret_notification[0]\n                    $notifc_id = Int($vals_notification[\"id\"])\n                    if ( $notifc_id > 0){\n                        Notifications_Single_Close(\"notific_id\", $notifc_id)\n                    }\n                }\n            }\n\n            // check start and end of voting time\n            $v_ID1 = DBFind(\"voting_instances\").Where(\"id=$ and startdate < now()\", $votingID)\n            $v_ID2 = DBFind(\"voting_instances\").Where(\"id=$ and enddate   > now()\", $votingID)\n\n            if (Len($v_ID1)== 0){\n                warning \"Voting has not yet begun. Try again later, please\"\n            }\n            if (Len($v_ID2) == 0){\n                warning \"Voting has expired. Voting is now not possible\"\n            } \n\n            // check the decision\n            if ($flag_decision == 1){\n                warning \"Decision was taken. Voting is now not possible\"\n            } \n\n            // check the participant of the voting\n            $ret_participants = DBFind(\"voting_participants\").Where(\"voting_id=$ and member_id=$\", $votingID, $key_id)\n            if (Len($ret_participants) > 0){\n                $vals_participants = $ret_participants[0]\n                $voting_participants = Int($vals_participants[\"id\"])\n            } else {\n                warning \"You are not a participant in this voting\"\n            }   \n\n            //-----------------------------------------------------------------------------------------------\n\n            // write the result of the voting\n            DBUpdate(`voting_participants`, $voting_participants, `timestamp decision_date, decision`, $block_time, $candidateID)\n\n            // increment count of accept\n            $ret_subject = DBFind(\"voting_subject\").Where(\"voting_id=$ and member_id=$\", $votingID, $candidateID)\n            if (Len($ret_subject) > 0){\n                $vals_subject = $ret_subject[0]\n\n                $subject_id     = Int($vals_subject[\"id\"])\n                $number_accept  = Int($vals_subject[\"number_accept\"])\n                $number_accept   = $number_accept + 1\n\n                DBUpdate(`voting_subject`, $subject_id, `number_accept`, $number_accept)\n            }\n\n            voting_UpdateDataForGraphs(\"votingID\", $votingID)\n        }\n    }\n}",
            "Conditions": "ContractConditions(`MainCondition`)"
        },
        {
            "Name": "voting_AcceptDecision",
            "Value": "contract voting_AcceptDecision {\n    data {\n        votingID int\n    }\n\n    conditions {\n        $check_flag = 0\n\n        $ret_instance = DBFind(\"voting_instances\").Where(\"id=$\", $votingID)\n\t\tif (Len($ret_instance) > 0){\n\t\t\t$vals_instance = $ret_instance[0]\n\n            $flag_decision       = Int($vals_instance[\"flag_decision\"])\n            $flag_notifics       = Int($vals_instance[\"flag_notifics\"])\n\n            $check_flag = 1\n        }\n    }\n\n    action {\n        if ($check_flag == 1){\n\n            // if notifications have been sent, then close it\n            if ($flag_notifics==1){\n                $ret_notification = DBFind(\"notifications\").Where(\"page_name=$ and page_val_int=$ and recipient_id=$\", \"voting_view\", $votingID, $key_id) \n                if (Len($ret_notification) > 0){\n                    $vals_notification = $ret_notification[0]\n                    $notifc_id = Int($vals_notification[\"id\"])\n                    if ( $notifc_id > 0){\n                        Notifications_Single_Close(\"notific_id\", $notifc_id)\n                    }\n                }\n            }\n\n            // check start and end of voting time\n            $v_ID1 = DBFind(\"voting_instances\").Where(\"id=$ and startdate < now()\", $votingID)\n            $v_ID2 = DBFind(\"voting_instances\").Where(\"id=$ and enddate   > now()\", $votingID)\n\n            if (Len($v_ID1)== 0){\n                warning \"Voting has not yet begun. Try again later, please\"\n            }\n            if (Len($v_ID2) == 0){\n                warning \"Voting has expired. Voting is now not possible\"\n            } \n\n            // check the decision\n            if ($flag_decision == 1){\n                warning \"Decision was taken. Voting is now not possible\"\n            } \n\n            // check the participant of the voting\n            $ret_participants = DBFind(\"voting_participants\").Where(\"voting_id=$ and member_id=$\", $votingID, $key_id)\n            if (Len($ret_participants) > 0){\n                $vals_participants = $ret_participants[0]\n                $voting_participants = Int($vals_participants[\"id\"])\n            } else {\n                warning \"You are not a participant in this voting\"\n            }   \n\n            //-----------------------------------------------------------------------------------------------\n\n            // write the result of the voting\n            DBUpdate(`voting_participants`, $voting_participants, `timestamp decision_date, decision`, $block_time, 1)\n\n            // increment count of accept\n            $ret_subject = DBFind(\"voting_subject\").Where(\"voting_id=$\", $votingID)\n            if (Len($ret_subject) > 0){\n                $vals_subject = $ret_subject[0]\n\n                $subject_id     = Int($vals_subject[\"id\"])\n                $number_accept  = Int($vals_subject[\"number_accept\"])\n                $number_accept   = $number_accept + 1\n                \n                DBUpdate(`voting_subject`, $subject_id, `number_accept`, $number_accept)\n            }\n\n            voting_UpdateDataForGraphs(\"votingID\", $votingID)\n        }\n    }\n}",
            "Conditions": "ContractConditions(`MainCondition`)"
        },
        {
            "Name": "voting_RejectDecision",
            "Value": "contract voting_RejectDecision {\n    data {\n        votingID int\n    }\n\n    conditions {\n        $check_flag = 0\n\n        $ret_instance = DBFind(\"voting_instances\").Where(\"id=$\", $votingID)\n\t\tif (Len($ret_instance) > 0){\n\t\t\t$vals_instance = $ret_instance[0]\n\n            $flag_decision       = Int($vals_instance[\"flag_decision\"])\n            $flag_notifics       = Int($vals_instance[\"flag_notifics\"])\n\n            $check_flag = 1\n        }\n    }\n\n    action {\n        if ($check_flag == 1){\n\n            // if notifications have been sent, then close it\n            if ($flag_notifics==1){\n                $ret_notification = DBFind(\"notifications\").Where(\"page_name=$ and page_val_int=$ and recipient_id=$\", \"voting_view\", $votingID, $key_id) \n                if (Len($ret_notification) > 0){\n                    $vals_notification = $ret_notification[0]\n                    $notifc_id = Int($vals_notification[\"id\"])\n                    if ( $notifc_id > 0){\n                        Notifications_Single_Close(\"notific_id\", $notifc_id)\n                    }\n                }\n            }\n\n            // check start and end of voting time\n            $v_ID1 = DBFind(\"voting_instances\").Where(\"id=$ and startdate < now()\", $votingID)\n            $v_ID2 = DBFind(\"voting_instances\").Where(\"id=$ and enddate   > now()\", $votingID)\n\n            if (Len($v_ID1)== 0){\n                warning \"Voting has not yet begun. Try again later, please\"\n            }\n            if (Len($v_ID2) == 0){\n                warning \"Voting has expired. Voting is now not possible\"\n            } \n\n            // check the decision\n            if ($flag_decision == 1){\n                warning \"Decision was taken. Voting is now not possible\"\n            } \n\n            // check the participant of the voting\n            $ret_participants = DBFind(\"voting_participants\").Where(\"voting_id=$ and member_id=$\", $votingID, $key_id)\n            if (Len($ret_participants) > 0){\n                $vals_participants = $ret_participants[0]\n                $voting_participants = Int($vals_participants[\"id\"])\n            } else {\n                warning \"You are not a participant in this voting\"\n            }   \n\n            //-----------------------------------------------------------------------------------------------\n\n            // write the result of the voting\n            DBUpdate(`voting_participants`, $voting_participants, `timestamp decision_date, decision`, $block_time, -1)\n\n            voting_UpdateDataForGraphs(\"votingID\", $votingID)\n        }\n    }\n}",
            "Conditions": "ContractConditions(`MainCondition`)"
        },
        {
            "Name": "voting_CheckDecision",
            "Value": "contract voting_CheckDecision {\n    data {\n        votingID int\n    }\n\n    conditions {\n\t\t$check_flag = 0\n\t\t\n        $ret_instance = DBFind(\"voting_instances\").Where(\"id=$ and enddate < now()\", $votingID)\n\n        if (Len($ret_instance) > 0){\n\n            $vals_instance = $ret_instance[0]\n            $creator_id    = Int($vals_instance[\"creator_id\"])\n\n            if ($creator_id != $key_id){\n                warning \"Only creator the voting can check decision\"\n            }\n\n            $number_voters           = Int($vals_instance[\"number_voters\"])                // number of participants who have already voted\n            $optional_role_vacancies = Int($vals_instance[\"optional_role_vacancies\"])      // number of vacancies for the role\n            $voting_name             = string($vals_instance[\"name\"])                      // voting name\n            $quorum                  = Int($vals_instance[\"quorum\"])                       // quorum value\n            $optional_role_id        = Int($vals_instance[\"optional_role_id\"])             // role id\n            $contract_accept         = string($vals_instance[\"optional_contract_accept\"])  // contract accept \n            $contract_reject         = string($vals_instance[\"optional_contract_reject\"])  // contract reject \n\t\t\t$flag_success\t\t\t = Int($vals_instance[\"flag_success\"])             \t   // flag of success\n\t\t\t$typedecision\t\t\t = Int($vals_instance[\"typedecision\"])             \t   // type of decision\n\t\t\t\n\t\t\t$check_flag = 1\n        } else {\n            warning \"Voting has not expired. Try again later, please\"\n        }\n    }\n\n    action {\n        if ($check_flag == 1){\n\n            // if notifications have been sent, then close it\n\t\t\t$ret_notification = DBFind(\"notifications\").Where(\"page_name=$ and page_val_int=$ and closed=$\", \"voting_view\", $votingID, 0)\n\t\t\t$len_notification = Len($ret_notification)\n\t\t\t$i_notification = 0\n\t\t\twhile($i_notification < $len_notification){\n\t\t\t\t$vals_notification = $ret_notification[$i_notification] \n\t\t\t\tNotifications_Single_Close(\"notific_id\", Int($vals_notification[\"id\"]))\n\t\t\t\t$i_notification = $i_notification + 1\n\t\t\t} \n\n\t\t\t//if the flag of success = true (enough participants to make a decision)\n\t\t\tif ($flag_success == 1){\n\t\t\t\n\t\t\t\tif ( ($typedecision == 1) || ($typedecision == 2) ){\n\t\t\t\t\t$number_inserts = 0     // number of candidates who have already been added (for comparison with the number of vacancies)\n\t\t\t\t\t$flag_decision = -1     // none of the candidates has been added yet\n\t\t\t\t\t\n\t\t\t\t\t$ret_subject = DBFind(\"voting_subject\").Where(\"voting_id=$\", $votingID).Order(\"number_accept DESC\")\n\t\t\t\t\t$len_subject = Len($ret_subject)\n\t\t\t\t\t$i_subject = 0\n\t\t\t\t\twhile($i_subject < $len_subject){\n\t\t\t\t\t\t$vals_subject = $ret_subject[$i_subject]\n\t\t\t\t\t\t$i_subject = $i_subject + 1\t\t\t\t\t\n\n\t\t\t\t\t\t// if there are still vacancies\n\t\t\t\t\t\tif ($number_inserts < $optional_role_vacancies)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// calculate the percentage to compare it with the quorum\n\t\t\t\t\t\t\t$v_percent =  Int($vals_subject[\"number_accept\"]) * 100 / $number_voters\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// if percentage >= quorum values, then this candidate must be added to the role\n\t\t\t\t\t\t\tif ($v_percent >= $quorum)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$ret_role = DBFind(\"roles_list\").Where(\"id=$\", $optional_role_id)\n\t\t\t\t\t\t\t\tif (Len($ret_role) > 0){\n\t\t\t\t\t\t\t\t\t$vals_role = $ret_role[0]\n\t\t\t\t\t\t\t\t\t$role_name = string($vals_role[\"role_name\"])\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// add a candidate to the role\n\t\t\t\t\t\t\t\t\tDBInsert(`roles_assign`, `role_id,role_name,member_id,member_name,member_avatar,timestamp date_start,appointed_by_id,appointed_by_name`, \n\t\t\t\t\t\t\t\t\t\t$optional_role_id, $role_name, Int($vals_subject[\"member_id\"]), string($vals_subject[\"member_name\"]), string($vals_subject[\"member_avatar\"]), $block_time, $votingID, $voting_name) \n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// increment of the counter of candidates\n\t\t\t\t\t\t\t\t\t$number_inserts = $number_inserts + 1\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// if at least one of the candidates was added to the role, then the voting decision is considered successful\n\t\t\t\t\t\t\t\t\t$flag_decision = 1\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tDBUpdate(`voting_instances`, $votingID, `flag_decision`, $flag_decision)\n\t\t\t\t\n\t\t\t\t\t// starting optional contract\n\t\t\t\t\tif ($flag_decision == 1){\n\t\t\t\t\t\tif ($contract_accept != \"\"){\n\t\t\t\t\t\t\tvar par map\n\t\t\t\t\t\t\tCallContract($contract_accept, par) \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif ($contract_reject != \"\"){\n\t\t\t\t\t\t\tvar par map\n\t\t\t\t\t\t\tCallContract($contract_reject , par) \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif ($typedecision == 3){\n\t\t\t\t\t$ret_subject = DBFind(\"voting_subject\").Where(\"voting_id=$\", $votingID)\n\t\t\t\t\tif (Len($ret_subject) > 0){\n\t\t\t\t\t\t$vals_subject= $ret_subject[0]\n\t\t\t\t\t\t$number_accept = Int($vals_subject[\"number_accept\"])\n\t\t\t\t\t\t\n\t\t\t\t\t\t// calculate the percentage to compare it with the quorum\n\t\t\t\t\t\t$v_percent =  $number_accept  * 100 / $number_voters\n\t\t\t\t\t\t\n\t\t\t\t\t\t// if percentage >= quorum values, then this document will be approved\n\t\t\t\t\t\tif ($v_percent >= $quorum){\n\t\t\t\t\t\t\t$flag_decision = 1\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// otherwise the document will be rejected\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t$flag_decision = -1    \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tDBUpdate(`voting_instances`, $votingID, `flag_decision`, $flag_decision)\n\t\t\t\t\n\t\t\t\t\t// starting optional contract\n\t\t\t\t\tif ($flag_decision == 1){\n\t\t\t\t\t\tif ($contract_accept != \"\"){\n\t\t\t\t\t\t\tvar par map\n\t\t\t\t\t\t\tCallContract($contract_accept, par) \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif ($contract_reject != \"\"){\n\t\t\t\t\t\t\tvar par map\n\t\t\t\t\t\t\tCallContract($contract_reject , par) \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif ($typedecision == 4){\n\t\t\t\t\t$ret_subject = DBFind(\"voting_subject\").Where(\"voting_id=$\", $votingID)\n\t\t\t\t\tif (Len($ret_subject) > 0){\n\t\t\t\t\t\t$vals_subject= $ret_subject[0]\n\t\t\t\t\t\t$number_accept = Int($vals_subject[\"number_accept\"])\n\t\t\t\t\t\t\n\t\t\t\t\t\t// calculate the percentage to compare it with the quorum\n\t\t\t\t\t\t$v_percent =  $number_accept  * 100 / $number_voters\n\t\t\t\t\t\t\n\t\t\t\t\t\t// if percentage >= quorum values, then this document will be approved\n\t\t\t\t\t\tif ($v_percent >= $quorum){\n\t\t\t\t\t\t\t$flag_decision = 1\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t$decisionTable  = string($vals_subject[\"formal_decision_table\"])\n\t\t\t\t\t\t\t$decisionId     = Int($vals_subject[\"formal_decision_tableid\"])\n\t\t\t\t\t\t\t$decisionColumn = string($vals_subject[\"formal_decision_column\"])\n\t\t\t\t\t\t\t$decisionValue  = string($vals_subject[\"formal_decision_colvalue\"])\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// ALWAYS CHECK THE PERMISSION\n\t\t\t\t\t\t\tDBUpdate($decisionTable, $decisionId, $decisionColumn, $decisionValue)\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// otherwise the document will be rejected\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t$flag_decision = -1    \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tDBUpdate(`voting_instances`, $votingID, `flag_decision`, $flag_decision)\n\t\t\t\t\n\t\t\t\t\t// starting optional contract\n\t\t\t\t\tif ($flag_decision == 1){\n\t\t\t\t\t\tif ($contract_accept != \"\"){\n\t\t\t\t\t\t\tvar par map\n\t\t\t\t\t\t\tCallContract($contract_accept, par) \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif ($contract_reject != \"\"){\n\t\t\t\t\t\t\tvar par map\n\t\t\t\t\t\t\tCallContract($contract_reject , par) \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif ($typedecision == 5){\n\t\t\t\t\t$ret_subject = DBFind(\"voting_subject\").Where(\"voting_id=$\", $votingID)\n\t\t\t\t\tif (Len($ret_subject) > 0){\n\t\t\t\t\t\t$vals_subject= $ret_subject[0]\n\t\t\t\t\t\t$number_accept = Int($vals_subject[\"number_accept\"])\n\t\t\t\t\t\t\n\t\t\t\t\t\t// calculate the percentage to compare it with the quorum\n\t\t\t\t\t\t$v_percent =  $number_accept  * 100 / $number_voters\n\t\t\t\t\t\t\n\t\t\t\t\t\t$con_accept  = string($vals_subject[\"contract_accept\"])\n\t\t\t\t\t\t$con_reject  = string($vals_subject[\"contract_reject\"])    \n\t\t\t\t\t\t\n\t\t\t\t\t\t// if percentage >= quorum values, then this document will be approved\n\t\t\t\t\t\tif ($v_percent >= $quorum){\n\t\t\t\t\t\t\t$flag_decision = 1\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar par map\n\t\t\t\t\t\t\tCallContract($con_accept , par)\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// otherwise the document will be rejected\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t$flag_decision = -1  \n\n\t\t\t\t\t\t\tvar par map\n\t\t\t\t\t\t\tCallContract($con_reject , par)  \t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tDBUpdate(`voting_instances`, $votingID, `flag_decision`, $flag_decision)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t// decision can not be made (not enough participants to make a decision)\n\t\t\telse {\n\t\t\t\tDBUpdate(`voting_instances`, $votingID, `flag_decision`, -2)   \n\t\t\t}\n\n\t\t}\n    }\n}",
            "Conditions": "ContractConditions(`MainCondition`)"
        }
    ],
    "tables": [
        {
            "Name": "voting_instances",
            "Columns": "[{\"name\":\"enddate\",\"type\":\"datetime\",\"conditions\":\"false\"},{\"name\":\"creator_name\",\"type\":\"varchar\",\"conditions\":\"false\"},{\"name\":\"percent_success\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_UpdateDataForGraphs\\\")\"},{\"name\":\"typeparticipants\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"delete\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_Delete\\\")\"},{\"name\":\"volume\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"startdate\",\"type\":\"datetime\",\"conditions\":\"false\"},{\"name\":\"flag_success\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_UpdateDataForGraphs\\\")\"},{\"name\":\"flag_fulldata\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_SubjectCheckFulldata\\\")\"},{\"name\":\"flag_notifics\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_SendNotifics\\\")\"},{\"name\":\"optional_number_cands\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_SubjectCandidates\\\")\"},{\"name\":\"optional_contract_accept\",\"type\":\"varchar\",\"conditions\":\"ContractAccess(\\\"voting_SubjectSettings\\\", \\\"voting_SubjectDocument\\\", \\\"voting_SubjectFormal\\\")\"},{\"name\":\"description\",\"type\":\"text\",\"conditions\":\"false\"},{\"name\":\"type_voting\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"typedecision\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"flag_decision\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_CheckDecision\\\")\"},{\"name\":\"number_voters\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_UpdateDataForGraphs\\\")\"},{\"name\":\"number_participants\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_Invite\\\")\"},{\"name\":\"optional_role_vacancies\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_SubjectSettings\\\")\"},{\"name\":\"optional_contract_reject\",\"type\":\"varchar\",\"conditions\":\"ContractAccess(\\\"voting_SubjectSettings\\\", \\\"voting_SubjectDocument\\\", \\\"voting_SubjectFormal\\\")\"},{\"name\":\"name\",\"type\":\"varchar\",\"conditions\":\"false\"},{\"name\":\"quorum\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"creator_id\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"creator_avatar\",\"type\":\"bytea\",\"conditions\":\"false\"},{\"name\":\"percent_voters\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_UpdateDataForGraphs\\\")\"},{\"name\":\"optional_role_id\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_SubjectSettings\\\")\"}]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"
        },
        {
            "Name": "voting_participants",
            "Columns": "[{\"name\":\"member_id\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"voting_id\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"member_name\",\"type\":\"varchar\",\"conditions\":\"false\"},{\"name\":\"decision_date\",\"type\":\"datetime\",\"conditions\":\"ContractAccess(\\\"voting_AcceptCandidates\\\",\\\"voting_AcceptDecision\\\",\\\"voting_RejectDecision\\\")\"},{\"name\":\"member_avatar\",\"type\":\"bytea\",\"conditions\":\"true\"},{\"name\":\"decision\",\"type\":\"number\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"
        },
        {
            "Name": "voting_subject",
            "Columns": "[{\"name\":\"text_doc_hash\",\"type\":\"text\",\"conditions\":\"ContractAccess(\\\"voting_SubjectDocument\\\")\"},{\"name\":\"contract_reject\",\"type\":\"varchar\",\"conditions\":\"ContractAccess(\\\"voting_SubjectContract\\\")\"},{\"name\":\"member_name\",\"type\":\"varchar\",\"conditions\":\"true\"},{\"name\":\"number_accept\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_AcceptCandidates\\\",\\\"voting_AcceptDecision\\\")\"},{\"name\":\"contract_accept\",\"type\":\"varchar\",\"conditions\":\"ContractAccess(\\\"voting_SubjectContract\\\")\"},{\"name\":\"formal_decision_column\",\"type\":\"varchar\",\"conditions\":\"ContractAccess(\\\"voting_SubjectFormal\\\")\"},{\"name\":\"voting_id\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"text_document\",\"type\":\"text\",\"conditions\":\"ContractAccess(\\\"voting_SubjectDocument\\\")\"},{\"name\":\"formal_decision_colvalue\",\"type\":\"varchar\",\"conditions\":\"ContractAccess(\\\"voting_SubjectFormal\\\")\"},{\"name\":\"formal_decision_description\",\"type\":\"text\",\"conditions\":\"ContractAccess(\\\"voting_SubjectFormal\\\")\"},{\"name\":\"member_id\",\"type\":\"number\",\"conditions\":\"false\"},{\"name\":\"member_avatar\",\"type\":\"bytea\",\"conditions\":\"true\"},{\"name\":\"formal_decision_table\",\"type\":\"varchar\",\"conditions\":\"ContractAccess(\\\"voting_SubjectFormal\\\")\"},{\"name\":\"formal_decision_tableid\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"voting_SubjectFormal\\\")\"}]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"
        }
    ],
    "data": []
}