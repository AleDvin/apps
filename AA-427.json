{
    "name": "Basic application",
    "data": [
        {
            "Conditions": "ContractAccess(\"@1EditMenu\")",
            "Value": "MenuItem(Title:$manager$, Page:manager, Icon:\"icon-folder\")",
            "Name": "default_menu",
            "Type": "menu"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "Div(content-wrapper){\n    If(#notific_id#>0){\n        SetVar(notific_header,).(notific_body,).(form_of_listing_id,0).(amount,0)\n        DBFind(notifications).Columns(\"id,notification->type,notification->header,notification->body,page_params->form_of_listing_id\").Where(\"id=#notific_id#\").Vars(note)\n        SetVar(notific_header,#note_notification_header#).(notific_body,#note_notification_body#).(form_of_listing_id,#note_page_params_form_of_listing_id#)\n\n        If(#form_of_listing_id#>0){\n            DBFind(form_of_listing).WhereId(#form_of_listing_id#).Vars(offer)\n            SetVar(amount,#offer_discount_max#)\n            DBFind(members).WhereId(#offer_issuer#).Vars(owner)\n            DBFind(members).WhereId(#offer_dealer#).Vars(buyer)\n            Data(sec1,\"Name,Val,Cls\"){\n                title,#offer_type_of_note#,h2\n                ISIN,#offer_isin#,h3\n                Ratings,#offer_ratings#,h3\n                Amount,#offer_agregat_p_a#,h3\n            }\n            Data(sec2,\"Name,Val,Cls\"){\n                Owner,\"Image(Src: Binary().ById(#owner_image_id#)) #owner_member_name#\",h4\n                Buyer,\"Image(Src: Binary().ById(#buyer_image_id#)) #buyer_member_name#\",h4\n                Guarantor,#offer_guarantor#,h4\n                Listing Agent,#offer_listing_agent#,h4\n                Clearing System,#offer_clearing_system#,h4\n                Delivery,#offer_delivery#,h4\n                Listing and admission to trading,#offer_listing_and_admission_to_tr#,h4\n                Issue Date,\"DateTime(#offer_issue_date#,DD-MM-YYYY)\",h4\n                Maturity Date,\"DateTime(#offer_maturity_date#, DD-MM-YYYY)\",h4\n            }\n            Data(secs,\"sec\"){\n                sec1\n                sec2\n            }\n            Div(container){\n                Div(row){\n                    Div(col-md-10 col-md-offset-1){\n                        Form(panel panel-default){\n                            Div(list-group-item text-center h3 text-bold m0){\n                                #notific_body#\n                                Div(){\n                                    Please confirm the transaction\n                                }\n                            }\n                            ForList(secs){\n                                Div(list-group-item text-center){\n                                    ForList(#sec#){\n                                        If(#Name#==title){\n                                            Div(h2 text-bold pb-lg){\n                                                #Val#\n                                            }\n                                        }.Else{\n                                            Div(row m0 pb #Cls# fv){\n                                                Div(col-md-6 text-bold text-right){\n                                                    #Name#\n                                                }\n                                                Div(col-md-6 text-left f-valign){\n                                                    #Val#\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            Div(panel-footer text-right){\n                                Button(Body: Accept, Class: btn btn-primary, Page: profile_view, Contract: paper_Accept, Params: \"PaperId=#form_of_listing_id#,NotificId=#notific_id#,Amount=#amount#\")\n                                Button(Body: Reject, Class: btn btn-danger pull-left, Page: profile_view, Contract: paper_Reject, Params: \"PaperId=#form_of_listing_id#,NotificId=#notific_id#\")\n                            }\n                        }\n                    }\n                }\n            }.Style(\n                img {width: 50px; height: 50px;}\n                .pb-lg {padding-bottom:13px;}\n                .pb {padding-bottom:8px;}\n                .fv {\n                    display: flex;\n                    align-items: center\n                }\n            )\n        }.Else{\n            Div(col-md-12 alert alert-danger text-center h3){\n                Offer not found\n            }\n        }\n    }.Else{\n        Div(col-md-12 alert alert-danger text-center h3){\n            Notification not found\n        }\n    }\n}",
            "Name": "alfi_paper",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "Div()",
            "Name": "default_ecosystem_page",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "Div(content-wrapper){\n    If(#notific_id#>0){\n        SetVar(notific_type,).(notific_header,).(amount,).(buyer,).(emitent,).(paper_title,)\n        DBFind(notifications).Columns(\"id,notification->type,notification->header,page_params->buyer,page_params->emitent,page_params->paper_title,page_params->amount\").Where(\"id=#notific_id#\").Vars(note)\n        SetVar(notific_type,#note_notification_type#).(notific_header,#note_notification_header#).(amount,#note_page_params_amount#).(buyer,#note_page_params_buyer#).(emitent,#note_page_params_emitent#).(paper_title,#note_page_params_paper_title#)\n\n        Div(container){\n            Div(row){\n                Div(col-md-8 col-md-offset-2){\n                    Form(panel panel-primary){\n                        Div(panel-heading text-center){\n                            #notific_header#\n                        }\n                        Div(panel-body){\n                            Div(row){\n                                Div(col-md-10 col-md-offset-2){\n                                    To approve the transfer of the amount #amount# from \"buyer\" (wallet Address(#buyer#)) to \"issuer\" (wallet Address(#emitent#)), buying paper \"#paper_title#\".\n                                    If(#ecosystem_id#==4){\n                                        Div(){\n                                            Block amount #amount# in the \"buyer\" account\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        Div(panel-footer text-left){\n                            Button(Body: Reject, Class: btn btn-danger, Contract: manager_Reject, Params: \"NotificId=#notific_id#\", Page: default_page)\n                            Button(Body: Accept, Class: btn btn-primary pull-right, Contract: manager_Accept, Params: \"NotificId=#notific_id#,Amount=#amount#\", Page: default_page)\n                        }\n                    }\n                }\n            }\n        }\n    }.Else{\n        Div(col-md-12 alert alert-danger text-center h3){\n            Notification not found\n        }\n    }\n}",
            "Name": "manager",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "Div(content-wrapper){\n    If(#notific_id#>0){\n        SetVar(notific_header,).(notific_body,).(form_of_listing_id,0)\n        DBFind(notifications).Columns(\"id,notification->type,notification->header,notification->body,page_params->form_of_listing_id\").Where(\"id=#notific_id#\").Vars(note)\n        SetVar(notific_header,#note_notification_header#).(notific_body,#note_notification_body#).(form_of_listing_id,#note_page_params_form_of_listing_id#)\n        Div(container){\n            Div(row){\n                Div(col-md-8 col-md-offset-2){\n                    Form(panel panel-primary){\n                        Div(panel-heading text-center){\n                            #notific_header#\n                        }\n                        Div(panel-body){\n                            #notific_body#\n                        }\n                        Div(panel-footer text-center){\n                            Button(Body: Ok, Class: btn btn-primary, Contract: notifications_Close, Params: \"notific_id=#notific_id#\", Page: alfi_paper, PageParams: \"form_of_listing_id=#form_of_listing_id#\")\n                        }\n                    }\n                }\n            }\n        }\n    }.Else{\n        Div(col-md-12 alert alert-danger text-center h3){\n            Notification not found\n        }\n    }\n}",
            "Name": "notifications_finok",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "Div(content-wrapper){\n    If(#notific_id#>0){\n        SetVar(notific_header,).(notific_body,)\n        DBFind(notifications).Columns(\"id,notification->type,notification->header,notification->body\").Where(\"id=#notific_id#\").Vars(note)\n        SetVar(notific_header,#note_notification_header#).(notific_body,#note_notification_body#)\n\n        Div(container){\n            Div(row){\n                Div(col-md-8 col-md-offset-2){\n                    Form(panel panel-primary){\n                        Div(panel-heading text-center){\n                            #notific_header#\n                        }\n                        Div(panel-body){\n                            #notific_body#\n                        }\n                        Div(panel-footer text-center){\n                            Button(Body: Ok, Class: btn btn-primary, Contract: notifications_Close, Params: \"notific_id=#notific_id#\", Page: profile_view)\n                        }\n                    }\n                }\n            }\n        }\n    }.Else{\n        Div(col-md-12 alert alert-danger text-center h3){\n            Notification not found\n        }\n    }\n}",
            "Name": "notifications_ok",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract manager_Accept {\n    data {\n        NotificId int\n        Amount money\n    }\n    func blockDeposit(memberId int){\n        DBUpdate(\"@1_keys\", memberId, \"+deposit\", $Amount)\n        var sender int header body page params eco string\n        sender = 1\n        header = \"Tokens has been blocked\"\n        body = \"Part of your APL tokens has been blocked until completion of the calculations\"\n        page = \"notifications_ok\"\n        params = $notific[\"page_params\"]\n        eco = \"3\"\n        notifications_Send(\"member_id,sender,text_header,text_body,page_name,params_map,eco\", memberId, sender,header, body, page, params, eco)\n    }\n    func sendValidated(memberId int){\n        var sender int header body page params eco string\n        sender = 1\n        header = \"Tokens transfer has been validated\"\n        body = \"The APL Token transfer has been validated by the PSPs servicing the parties\"\n        page = \"alfi_paper\"\n        params = $notific[\"page_params\"]\n        eco = \"3\"\n        notifications_Send(\"member_id,sender,text_header,text_body,page_name,params_map,eco\", memberId,sender,header,body,page,params,eco)\n    }\n    func signFin(fin int){\n        var signature string\n        if fin == 1 {\n            signature = \"signature_fin1\"\n        }\n        if fin == 2 {\n            signature = \"signature_fin2\"\n        }\n        if signature {\n            DBUpdate(\"@3_form_of_listing\", Int($form[\"id\"]), signature, 1)\n        }\n    }\n    func isBothFinSigned() bool{\n        if DBFind(\"@3_form_of_listing\").Where(\"id=? and signature_fin1=1 and signature_fin2=1\", Int($form[\"id\"])).One(\"id\") {\n            return true\n        }\n        return false\n    }\n    conditions {\n        $notific = DBFind(\"notifications\").Columns(\"id,notification->type,notification->header,page_params->buyer,page_params->emitent,page_params->paper_title,page_params->amount,page_params->form_of_listing_id,page_params\").Where(\"id=?\", $NotificId).Row()\n        if !$notific {\n            warning \"Notification not found\"\n        }\n        if $role_id != 3 {\n            warning \"Accepting allowed only for Manager\"\n        }\n        $buyer = DBFind(\"keys\").Ecosystem(1).Where(\"id=?\", $notific[\"page_params.buyer\"]).Row()\n        $emitent = DBFind(\"keys\").Ecosystem(1).Where(\"id=?\", $notific[\"page_params.emitent\"]).Row()\n        $paper = $notific[\"page_params.paper_title\"]\n        $form = DBFind(\"form_of_listing\").Ecosystem(3).Where(\"id=?\", $notific[\"page_params.form_of_listing_id\"]).Row()\n\n        if !$buyer{\n            warning \"buyer not found\"\n        }\n        if !$emitent{\n            warning \"emitent not found\"\n        }\n        if !$paper{\n            warning \"paper_title not found\"\n        }\n        if !$Amount {\n            warning \"amount not found\"\n        }\n        if !$form {\n            warning \"Transaction ID not found\"\n        }\n        if $ecosystem_id == 4 { // fin A\n            if Money($buyer[\"amount\"]) - Money($buyer[\"deposit\"]) - $Amount <= 0 {\n                warning \"Funds in the account of the buyer is not enough\"\n            }\n        }\n    }\n    action {\n        if $ecosystem_id == 4 { // fin A\n            blockDeposit(Int($buyer[\"id\"]))\n            signFin(1)\n        }\n        if $ecosystem_id == 5 { // fin B\n            signFin(2)\n        }\n        if isBothFinSigned() {\n            sendValidated(Int($buyer[\"id\"]))\n            sendValidated(Int($emitent[\"id\"]))\n        }\n\n        notifications_Close(\"notific_id\", $NotificId)\n    }\n}",
            "Name": "manager_Accept",
            "Type": "contracts"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract manager_Reject {\n    data {\n        NotificId int\n    }\n    conditions {\n        $notific = DBFind(\"notifications\").Columns(\"id,notification->type,notification->header,page_params->buyer,page_params->emitent,page_params->paper_title,page_params->amount,page_params->form_of_listing_id\").Where(\"id=?\", $NotificId).Row()\n        if !$notific {\n            warning \"Notification not found\"\n        }\n        if $role_id != 3 {\n            warning \"Rejecting allowed only for Manager\"\n        }\n    }\n    action {\n        notifications_Close(\"notific_id\", $NotificId)\n    }\n}",
            "Name": "manager_Reject",
            "Type": "contracts"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract paper_Accept {\n    data {\n        PaperId int\n        NotificId int\n        Amount money\n    }\n    func signAccept(){\n        var signature string\n        if $isBuyer {\n            signature = \"signature_buyer\"\n        }\n        if $isOwner {\n            signature = \"signature_owner\"\n        }\n        if signature {\n            DBUpdate(\"@3_form_of_listing\", $PaperId, signature, 1)\n        }\n    }\n    func isFullSigned() bool{\n        if DBFind(\"form_of_listing\").Ecosystem(3).Where(\"id=? and signature_fin1=1 and signature_fin2=1 and signature_buyer=1 and signature_owner=1\", $PaperId).One(\"id\") {\n            return true\n        }\n        return false\n    }\n    func changeOwner(){\n        DBUpdate(\"@3_form_of_listing\", $PaperId, \"issuer,dealer,signature_fin1,signature_fin2,signature_owner,signature_buyer\", $paper[\"dealer\"], \"\", 0, 0, 0, 0)\n    }\n    func transferAmount(){\n        if $paper[\"dealer\"] > 0 {\n            DBUpdate(\"@1_keys\", Int($paper[\"dealer\"]), \"-deposit,-amount\", $Amount, $Amount)\n            DBUpdate(\"@1_keys\", Int($paper[\"issuer\"]), \"+amount\", $Amount)\n        }\n    }\n    conditions {\n        $paper = DBFind(\"form_of_listing\").Ecosystem(3).Where(\"id=?\", $PaperId).Row()\n        if !$paper {\n            warning \"Paper not found\"\n        }\n        $isBuyer = false\n        $isOwner = false\n        if $paper[\"dealer\"] == $key_id {\n            $isBuyer = true\n        }\n        if $paper[\"issuer\"] == $key_id {\n            $isOwner = true\n        }\n        if !($isOwner || $isBuyer){\n            warning \"Denied. You can not accept it\"\n        }\n    }\n    action {\n        signAccept()\n        if isFullSigned() {\n            transferAmount()\n            changeOwner()\n        }\n        notifications_Close(\"notific_id\", $NotificId)\n    }\n}",
            "Name": "paper_Accept",
            "Type": "contracts"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract paper_Reject {\n    data {\n        PaperId int\n        NotificId int\n    }\n    func signReject(){\n        var signature string\n        if $isBuyer {\n            signature = \"signature_buyer\"\n        }\n        if $isOwner {\n            signature = \"signature_owner\"\n        }\n        if signature {\n            DBUpdate(\"@3_form_of_listing\", $PaperId, signature, -1)\n        }\n    }\n    func unholdDeposit(){\n        var amount money\n        amount = Int($paper[\"discount_max\"]) * SysParamInt(\"money_digit\")\n        DBUpdate(\"@1_keys\", Int($paper[\"dealer\"]), \"-deposit\", amount)\n    }\n    func isValidForUnhold(){\n        if $isOwner {\n            return\n        }\n        if DBFind(\"form_of_listing\").Ecosystem(3).Where(\"id=? and (signature_buyer=-1 or signature_owner=-1)\", $PaperId).Row(){\n            return\n        }\n        var amount money\n        amount = Int($paper[\"discount_max\"]) * SysParamInt(\"money_digit\")\n        DBUpdate(\"@1_keys\", Int($paper[\"dealer\"]), \"-deposit\", amount)\n    }\n    conditions {\n        $paper = DBFind(\"form_of_listing\").Ecosystem(3).Where(\"id=?\", $PaperId).Row()\n        if !$paper {\n            warning \"Paper not found\"\n        }\n        $isBuyer = false\n        $isOwner = false\n        if $paper[\"dealer\"] == $key_id {\n            $isBuyer = true\n        }\n        if $paper[\"issuer\"] == $key_id {\n            $isOwner = true\n        }\n        if !($isOwner || $isBuyer){\n            warning \"Denied. You can not reject it\"\n        }\n        if $paper[\"dealer\"] == $paper[\"issuer\"] {\n            warning \"Denied. Offer out of date\"\n        }\n    }\n    action {\n        signReject()\n        if isValidForUnhold() {\n            unholdDeposit()\n        }\n        notifications_Close(\"notific_id\", $NotificId)\n    }\n}",
            "Name": "paper_Reject",
            "Type": "contracts"
        }
    ]
}