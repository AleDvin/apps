{
    "name": "Basic application",
    "data": [
        {
            "Conditions": "ContractAccess(\"@1EditMenu\")",
            "Value": "MenuItem(Title:$manager$, Page:manager, Icon:\"icon-folder\")",
            "Name": "default_menu",
            "Type": "menu"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "Div()",
            "Name": "default_ecosystem_page",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "Div(content-wrapper){\n    If(#notific_id#>0){\n        SetVar(notific_type,).(notific_header,).(amount,).(buyer,).(emitent,).(paper_title,)\n        DBFind(notifications).Columns(\"id,notification->type,notification->header,page_params->buyer,page_params->emitent,page_params->paper_title,page_params->amount\").Where(\"id=#notific_id#\").Vars(note)\n        SetVar(notific_type,#note_notification_type#).(notific_header,#note_notification_header#).(amount,#note_page_params_amount#).(buyer,#note_page_params_buyer#).(emitent,#note_page_params_emitent#).(paper_title,#note_page_params_paper_title#)\n\n        Div(container){\n            Div(row){\n                Div(col-md-8 col-md-offset-2){\n                    Form(panel panel-primary){\n                        Div(panel-heading text-center){\n                            #notific_header#\n                        }\n                        Div(panel-body){\n                            Div(row){\n                                Div(col-md-10 col-md-offset-2){\n                                    To approve the transfer of the amount #amount# from \"buyer\" (wallet Address(#buyer#)) to \"issuer\" (wallet Address(#emitent#)), buying paper \"#paper_title#\".\n                                    If(#ecosystem_id#==4){\n                                        Div(){\n                                            Block amount #amount# in the \"buyer\" account\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        Div(panel-footer text-left){\n                            Button(Body: Reject, Class: btn btn-danger, Contract: manager_Reject, Params: \"NotificId=#notific_id#\", Page: default_page)\n                            Button(Body: Accept, Class: btn btn-primary pull-right, Contract: manager_Accept, Params: \"NotificId=#notific_id#\", Page: default_page)\n                        }\n                    }\n                }\n            }\n        }\n    }.Else{\n        Div(col-md-12 alert alert-danger text-center h3){\n            Notification not found\n        }\n    }\n}",
            "Name": "manager",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract manager_Accept {\n    data {\n        NotificId int\n    }\n    func blockDeposit(memberId int){\n        DBUpdate(\"@1_keys\", memberId, \"+deposit\", $deposit)\n        var sender int header body page params eco string\n        sender = 1\n        header = \"Tokens has been blocked\"\n        body = \"Part of your APL tokens has been blocked until completion of the calculations\"\n        page = \"notifications_testpage\"\n        params = \"{}\"\n        eco = \"3\"\n        notifications_Send(\"member_id,sender,text_header,text_body,page_name,params_map,eco\", memberId, sender,header, body, page, params, eco)\n    }\n    func sendValidated(memberId int){\n        var sender int header body page params eco string\n        sender = 1\n        header = \"Tokens transfer has been validated\"\n        body = \"The APL Token transfer has been validated by the PSPs servicing the parties\"\n        page = \"notifications_testpage\"\n        params = \"{}\"\n        eco = \"3\"\n        notifications_Send(\"member_id,sender,text_header,text_body,page_name,params_map,eco\", memberId,sender,header,body,page,params,eco)\n    }\n    func signFin(fin int){\n        var signature string\n        if fin == 1 {\n            signature = \"signature_fin1\"\n        }\n        if fin == 2 {\n            signature = \"signature_fin2\"\n        }\n        if signature {\n            DBUpdate(\"@3_form_of_listing\", Int($form[\"id\"]), signature, 1)\n        }\n    }\n    func isBothFinSigned() bool{\n        if DBFind(\"@3_form_of_listing\").Where(\"id=? and signature_fin1=1 and signature_fin2=1\", Int($form[\"id\"])).One(\"id\") {\n            return true\n        }\n        return false\n    }\n    conditions {\n        $notific = DBFind(\"notifications\").Columns(\"id,notification->type,notification->header,page_params->buyer,page_params->emitent,page_params->paper_title,page_params->amount,page_params->form_of_listing_id\").Where(\"id=?\", $NotificId).Row()\n        if !$notific {\n            warning \"Notification not found\"\n        }\n        if $role_id != 3 {\n            warning \"Accepting allowed only for Manager\"\n        }\n        $buyer = DBFind(\"keys\").Ecosystem(1).Where(\"id=?\", $notific[\"page_params.buyer\"]).Row()\n        $emitent = DBFind(\"keys\").Ecosystem(1).Where(\"id=?\", $notific[\"page_params.emitent\"]).Row()\n        $deposit = Money($notific[\"page_params.amount\"])\n        $paper = $notific[\"page_params.paper_title\"]\n        $form = DBFind(\"form_of_listing\").Ecosystem(3).Where(\"id=?\", $notific[\"page_params.form_of_listing_id\"]).Row()\n\n        if !$buyer{\n            warning \"buyer not found\"\n        }\n        if !$emitent{\n            warning \"emitent not found\"\n        }\n        if !$paper{\n            warning \"paper_title not found\"\n        }\n        if !$deposit {\n            warning \"amount not found\"\n        }\n        if !$form {\n            warning \"Transaction ID not found\"\n        }\n        if Money($buer[\"amount\"]) - Money($buer[\"deposit\"]) - $deposit <= 0 {\n            warning \"Funds in the account of the buyer is not enough\"\n        }\n    }\n    action {\n        if $ecosystem_id == 4 { // fin A\n            blockDeposit(Int($buyer[\"id\"]))\n            signFin(1)\n        }\n        if $ecosystem_id == 5 { // fin B\n            signFin(2)\n        }\n        if isBothFinSigned() {\n            sendValidated(Int($buyer[\"id\"]))\n            sendValidated(Int($emitent[\"id\"]))\n        }\n\n        notifications_Close(\"notific_id\", $NotificId)\n    }\n}",
            "Name": "manager_Accept",
            "Type": "contracts"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract manager_Reject {\n    data {\n        NotificId int\n    }\n    conditions {\n        $notific = DBFind(\"notifications\").Columns(\"id,notification->type,notification->header,page_params->buyer,page_params->emitent,page_params->paper_title,page_params->amount,page_params->form_of_listing_id\").Where(\"id=?\", $NotificId).Row()\n        if !$notific {\n            warning \"Notification not found\"\n        }\n        if $role_id != 3 {\n            warning \"Rejecting allowed only for Manager\"\n        }\n    }\n    action {\n        notifications_Close(\"notific_id\", $NotificId)\n    }\n}",
            "Name": "manager_Reject",
            "Type": "contracts"
        }
    ]
}