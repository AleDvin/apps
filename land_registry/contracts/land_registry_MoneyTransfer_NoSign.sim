contract land_registry_MoneyTransfer_NoSign{
    data{
        from_acc_id int
        to_acc_id int
        Amount money
    }
    
    func conditions{
        if $from_acc_id == $to_acc_id {
            warning "Sender account ID and Recipient account ID are the same."
        }
        
        //----CHECK RECIPIENT----------------------------
        var recipientAccount map
        recipientAccount = DBFind("accounts").Where("id=? and onhold=0", $to_acc_id).Row()
        var recipientAccountType int
        recipientAccountType = Int(recipientAccount["type"])
        
        // transfer of tokens to sys-emission account is impossible; use emission
        //if((recipientAccountType==1) &&($from_acc_id != 0) ) {
        //	warning "Sorry, you can not send money to the system account"
        //}
        
        // transfer of tokens to sys-trash account is impossible; this account is necessary for storing remote tokens
        //if((recipientAccountType==2) &&($Signature == "") ){
        //	warning "Sorry, you can not send money to the system account"
        //}
        var recipientAccountHolded map
        recipientAccountHolded = DBFind("accounts").Where("id=? and onhold>0", $to_acc_id).Row()
        
        var recipientOnhold int
        recipientOnhold = Int(recipientAccountHolded["onhold"])
        
        if recipientOnhold > 0 && recipientAccountType != 2 {
            warning "Recipient account on hold"
        }
        
        //----CHECKING SENDER----------------------------
        if $from_acc_id != 0 {
            var senderAccount map
            senderAccount = DBFind("accounts").WhereId($from_acc_id).Order("id desc").Row()
            
            // transfer tokens from sys-emission account can only gov_account
            if Int(senderAccount["type"]) == 1 {
                MainCondition()
            }
            
            // transfer tokens from sys-trash is impossible
            if Int(senderAccount["type"]) == 2 {
                warning "Sorry, you can not send funds from trash-account"
            }
            
            if Int(senderAccount["onhold"]) > 0 && recipientAccountType != 2 {
                warning "Sender account on hold"
            }
            
            $senderBalance = money(senderAccount["amount"])
            if $senderBalance < $Amount {
                warning "Sorry, your account has insufficient funds"
            }
        }
        else{
            // if senderAccount_id == 0, then this emission
            MainCondition()
        }
    }
    
    func action {
        var to_acc map
        var recipientBalance money
        recipientAccount = DBFind("accounts").WhereId($to_acc_id).Row()
        recipientBalance = Int(recipientAccount["amount"]) + $Amount
        DBUpdate("accounts", $to_acc_id, "amount", recipientBalance)
        
        if $from_acc_id != 0 {
            $senderBalance = $senderBalance - $Amount
            DBUpdate("accounts", $from_acc_id, "amount", $senderBalance)
        }
    }
}