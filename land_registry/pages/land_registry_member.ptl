If(GetVar(v_member_id)){
    DBFind(Name: members, Source: src_member).Where(id=#v_member_id#).Vars(profile)
}.Else{
    DBFind(Name: members, Source: src_member).Where(id=#key_id#).Vars(profile)
}

SetVar(this, land_registry_member)

DBFind(Name:notifications, Source: src_notifications).Where("notification_type=1 AND recipient_id=#profile_id# AND closed=0").Order("id desc").Custom(_id){
    Div(text-center h5){#id#}.Style(width:20px;)
}.Custom(_page){
    Div(h5 text-left){
        Span(Class: fa fa-1x fa-bell-o).Style(width:20px;margin-right:10px;)
        LinkPage(Page: #page_name#, Body: #header_text# : #body_text#, PageParams: "notific_id=#id#,notific_type=#notification_type#,notific_header=#header_text#,#page_params# ").Style(cursor:pointer;)
    }
}

Div(row df){
    SetTitle($user_info$)
    Div(col-md-6 mt-lg text-center){
        Div(col-md-12){
            Form(panel panel-default elastic data-sweet-alert){
                Div(panel-heading){
                    Div(panel-title){
                        Span(Class: h3, Body: LangRes(user_info))
                    }
                }
                
                Div(list-group-item){
                    Div(row df f-valign){
                        Div(col-md-12 mt-sm text-center){
                            If(#profile_id# != 0){
                                If(#profile_id# == #key_id#){
                                    Button(Class: btn btn-link, Page: profile_edit, PageParams: "v_member_id=#profile_id#"){
                                        Image(Src: "#profile_avatar#", Class: img-circle).Style(width: 100px; border: 1px solid #5A5D63; margin-bottom: 15px;)
                                        Div(Body: Span(Class: h3 text-bold, Body: #profile_member_name#))
                                    }
                                }.Else{
                                    Image(Src: "#profile_avatar#", Class: img-circle).Style(width: 100px; border: 1px solid #5A5D63; margin-bottom: 15px;)
                                    Div(Body: Span(Class: h3 text-bold, Body: #profile_member_name#))
                                }
                            }.Else{
                                Button(Class: btn btn-link, Page: profile_edit, , PageParams: "v_member_id=#profile_id#"){
                                    Span(Class: h3 text-bold, Body: LangRes(editing_profile))
                                }
                            }
                            
                        }
                    }
                }
     
                Div(list-group-item){
                    Div(row df f-valign){
                        Div(col-md-12 mt-sm text-center){
                            Span(Class: h4 text-bold, Body: Address(#profile_id#))
                            Div(Body: Span(Class: h5, Body: LangRes(member_id)))
                            
                            
                        }
                    }
                }
                
            }
        }
    }
    Div(col-md-6 mt-lg text-center){
        Div(col-md-12){
            Form(panel panel-default elastic data-sweet-alert){
                Div(panel-heading){
                    Div(panel-title){
                        Span(Class: h3, Body: LangRes(tokens_transfer))
                    }
                }
                Div(list-group-item){
                    Div(row df f-valign){
                        Div(col-md-3 mt-sm text-right){Label(Body: LangRes(my_account))}
                        Div(col-md-9 mc-sm text-left){
                            DBFind(Name: accounts, Source: source_sender).Where("onhold=0 and member_id=#key_id#").Custom(custom_username){
                                Span(Class: h4 text-bold, Body: id: #id#(EcosysParam(Name: tokens_accounts_systype, Index: #account_type#) ) - LangRes(available): #amount#)
                            }
                            Select(Name: sender_id, Source: source_sender, NameColumn: custom_username, ValueColumn: id)
                        }
                    }
                }
                
                Div(list-group-item){
                    Div(row df f-valign){
                        Div(col-md-3 mt-sm text-right){
                            Label(For: recipient_id){
                                Span(Body: LangRes(recipient_account))
                            }
                        }
                        Div(col-md-9 mb-sm text-left){
                            DBFind(Name: accounts, Source: source_recipient).Columns(id, member_name, member_id, account_type).Custom(custom_username){
                                Span(Class: h4 text-bold, Body: id: #id#(EcosysParam(Name: tokens_accounts_systype, Index: #account_type#) ) - #member_name#(Address(#member_id#) ) )
                            }.Where("onhold=0 and account_type<>4 and account_type<>5")
                            Select(Name: recipient_id, Source: source_recipient, NameColumn: custom_username, ValueColumn: id)
                        }
                    }
                    
                    Div(row df f-valign){
                        Div(col-md-3 mt-sm text-right){
                            Label(For: amount){
                                Span(Body: LangRes(amount))
                            }
                        }
                        Div(col-md-9 mc-sm text-left){
                            Input(Class: form-control, Placeholder: 0, Type: Number, Name: amount)
                        }
                    }
                }
                
                Div(panel-footer clearfix){
                    Div(pull-left){
                        Button(Body: LangRes(back), Class: btn btn-default, Page: land_registry)
                    }
                    Div(pull-right){
                        Button(Body: LangRes(send), Class: btn btn-primary, Page: tokens_accounts_list, Contract: Tokens_Transfer).Alert(Text: $want_send_tokens$, ConfirmButton: $yes$, CancelButton: $no$, Icon: question)
                    }
                }
            }
        }
        Div(col-md-12){
            Div(panel panel-default elastic data-sweet-alert){
                Div(panel-heading){
                    Div(panel-title){
                        Span(Class: h3, Body: LangRes(pending_notifics))
                    }
                }
                Div(panel-body){
                    Div(table-responsive){
                        Table(Source: src_notifications, Columns: "id=_id,$message$=_page")
                    }
                }
            }
        }
    }
}