{
    "pages": [
        {
            "Name": "profile_view",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu",
            "Value": "Div(Class: content-wrapper){\r\n\r\n\tSetTitle($user_info$)\r\n\tDiv(Class: breadcrumb){\r\n\t\tSpan(Class: text-muted, Body: LangRes(user_info))\r\n\t}\r\n\r\n    If(Or(#v_member_id#>0,#v_member_id#<0)){\r\n        DBFind(Name: member, Source: src_member).Where(member_id=#v_member_id#).Vars(prefix)\r\n    }.Else{\r\n        DBFind(Name: member, Source: src_member).Where(member_id=#key_id#).Vars(prefix)\r\n    }\r\n\r\n    If(#prefix_id# > 0){\r\n    }.Else{\r\n        SetVar(Name: prefix_member_name, Value: \"\")\r\n    }\r\n\r\n    Div(Class: row df f-valign){\r\n        Div(Class: col-md-3)\r\n        Div(Class: col-md-6){\r\n            Div(Class: panel panel-default){\r\n                Form(){ \r\n\r\n\t\t\t\t\tDiv(Class: list-group-item){\r\n\t\t\t\t\t\tSpan(Class: h3, Body: LangRes(user_info))\t\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tDiv(Class: list-group-item){\r\n\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\tDiv(Class: col-md-12 mt-sm text-center){\r\n\r\n\t\t\t\t\t\t\t\tIf(#prefix_id# > 0){\r\n\t\t\t\t\t\t\t\t\tIf(#prefix_member_id# == #key_id#){\r\n\t\t\t\t\t\t\t\t\t\tButton(Class: btn btn-link, Page: profile_edit, PageParams: \"v_member_id=#member_id#\"){\r\n\t\t\t\t\t\t\t\t\t\t\tImage(Src: \"#prefix_avatar#\", Class: img-circle).Style(width: 100px;  border: 1px solid #5A5D63; margin-bottom: 15px;)\r\n\t\t\t\t\t\t\t\t\t\t\tDiv(Body: Span(Class: h3 text-bold, Body: #prefix_member_name#))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\t\tImage(Src: \"#prefix_avatar#\", Class: img-circle).Style(width: 100px;  border: 1px solid #5A5D63; margin-bottom: 15px;)\r\n\t\t\t\t\t\t\t\t\t\tDiv(Body: Span(Class: h3 text-bold, Body: #prefix_member_name#))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}.Else{\r\n\t\t\t\t\t\t\t\t\tButton(Class: btn btn-link, Page: profile_edit){\r\n\t\t\t\t\t\t\t\t\t\tSpan(Class: h3 text-bold, Body: LangRes(editing_profile))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tDiv(Class: list-group-item){\r\n\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\tDiv(Class: col-md-12 mt-sm text-center){\r\n\t\t\t\t\t\t\t\tSpan(Class: h4 text-bold, Body: Address(#prefix_member_id#))\r\n\t\t\t\t\t\t\t\tDiv(Body: Span(Class: h5, Body: LangRes(member_id)))\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\r\n                }\r\n            }\r\n        }\r\n        Div(Class: col-md-3)\r\n    }\r\n}"
        },
        {
            "Name": "profile_edit",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu",
            "Value": "Div(Class: content-wrapper){\n\n\tSetTitle($editing_profile$)\n\tDiv(Class: breadcrumb){\n\t\tLinkPage($user_info$, profile_view)\n\t\tSpan(/).Style(margin-right: 10px; margin-left: 10px;)\n\t\tSpan(Class: text-muted, Body: $editing_profile$)\n\t}\n\n    If(#v_member_id# > 0){\n        DBFind(Name: member, Source: src_member).Where(member_id=#v_member_id#).Vars(prefix)\n    }.Else{\n        DBFind(Name: member, Source: src_member).Where(member_id=#key_id#).Vars(prefix)\n    }\n\n    If(#prefix_id#>0){\n\t\tSetVar(Name: prefix_birthdate, Value: DateTime(DateTime: #prefix_birthdate#, Format: \"YYYY-MM-DD\"))\n    }.Else{\n        SetVar(Name: prefix_member_name, Value: \"\")\n    }\n\n    Div(Class: row df f-valign){\n        Div(Class: col-md-3)\n        Div(Class: col-md-6){\n            Div(Class: panel panel-primary){\n                Div(Class: panel-heading, Body: LangRes(editing_profile))\n                Form(){ \n\n\t\t\t\t\tDiv(Class: list-group-item){\n\t\t\t\t\t\tDiv(Class: row df f-valign){\n\t\t\t\t\t\t\tDiv(Class: col-md-3 mt-sm text-right){\n\t\t\t\t\t\t\t\tLabel(For: username){\n\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(username))\n      \t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tDiv(Class: col-md-9 mc-sm text-left){\n\t\t\t\t\t\t\t\tInput(Class: form-control, Type: text, Name: member_name, Value: #prefix_member_name#)\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tDiv(Class: list-group-item){\n\t\t\t\t\t\tDiv(Class: row df f-valign){\n\t\t\t\t\t\t\tDiv(Class: col-md-3 mt-sm text-right){\n\t\t\t\t\t\t\t\tLabel(For: avatar){\n\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(avatar))\n\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tDiv(col-md-9 mc-sm text-left){\n\t\t\t\t\t\t\t\tImageInput(Name: avatar, Width: 100, Ratio: 1/1)\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                    \n\t\t\t\t\tDiv(Class: panel-footer clearfix){\n\t\t\t\t\t\tDiv(Class: pull-right){\n\t\t\t\t\t\t\tButton(Body: LangRes(save), Class: btn btn-primary, Contract: Profile_Edit , Page: members_list,).Alert(Text: $want_save_changes$, ConfirmButton: $yes$, CancelButton: $no$, Icon: question)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                }\n            }\n        }\n        Div(Class: col-md-3)\n    }\n}"
        },
        {
            "Name": "members_list",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "membership_menu",
            "Value": "Div(Class: content-wrapper){\r\n\r\n\tSetTitle($membership$)\r\n\tDiv(breadcrumb){\r\n\t\tSpan(Class: text-muted, Body: $membership$)\r\n\t}\r\n\r\n    If(GetVar(isSearch) == 1){\r\n        SetVar(Name: v_Where, Value: \"member_name='#v_Search#'\")\r\n    }.Else{\r\n        SetVar(Name: v_Where, Value: \"id>0\")\r\n        SetVar(Name: v_Search, Value: \"\")\r\n    }\r\n\r\n    DBFind(Name: member, Source: src_member).Custom(custom_username){\r\n        Button(Class: btn btn-link, Page: profile_view, PageParams: \"v_member_id=#member_id#\"){\r\n            Image(Src: \"#avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\r\n            Span(Class: h5 text-bold, Body: #member_name#)\r\n        }\r\n\t}.Custom(custom_member_id){\r\n        Span(Body: Address(#member_id#))\r\n    }.Where(#v_Where#).Order(id)\r\n\r\n    Div(Class: panel panel-primary){\r\n        Form(){\r\n            Div(Class: list-group-item){\r\n                Div(Class: row df f-valign){\r\n                    Div(Class: col-md-1 mt-sm text-right){\r\n                        Label(For: Search){\r\n                            Span(Body: LangRes(username))\r\n                        }\r\n                    }\r\n                    Div(Class: col-md-11 mc-sm){\r\n                        Div(Class: input-group){\r\n                            Input(Class: form-control, Type: text, Name: Search, Value: #v_Search#)\r\n                            Div(Class: input-group-btn){\r\n                                Button(Body: Em(Class: fa fa-search), Class: btn btn-default, Page: members_list, PageParams: \"isSearch=1,v_Search=Val(Search)\")\r\n                            }\r\n                        }\r\n                    }\r\n                }  \r\n            }\r\n\r\n            Div(Class: list-group-item){ \r\n                Table(Source: src_member, Columns: \"$id$=id,$username$=custom_username,$member_id$=custom_member_id\")\r\n                If(GetVar(isSearch) == 1){\r\n                    Div(Class: text-center){  \r\n                        Button(Body: $view_all$, Class: btn btn-primary, Page: members_list, PageParams: \"isSearch=0\")\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }           \r\n    }\r\n\r\n}"
        },
        {
            "Name": "roles_list",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "membership_menu",
            "Value": "Div(Class: content-wrapper){\r\n\r\n\tSetTitle($roles$)\r\n\tDiv(breadcrumb){\r\n\t\tSpan(Class: text-muted, Body: $roles$)\r\n\t}\r\n\r\n    If(GetVar(isSearch) == 1){\r\n        SetVar(Name: v_Where, Value: \"role_name='#v_Search#'\")\r\n    }.Else{\r\n        SetVar(Name: v_Where, Value: \"id>0\")\r\n        SetVar(Name: v_Search, Value: \"\")\r\n    }\r\n\r\n    DBFind(Name: roles_list, Source: src_roles_list).Custom(custom_id){\r\n        If(#delete# == 0){\r\n            Span(Body: #id#)  \r\n        }.Else{\r\n            Span(Body: #id#).Style(color:#A9A9A9;)\r\n        }\r\n    }.Custom(custom_creator){\r\n        If(#role_type#==3){\r\n            Div(){\r\n                Span(Class: h5, Body: LangRes(system_role))\r\n            }.Style(margin-left: 15px;)\r\n        }.Else{\r\n            If(#delete# == 0){\r\n                Button(Class: btn btn-link, Page: profile_view, PageParams: \"v_member_id=#creator_id#\"){\r\n                    Image(Src: \"#creator_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\r\n                    Span(Class: h5 text-bold, Body: #creator_name#)\r\n                }\r\n            }.Else{\r\n                Div(){\r\n                    Image(Src: \"#creator_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\r\n                    Span(Class: h5 text-bold, Body: #creator_name#)\r\n                }.Style(color:#A9A9A9; margin-left: 15px;)\r\n            }\r\n        }\r\n    }.Custom(custom_name){\r\n        If(#delete# == 0){\r\n            Button(Class: btn btn-link, Page: roles_view, PageParams: \"v_role_id=#id#,v_role_name=#role_name#\"){\r\n                Span(Class: h4 text-bold, Body: #role_name#)\r\n            }\r\n        }.Else{\r\n            Span(Class: h4 text-bold, Body: #role_name#).Style(color:#A9A9A9; margin-left: 15px;)\r\n        }\r\n\t}.Custom(custom_date){\r\n        If(#delete# == 0){\r\n            Div(Body: DateTime(DateTime: #date_create#, Format: \"DD.MM.YYYY HH:MI\"))\r\n            Div(Body: DateTime(DateTime: #date_delete#, Format: \"DD.MM.YYYY HH:MI\"))\r\n        }.Else{\r\n            Div(Body: DateTime(DateTime: #date_create#, Format: \"DD.MM.YYYY HH:MI\")).Style(color:#A9A9A9;)\r\n            Div(Body: DateTime(DateTime: #date_delete#, Format: \"DD.MM.YYYY HH:MI\")).Style(color:#A9A9A9;)\r\n        }\r\n\t}.Custom(custom_type){\r\n        If(#delete# == 0){\r\n            Span(Body: EcosysParam(Name: roles_types, Index: #role_type#))\r\n        }.Else{\r\n            Span(Body: EcosysParam(Name: roles_types, Index: #role_type#)).Style(color:#A9A9A9;)\r\n        }\r\n    }.Custom(custom_status){\r\n        If(#delete# == 0){\r\n            Span(Body: LangRes(active))\r\n        }.Else{\r\n            Span(Body: LangRes(deleted)).Style(color:#A9A9A9;)\r\n        }\r\n    }.Custom(actions){\r\n        If(And(#delete#==0,#role_type#!=3)){\r\n            Button(Body: Em(Class: fa fa-trash), Class: btn btn-danger, Contract: Roles_Del, Params: \"role_id=#id#\", Page: roles_list)\r\n        }\r\n   }.Where(#v_Where#).Order(\"delete ASC, id ASC\")\r\n\r\n    Div(Class: panel panel-primary){\r\n        Form(){\r\n            Div(Class: list-group-item){\r\n                Div(Class: row df f-valign){\r\n                    Div(Class: col-md-1 mt-sm text-right){\r\n                        Label(For: Search){\r\n                            Span(Body: LangRes(name))\r\n                        }\r\n                    }\r\n                    Div(Class: col-md-11 mc-sm){\r\n                        Div(Class: input-group){\r\n                            Input(Class: form-control, Type: text, Name: Search, Value: #v_Search#)\r\n                            Div(Class: input-group-btn){\r\n                                Button(Body: Em(Class: fa fa-search), Class: btn btn-default, Page: roles_list, PageParams: \"isSearch=1,v_Search=Val(Search)\")\r\n                            }\r\n                        }\r\n                    }\r\n                }  \r\n            }\r\n\r\n            Div(Class: list-group-item){ \r\n                Table(Source: src_roles_list, Columns: \"$id$=custom_id,$name$=custom_name,$type$=custom_type,$created$ / $deleted$=custom_date,$status$=custom_status,$creator$=custom_creator,$actions$=actions\")\r\n                If(GetVar(isSearch) == 1){\r\n                    Div(Class: text-center){  \r\n                        Button(Body: $view_all$, Class: btn btn-primary, Page: roles_list, PageParams: \"isSearch=0\")\r\n                    }\r\n                }\r\n            }\r\n\r\n            Div(Class: panel-footer clearfix){\r\n                Div(Class: pull-right){\r\n                    Button(Body: LangRes(create), Class: btn btn-primary, Page: roles_create)\r\n                }\r\n            }\r\n            \r\n        }           \r\n    }\r\n\r\n}"
        },
        {
            "Name": "roles_create",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "membership_menu",
            "Value": "Div(Class: content-wrapper){\r\n\r\n\tSetTitle($new_role$)\r\n\tDiv(Class: breadcrumb){\r\n\t\tLinkPage($roles$, roles_list)\r\n\t\tSpan(/).Style(margin-right: 10px; margin-left: 10px;)\r\n\t\tSpan(Class: text-muted, Body: $new_role$)\r\n\t}\r\n\r\n    Div(Class: row df f-valign){\r\n        Div(Class: col-md-3)\r\n        Div(Class: col-md-6){\r\n\r\n            Div(Class: panel panel-primary){\r\n                Div(Class: panel-heading, Body: LangRes(new_role))\r\n                Form(){   \r\n\r\n                        Div(Class: list-group-item){\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: role_name){\r\n                                        Span(Body: LangRes(name))\r\n                                    }\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    Input(Class: form-control, Type: text, Name: role_name)\r\n                                } \r\n                            }\r\n                        }\r\n\r\n                        Div(Class: list-group-item){\r\n                            Div(Class: row df f-valign){\r\n                                Div(Class: col-md-3 mt-sm text-right){\r\n                                    Label(For: role_type){\r\n                                        Span(Body: LangRes(type))\r\n                                    }\r\n                                }\r\n                                Div(Class: col-md-9 mc-sm text-left){\r\n                                    EcosysParam(Name: roles_types_short, Source: src_roles)\r\n                                    Select(Name: role_type, Source: src_roles, NameColumn: name, ValueColumn: id)\r\n                                } \r\n                            }\r\n                        }\r\n\r\n                    Div(Class: panel-footer clearfix){\r\n                        Div(Class: pull-right){\r\n                            Button(Body: LangRes(back), Class: btn btn-default, Page: roles_list)\r\n                            Button(Body: LangRes(create), Class: btn btn-primary, Page: roles_list, Contract: Roles_Create).Alert(Text: $want_create_new_role$, ConfirmButton: $yes$, CancelButton: $no$, Icon: question)\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n        Div(Class: col-md-3)\r\n    }\r\n}"
        },
        {
            "Name": "roles_assign",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "membership_menu",
            "Value": "Div(Class: content-wrapper){\r\n\t\r\n    If(#v_role_id# > 0){\r\n\r\n        SetTitle($assign$)\r\n        Div(Class: breadcrumb){\r\n            LinkPage($roles$, roles_list)\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            LinkPage(#v_role_name#, roles_view,, \"v_role_id=#v_role_id#,v_role_name=#v_role_name#\")\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            Span(Class: text-muted, Body: $assign$)\r\n        }\r\n\r\n        Div(Class: row df f-valign){\r\n            Div(Class: col-md-3)\r\n            Div(Class: col-md-6){\r\n\r\n                Div(Class: panel panel-primary){\r\n                    Div(Class: panel-heading, Body: LangRes(assign))\r\n                    Form(){  \r\n\r\n\t\t\t\t\t\tDiv(Class: list-group-item){\r\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\t\tLabel(For: role_id){\r\n\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(role))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-9 mt-sm text-left){\r\n\t\t\t\t\t\t\t\t\tDBFind(Name: roles_list, Source: source_roles).Columns(role_name, role_type, id).Where(\"id=#v_role_id#\").Vars(prefix)\r\n\t\t\t\t\t\t\t\t\tInput(Class: form-control hidden, Type: text, Name: role_id, Value: #prefix_id#)\r\n\t\t\t\t\t\t\t\t\tSpan(Class: h5, Body: #prefix_role_name#)\r\n\t\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tDiv(Class: list-group-item){\r\n\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\t\tLabel(For: role_id){\r\n\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(type))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tDiv(Class: col-md-9 mt-sm text-left){\r\n\t\t\t\t\t\t\t\t\tSpan(Class: h5, Body: EcosysParam(Name: roles_types, Index: #prefix_role_type#)\r\n\t\t\t\t\t\t\t\t\tIf(#prefix_role_type# != 1){\r\n\t\t\t\t\t\t\t\t\t\tP(Class: m0 text-danger h6, Body: LangRes(appointment_impossible))\r\n\t\t\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tIf(#prefix_role_type# == 1){\r\n\t\t\t\t\t\t\tDiv(Class: list-group-item){\r\n\t\t\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n\t\t\t\t\t\t\t\t\t\tLabel(For: role_name){\r\n\t\t\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(member))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n\t\t\t\t\t\t\t\t\t\tDBFind(Name: member, Source: source_members).Columns(member_name, member_id).Custom(custom_username){\r\n                                            Span(Body: #member_name# ( Address(#member_id#) ) ) \r\n                                        }\r\n\t\t\t\t\t\t\t\t\t\tSelect(Name: member_id, Source: source_members, NameColumn: custom_username, ValueColumn: member_id)\r\n\t\t\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n                            \r\n                        Div(Class: panel-footer clearfix){\r\n                            Div(Class: pull-right){\r\n                                Button(Body: LangRes(back), Class: btn btn-default, Page: roles_view, PageParams: \"v_role_id=#v_role_id#,v_role_name=#v_role_name#\")\r\n                                If(#prefix_role_type# == 1){\r\n                                    Button(Body: LangRes(assign), Class: btn btn-primary, Page: roles_view, PageParams: \"v_role_id=#v_role_id#,v_role_name=#v_role_name#\", Contract: Roles_Assign).Alert(Text: $want_assign_member_to_role$, ConfirmButton: $yes$, CancelButton: $no$, Icon: question)\r\n                                }\r\n                            }\r\n                        }\r\n                        \r\n                    }\r\n\r\n                }\r\n            }\r\n            Div(Class: col-md-3)\r\n        }\r\n        \r\n    }.Else{\r\n        Div(Class: md-12 alert alert-danger text-center){\r\n            Span(Body: LangRes(attention))\r\n        }\r\n    }\r\n}"
        },
        {
            "Name": "roles_view",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "membership_menu",
            "Value": "Div(Class: content-wrapper){\r\n\t\r\n    If(#v_role_id# > 0){\r\n\r\n        SetTitle($role$: #v_role_name#)\r\n        Div(Class: breadcrumb){\r\n            LinkPage($roles$, roles_list)\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            Span(Class: text-muted, Body: #v_role_name#)\r\n        }\r\n\r\n        DBFind(Name: roles_assign, Source: src_roles_assign).Custom(custom_id){\r\n            If(#delete# == 0){\r\n                Span(Body: #id#)  \r\n            }.Else{\r\n                Span(Body: #id#).Style(color:#A9A9A9;)\r\n            }\r\n        }.Custom(custom_appointed){\r\n            If(#delete# == 0){\r\n                Span(Body: #appointed_by_name#)  \r\n            }.Else{\r\n                Span(Body: #appointed_by_name#).Style(color:#A9A9A9;)\r\n            }\r\n        }.Custom(custom_role_name){\r\n            If(#delete# == 0){\r\n                Span(Body: #role_name#)  \r\n            }.Else{\r\n                Span(Body: #role_name#).Style(color:#A9A9A9;)\r\n            }\r\n        }.Custom(custom_member){\r\n            If(#delete# == 0){\r\n                Button(Class: btn btn-link, Page: profile_view, PageParams: \"v_member_id=#member_id#\"){\r\n                    Image(Src: \"#member_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\r\n                    Span(Class: h5 text-bold, Body: #member_name#)\r\n                }\r\n            }.Else{\r\n                Div(){\r\n                    Image(Src: \"#member_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\r\n                    Span(Class: h5 text-bold, Body: #member_name#)\r\n                }.Style(color:#A9A9A9; margin-left: 15px;)\r\n            }\r\n        }.Custom(custom_address){\r\n            If(#delete# == 0){\r\n                Span(Body: Address(#member_id#))\r\n            }.Else{\r\n                Span(Body: Address(#member_id#)).Style(color:#A9A9A9;)\r\n            }\r\n        }.Custom(custom_type){\r\n            If(#delete# == 0){\r\n                Span(Body: EcosysParam(Name: roles_types, Index: #role_type#))\r\n            }.Else{\r\n                Span(Body: EcosysParam(Name: roles_types, Index: #role_type#)).Style(color:#A9A9A9;)\r\n            }\r\n        }.Custom(custom_date){\r\n            If(#delete# == 0){\r\n                Div(Body: DateTime(DateTime: #date_start#, Format: \"DD.MM.YYYY HH:MI\"))\r\n                Div(Body: DateTime(DateTime: #date_end#, Format: \"DD.MM.YYYY HH:MI\"))\r\n            }.Else{\r\n                Div(Body: DateTime(DateTime: #date_start#, Format: \"DD.MM.YYYY HH:MI\")).Style(color:#A9A9A9;)\r\n                Div(Body: DateTime(DateTime: #date_end#, Format: \"DD.MM.YYYY HH:MI\")).Style(color:#A9A9A9;)\r\n            }\r\n        }.Custom(custom_status){\r\n            If(#delete# == 0){\r\n                Span(Body: LangRes(active))\r\n            }.Else{\r\n                Span(Body: LangRes(deleted)).Style(color:#A9A9A9;)\r\n            }\r\n        }.Custom(actions){\r\n            If(#delete# == 0){\r\n                Button(Body: Em(Class: fa fa-trash), Class: btn btn-danger, Contract: Roles_Unassign, Params: \"row_id=#id#\", Page: roles_view, PageParams: \"v_role_id=#v_role_id#,v_role_name=#v_role_name#\")\r\n            }\r\n        }.Where(\"role_id='#v_role_id#'\").Order(\"delete ASC, id ASC\")\r\n\r\n        Div(Class: panel panel-primary){\r\n            Form(){\r\n\r\n                Div(Class: list-group-item){ \r\n                    Table(Source: src_roles_assign, Columns: \"$id$=custom_id,$member$=custom_member,$member_id$=custom_address,$role$=custom_role_name,$type$=custom_type,$appointed$ / $deleted$=custom_date,$appointed$=custom_appointed,$status$=custom_status,$actions$=actions\")\r\n                }\r\n\r\n                Div(Class: panel-footer clearfix){\r\n                    Div(Class: pull-right){\r\n                        Button(Body: LangRes(back), Class: btn btn-default, Page: roles_list)\r\n                        Button(Body: LangRes(assign), Class: btn btn-primary, Page: roles_assign, PageParams: \"v_role_id=#v_role_id#,v_role_name=#v_role_name#\")\r\n                    }\r\n                }\r\n                \r\n            }           \r\n        }\r\n\r\n    }.Else{\r\n        Div(Class: md-12 alert alert-danger text-center){\r\n            Span(Body: LangRes(attention))\r\n        }\r\n    }\r\n\r\n}"
        },
        {
            "Name": "notifications_roles",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "membership_menu",
            "Value": "Div(Class: content-wrapper){\r\n\r\n\tSetTitle($role_notifics$)\r\n\tDiv(breadcrumb){\r\n\t\tSpan(Class: text-muted, Body: $role_notifics$)\r\n\t}\r\n\r\n    If(GetVar(isSearch) == 1){\r\n        SetVar(Name: v_Where, Value: \"role_name='#v_Search#' and notification_type=2\")\r\n    }.Else{\r\n        SetVar(Name: v_Where, Value: \"notification_type=2\")\r\n        SetVar(Name: v_Search, Value: \"\")\r\n    }\r\n\r\n    DBFind(Name: notifications, Source: src_notifications).Custom(custom_id){\r\n        If(#closed# == 0){\r\n            Span(Body: #id#)  \r\n        }.Else{\r\n            Span(Body: #id#).Style(color:#A9A9A9;)\r\n        }\r\n    }.Custom(custom_role){\r\n        If(#closed# == 0){\r\n            Span(Body: ID: #role_id# - #role_name#)  \r\n        }.Else{\r\n            Span(Body: ID: #role_id# - #role_name#).Style(color:#A9A9A9;)\r\n        }\r\n    }.Custom(custom_icon){\r\n        If(#closed# == 0){\r\n            Em(Class: fa #icon# fa-2x text-info)\r\n        }.Else{\r\n            Em(Class: fa #icon# fa-2x text-muted)\r\n        }\r\n    }.Custom(custom_page){\r\n        If(#closed# == 0){\r\n            Button(Class: btn btn-link, Page: #page_name#, PageParams: \"notific_id=#id#,notific_type=#notification_type#,notific_header=#header_text#,notific_val_int=#page_val_int#,notific_val_str=#page_val_str#\"){\r\n                Span(Class: h5 text-bold, Body: #page_name#)\r\n            }\r\n        }.Else{\r\n            Div(){\r\n                Span(Class: h5 text-bold, Body: #page_name#)\r\n            }.Style(color:#A9A9A9; margin-left: 15px;)\r\n        }\r\n    }.Custom(custom_val_int){\r\n        If(#closed# == 0){\r\n            Span(Body: #page_val_int#)  \r\n        }.Else{\r\n            Span(Body: #page_val_int#).Style(color:#A9A9A9;)\r\n        }\r\n    }.Custom(custom_val_str){\r\n        If(#closed# == 0){\r\n            Span(Body: #page_val_str#)  \r\n        }.Else{\r\n            Span(Body: #page_val_str#).Style(color:#A9A9A9;)\r\n        }\r\n    }.Custom(custom_date_started){\r\n        If(#started_processing_id# == 0){\r\n        }.Else{\r\n            If(#closed# == 0){\r\n                P(Class: m0, Body: DateTime(DateTime: #started_processing_time#, Format: \"DD.MM.YYYY HH:MI\"))\r\n                P(Class: m0 h6, Body: Address(#started_processing_id#))\r\n            }.Else{\r\n                P(Class: m0, Body: DateTime(DateTime: #started_processing_time#, Format: \"DD.MM.YYYY HH:MI\")).Style(color:#A9A9A9;)\r\n                P(Class: m0 h6, Body: Address(#started_processing_id#)).Style(color:#A9A9A9;)\r\n            }\r\n        }\r\n    }.Custom(custom_date_finished){\r\n        If(#finished_processing_id# == 0){\r\n        }.Else{\r\n            P(Class: m0, Body: DateTime(DateTime: #finished_processing_time#, Format: \"DD.MM.YYYY HH:MI\")).Style(color:#A9A9A9;)\r\n            P(Class: m0 h6, Body: Address(#finished_processing_id#)).Style(color:#A9A9A9;)\r\n        }\r\n    }.Custom(custom_status){\r\n        If(#closed# == 0){\r\n            If(#started_processing_id# == 0){\r\n                Span(Body: LangRes(active))\r\n            }.Else{\r\n                Span(Body: LangRes(processing))\r\n            }\r\n        }.Else{\r\n            Span(Body: LangRes(active)).Style(color:#A9A9A9;)\r\n        }\r\n    }.Custom(actions){\r\n        If(#closed# == 0){\r\n            If(#started_processing_id# == 0){\r\n                Button(Body: Em(Class: fa icon-paper-clip), Class: btn btn-danger, Contract: Notifications_Roles_Processing, Params: \"notific_id=#id#\", Page: notifications_roles)\r\n            }.Else{\r\n                Button(Body: Em(Class: fa fa-trash), Class: btn btn-danger, Contract: Notifications_Roles_Finishing, Params: \"notific_id=#id#\", Page: notifications_roles)\r\n            }\r\n        }\r\n    }.Where(#v_Where#).Order(\"closed ASC, id ASC\")\r\n\r\n    Div(Class: panel panel-primary){\r\n        Form(){\r\n            Div(Class: list-group-item){\r\n                Div(Class: row df f-valign){\r\n                    Div(Class: col-md-1 mt-sm text-right){\r\n                        Label(For: Search){\r\n                            Span(Body: LangRes(role))\r\n                        }\r\n                    }\r\n                    Div(Class: col-md-11 mc-sm){\r\n                        Div(Class: input-group){\r\n                            Input(Class: form-control, Type: text, Name: Search, Value: #v_Search#)\r\n                            Div(Class: input-group-btn){\r\n                                Button(Body: Em(Class: fa fa-search), Class: btn btn-default, Page: notifications_roles, PageParams: \"isSearch=1,v_Search=Val(Search)\")\r\n                            }\r\n                        }\r\n                    }\r\n                }  \r\n            }\r\n\r\n            Div(Class: list-group-item){ \r\n                Table(Source: src_notifications, Columns: \"$id$=custom_id,$role$=custom_role,$icon$=custom_icon,$page_name$=custom_page,$value_number$=custom_val_int,$value_string$=custom_val_str,$started$=custom_date_started,$сlosed$=custom_date_finished,$status$=custom_status,$actions$=actions\")\r\n                If(GetVar(isSearch) == 1){\r\n                    Div(Class: text-center){  \r\n                        Button(Body: $view_all$, Class: btn btn-primary, Page: notifications_roles, PageParams: \"isSearch=0\")\r\n                    }\r\n                }\r\n            }\r\n\r\n            Div(Class: panel-footer clearfix){\r\n                Div(Class: pull-right){\r\n                    Button(Body: LangRes(send), Class: btn btn-primary, Page: notifications_roles_send)\r\n                }\r\n            }\r\n            \r\n        }           \r\n    }\r\n\r\n}"
        },
        {
            "Name": "notifications_roles_send",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "membership_menu",
            "Value": "Div(Class: content-wrapper){\r\n    Div(Class: content-heading, Body: LangRes(role_notifics))\r\n    Div(Class: row df f-valign){\r\n        Div(Class: col-md-3)\r\n        Div(Class: col-md-6){\r\n\r\n            Div(Class: panel panel-primary){\r\n                Div(Class: panel-heading, Body: LangRes(role_notifics))\r\n                Form(){\r\n\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                            Div(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: role_id){\r\n                                    Span(Body: LangRes(role))\r\n                                }\r\n                            }\r\n                            Div(Class: col-md-9 mb-sm text-left){\r\n                                DBFind(Name: roles_list, Source: source_roles).Columns(role_name, id).Where(\"delete=0\")\r\n                                Select(Name: role_id, Source: source_roles, NameColumn: role_name, ValueColumn: id)\r\n                            } \r\n                        }\r\n                        Div(Class: row df f-valign){\r\n                            Div(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: closure_type){\r\n                                    Span(Body: LangRes(closure_type))\r\n                                }\r\n                            }\r\n                            Div(Class: col-md-9 mc-sm text-left){\r\n                                EcosysParam(Name: notification_closure, Source: src_closure_type)\r\n                                Select(Name: closure_type, Source: src_closure_type, NameColumn: name, ValueColumn: id)\r\n                            } \r\n                        }\r\n                    }\r\n\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                            Div(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: emission_type){\r\n                                    Span(Body: LangRes(icon))\r\n                                }\r\n                            }\r\n                            Div(Class: col-md-9 mb-sm text-left){\r\n                                EcosysParam(Name: notification_icon, Source: src_icon)\r\n                                Select(Name: icon_name, Source: src_icon, NameColumn: name, ValueColumn: name)\r\n                            } \r\n                        }\r\n                        Div(Class: row df f-valign){\r\n                            Div(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: text_header){\r\n                                    Span(Body: LangRes(header))\r\n                                }\r\n                            }\r\n                            Div(Class: col-md-9 mb-sm text-left){\r\n                                Input(Class: form-control, Value: \"Header text\", Type: text, Name: text_header)\r\n                            } \r\n                        }\r\n                        Div(Class: row df f-valign){\r\n                            Div(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: text_body){\r\n                                    Span(Body: LangRes(body_text))\r\n                                }\r\n                            }\r\n                            Div(Class: col-md-9 mc-sm text-left){\r\n                                Input(Class: form-control, Value: \"Body text\", Type: text, Name: text_body)\r\n                            } \r\n                        }\r\n                    }\r\n\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                            Div(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: page_name){\r\n                                    Span(Body: LangRes(page_name))\r\n                                }\r\n                            }\r\n                            Div(Class: col-md-9 mb-sm text-left){\r\n                                Input(Class: form-control, Value: \"notifications_testpage\", Type: text, Name: page_name)\r\n                            } \r\n                        }\r\n                        Div(Class: row df f-valign){\r\n                            Div(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: val_int){\r\n                                    Span(Body: LangRes(value_number))\r\n                                }\r\n                            }\r\n                            Div(Class: col-md-9 mb-sm text-left){\r\n                                Input(Class: form-control, Value: 11, Type: Number, Name: val_int)\r\n                            } \r\n                        }\r\n                        Div(Class: row df f-valign){\r\n                            Div(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: val_str){\r\n                                    Span(Body: LangRes(value_string))\r\n                                }\r\n                            }\r\n                            Div(Class: col-md-9 mc-sm text-left){\r\n                                Input(Class: form-control, Value: \"string\", Type: text, Name: val_str)\r\n                            } \r\n                        }\r\n                    }\r\n\r\n                    Div(Class: panel-footer clearfix){\r\n                        Div(Class: pull-right){\r\n                            Button(Body: LangRes(back), Class: btn btn-default, Page: notifications_roles)\r\n                            Button(Body: LangRes(send), Class: btn btn-primary, Page: notifications_roles, Contract: Notifications_Roles_Send)\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        Div(Class: col-md-3)\r\n    }\r\n}"
        },
        {
            "Name": "notifications_testpage",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "membership_menu",
            "Value": "Div(Class: content-wrapper){\r\n\r\n\tSetTitle($test_page$)\r\n\tDiv(Class: breadcrumb){\r\n\t\tSpan(Class: text-muted, Body: LangRes(test_page))\r\n\t}\r\n\r\n    If(#notific_id# > 0){\r\n    }.Else{\r\n        Div(Class: md-12 alert alert-danger text-center){\r\n            Span(Body: LangRes(attention))\r\n        }\r\n        SetVar(Name: notific_id, Value: \"0\")\r\n        SetVar(Name: notific_type, Value: \"0\")\r\n        SetVar(Name: notific_header, Value: \"null\")\r\n        SetVar(Name: notific_val_int, Value: \"null\")\r\n        SetVar(Name: notific_val_str, Value: \"null\")\r\n    }\r\n\r\n    Div(Class: row df f-valign){\r\n        Div(Class: col-md-3)\r\n        Div(Class: col-md-6){\r\n            Div(Class: panel panel-default){\r\n                Form(){ \r\n\r\n\t\t\t\t\tDiv(Class: list-group-item text-center){\r\n\t\t\t\t\t\tSpan(Class: h3 , Body: #notific_header#)\t\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tDiv(Class: list-group-item){\r\n\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-right){\r\n\t\t\t\t\t\t\t\tSpan(Class: h4, Body: LangRes(id))\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-left){\r\n\t\t\t\t\t\t\t\tSpan(Class: h4, Body: #notific_id#)\r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-right){\r\n\t\t\t\t\t\t\t\tSpan(Class: h4, Body: LangRes(type))\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-left){\r\n                                If(#notific_type# > 0){\r\n\t\t\t\t\t\t\t\t    Span(Class: h4, Body: EcosysParam(Name: notification_type, Index: #notific_type#))\r\n                                }.Else{\r\n                                    Span(Class: h4, Body: #notific_type#)\r\n                                }\r\n                            } \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tDiv(Class: list-group-item){\r\n\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-right){\r\n\t\t\t\t\t\t\t\tSpan(Class: h4, Body: LangRes(value_number))\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-left){\r\n\t\t\t\t\t\t\t\tSpan(Class: h4, Body: #notific_val_int#)\r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tDiv(Class: row df f-valign){\r\n\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-right){\r\n\t\t\t\t\t\t\t\tSpan(Class: h4, Body: LangRes(value_string))\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(Class: col-md-6 mt-sm text-left){\r\n\t\t\t\t\t\t\t\tSpan(Class: h4, Body: #notific_val_str#)\r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\t\t\t\t\r\n\r\n\t\t\t\t\tIf(#notific_type# == 1){\r\n\t\t\t\t\t\tDiv(Class: panel-footer clearfix){\r\n\t\t\t\t\t\t\tDiv(Class: pull-right){\r\n                                Button(Body: LangRes(close), Class: btn btn-danger, Contract: Notifications_Single_Close, Params: \"notific_id=#notific_id#\", Page: notifications_single)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tIf(#notific_type# == 2){\r\n\t\t\t\t\t\tDiv(Class: panel-footer clearfix){\r\n\t\t\t\t\t\t\tDiv(Class: pull-left){\r\n                                Button(Body: LangRes(begin), Class: btn btn-danger, Contract: Notifications_Roles_Processing, Params: \"notific_id=#notific_id#\", Page: notifications_roles)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tDiv(Class: pull-right){\r\n                                Button(Body: LangRes(close), Class: btn btn-danger, Contract: Notifications_Roles_Finishing, Params: \"notific_id=#notific_id#\", Page: notifications_roles)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n                }\r\n            }\r\n        }\r\n        Div(Class: col-md-3)\r\n    }\r\n}"
        },
        {
            "Name": "notifications_single",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "membership_menu",
            "Value": "Div(Class: content-wrapper){\r\n\r\n\tSetTitle($single_notifics$)\r\n\tDiv(breadcrumb){\r\n\t\tSpan(Class: text-muted, Body: $single_notifics$)\r\n\t}\r\n\r\n    If(GetVar(isSearch) == 1){\r\n        SetVar(Name: v_Where, Value: \"recipient_name='#v_Search#' and notification_type=1\")\r\n    }.Else{\r\n        SetVar(Name: v_Where, Value: \"notification_type=1\")\r\n        SetVar(Name: v_Search, Value: \"\")\r\n    }\r\n\r\n    DBFind(Name: notifications, Source: src_notifications).Custom(custom_id){\r\n        If(#closed# == 0){\r\n            Span(Body: #id#)  \r\n        }.Else{\r\n            Span(Body: #id#).Style(color:#A9A9A9;)\r\n        }\r\n    }.Custom(custom_recipient){\r\n        If(#closed# == 0){\r\n            Button(Class: btn btn-link, Page: profile_view, PageParams: \"v_member_id=#recipient_id#\"){\r\n                Image(Src: \"#recipient_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\r\n                Span(Class: h5 text-bold, Body: #recipient_name#)\r\n            }\r\n        }.Else{\r\n            Div(){\r\n                Image(Src: \"#recipient_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\r\n                Span(Class: h5 text-bold, Body: #recipient_name#)\r\n            }.Style(color:#A9A9A9; margin-left: 15px;)\r\n        }\r\n    }.Custom(custom_icon){\r\n        If(#closed# == 0){\r\n            Em(Class: fa #icon# fa-2x text-info)\r\n        }.Else{\r\n            Em(Class: fa #icon# fa-2x text-muted)\r\n        }\r\n    }.Custom(custom_page){\r\n        If(#closed# == 0){\r\n            Button(Class: btn btn-link, Page: #page_name#, PageParams: \"notific_id=#id#,notific_type=#notification_type#,notific_header=#header_text#,notific_val_int=#page_val_int#,notific_val_str=#page_val_str#\"){\r\n                Span(Class: h5 text-bold, Body: #page_name#)\r\n            }\r\n        }.Else{\r\n            Div(){\r\n                Span(Class: h5 text-bold, Body: #page_name#)\r\n            }.Style(color:#A9A9A9; margin-left: 15px;)\r\n        }\r\n    }.Custom(custom_val_int){\r\n        If(#closed# == 0){\r\n            Span(Body: #page_val_int#)  \r\n        }.Else{\r\n            Span(Body: #page_val_int#).Style(color:#A9A9A9;)\r\n        }\r\n    }.Custom(custom_val_str){\r\n        If(#closed# == 0){\r\n            Span(Body: #page_val_str#)  \r\n        }.Else{\r\n            Span(Body: #page_val_str#).Style(color:#A9A9A9;)\r\n        }\r\n    }.Custom(custom_date){\r\n        If(#closed# == 0){\r\n        }.Else{\r\n            P(Class: m0, Body: DateTime(DateTime: #finished_processing_time#, Format: \"DD.MM.YYYY HH:MI\")).Style(color:#A9A9A9;)\r\n            P(Class: m0 h6, Body: Address(#finished_processing_id#)).Style(color:#A9A9A9;)\r\n        }\r\n    }.Custom(custom_status){\r\n        If(#closed# == 0){\r\n            Span(Body: LangRes(active))\r\n        }.Else{\r\n            Span(Body: LangRes(active)).Style(color:#A9A9A9;)\r\n        }\r\n    }.Custom(actions){\r\n        If(#closed# == 0){\r\n            Button(Body: Em(Class: fa fa-trash), Class: btn btn-danger, Contract: Notifications_Single_Close, Params: \"notific_id=#id#\", Page: notifications_single)\r\n        }\r\n    }.Where(#v_Where#).Order(\"closed ASC, id ASC\")\r\n\r\n    Div(Class: panel panel-primary){\r\n        Form(){\r\n            Div(Class: list-group-item){\r\n                Div(Class: row df f-valign){\r\n                    Div(Class: col-md-1 mt-sm text-right){\r\n                        Label(For: Search){\r\n                            Span(Body: LangRes(recipient))\r\n                        }\r\n                    }\r\n                    Div(Class: col-md-11 mc-sm){\r\n                        Div(Class: input-group){\r\n                            Input(Class: form-control, Type: text, Name: Search, Value: #v_Search#)\r\n                            Div(Class: input-group-btn){\r\n                                Button(Body: Em(Class: fa fa-search), Class: btn btn-default, Page: notifications_single, PageParams: \"isSearch=1,v_Search=Val(Search)\")\r\n                            }\r\n                        }\r\n                    }\r\n                }  \r\n            }\r\n\r\n            Div(Class: list-group-item){ \r\n                Table(Source: src_notifications, Columns: \"$id$=custom_id,$recipient$=custom_recipient,$icon$=custom_icon,$page_name$=custom_page,$value_number$=custom_val_int,$value_string$=custom_val_str,$сlosed$=custom_date,$status$=custom_status,$actions$=actions\")\r\n                If(GetVar(isSearch) == 1){\r\n                    Div(Class: text-center){  \r\n                        Button(Body: $view_all$, Class: btn btn-primary, Page: notifications_single, PageParams: \"isSearch=0\")\r\n                    }\r\n                }\r\n            }\r\n\r\n            Div(Class: panel-footer clearfix){\r\n                Div(Class: pull-right){\r\n                    Button(Body: LangRes(send), Class: btn btn-primary, Page: notifications_single_send)\r\n                }\r\n            }\r\n            \r\n        }           \r\n    }\r\n\r\n}"
        },
        {
            "Name": "notifications",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "membership_menu",
            "Value": "Div(Class: content-wrapper){\r\n\r\n\tSetTitle($notifics$)\r\n\tDiv(breadcrumb){\r\n\t\tSpan(Class: text-muted, Body: $notifics$)\r\n\t}\r\n\t\r\n    SetVar(Name: v_Where, Value: \"recipient_id=#key_id#\")\r\n\r\n    DBFind(roles_assign, src_roles).Where(\"member_id=#key_id#\")\r\n    ForList(src_roles){\r\n        SetVar(Name: v_Where, Value: \"#v_Where# or role_id=#role_id#\" )\r\n    }\r\n\r\n    SetVar(Name: v_Where, Value: \"recipient_id=#key_id#\")\r\n\t\r\n    DBFind(Name: notifications, Source: src_notifications).Custom(custom_id){\r\n        If(#closed# == 0){\r\n            Span(Body: #id#)  \r\n        }.Else{\r\n            Span(Body: #id#).Style(color:#A9A9A9;)\r\n        }\r\n    }.Custom(custom_icon){\r\n        If(#closed# == 0){\r\n            Em(Class: fa #icon# fa-2x text-info)\r\n        }.Else{\r\n            Em(Class: fa #icon# fa-2x text-muted)\r\n        }\r\n    }.Custom(custom_page){\r\n        If(#closed# == 0){\r\n            Button(Class: btn btn-link, Page: #page_name#, PageParams: \"notific_id=#id#,notific_type=#notification_type#,notific_header=#header_text#,notific_val_int=#page_val_int#,notific_val_str=#page_val_str#\"){\r\n                Span(Class: h5 text-bold, Body: #page_name#)\r\n            }\r\n        }.Else{\r\n            Div(){\r\n                Span(Class: h5 text-bold, Body: #page_name#)\r\n            }.Style(color:#A9A9A9; margin-left: 15px;)\r\n        }\r\n    }.Custom(custom_val_int){\r\n        If(#closed# == 0){\r\n            Span(Body: #page_val_int#)  \r\n        }.Else{\r\n            Span(Body: #page_val_int#).Style(color:#A9A9A9;)\r\n        }\r\n    }.Custom(custom_val_str){\r\n        If(#closed# == 0){\r\n            Span(Body: #page_val_str#)  \r\n        }.Else{\r\n            Span(Body: #page_val_str#).Style(color:#A9A9A9;)\r\n        }\r\n    }.Custom(custom_date){\r\n        If(#closed# == 0){\r\n        }.Else{\r\n            P(Class: m0, Body: DateTime(DateTime: #finished_processing_time#, Format: \"DD.MM.YYYY HH:MI\")).Style(color:#A9A9A9;)\r\n            P(Class: m0 h6, Body: Address(#finished_processing_id#)).Style(color:#A9A9A9;)\r\n        }\r\n    }.Custom(custom_status){\r\n        If(#closed# == 0){\r\n            Span(Body: LangRes(active))\r\n        }.Else{\r\n            Span(Body: LangRes(active)).Style(color:#A9A9A9;)\r\n        }\r\n    }.Custom(actions){\r\n        If(#closed# == 0){\r\n            Button(Body: Em(Class: fa fa-trash), Class: btn btn-danger, Contract: Notifications_Single_Close, Params: \"notific_id=#id#\", Page: notifications_single)\r\n        }\r\n    }.Where(#v_Where#).Order(\"closed ASC, id ASC\")\r\n}\r\n\t\t\r\nDiv(md-12 panel panel-primary data-sweet-alert){\r\n\tDiv(list-group-item){\r\n\t\tDiv(table-responsive){\r\n\t\t\tTable(Source: src_notifications, Columns: \"$id$=custom_id,$recipient$=custom_recipient,$icon$=custom_icon,$page_name$=custom_page,$value_number$=custom_val_int,$value_string$=custom_val_str,$сlosed$=custom_date,$status$=custom_status,$actions$=actions\")\r\n\t\t}\r\n\t}    \r\n}"
        },
        {
            "Name": "notifications_single_send",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "membership_menu",
            "Value": "Div(Class: content-wrapper){\r\n    Div(Class: content-heading, Body: LangRes(single_notifics))\r\n    Div(Class: row df f-valign){\r\n        Div(Class: col-md-3)\r\n        Div(Class: col-md-6){\r\n\r\n            Div(Class: panel panel-primary){\r\n                Div(Class: panel-heading, Body: LangRes(single_notifics))\r\n                Form(){\r\n\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                            Div(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: role_name){\r\n                                    Span(Body: LangRes(member))\r\n                                }\r\n                            }\r\n                            Div(Class: col-md-9 mc-sm text-left){\r\n                                DBFind(Name: member, Source: source_members).Columns(member_name, member_id)\r\n                                Select(Name: member_id, Source: source_members, NameColumn: member_name, ValueColumn: member_id)\r\n                            } \r\n                        }\r\n                    }\r\n\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                            Div(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: emission_type){\r\n                                    Span(Body: LangRes(icon))\r\n                                }\r\n                            }\r\n                            Div(Class: col-md-9 mb-sm text-left){\r\n                                EcosysParam(Name: notification_icon, Source: src_icon)\r\n                                Select(Name: icon_name, Source: src_icon, NameColumn: name, ValueColumn: name)\r\n                            } \r\n                        }\r\n                        Div(Class: row df f-valign){\r\n                            Div(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: text_header){\r\n                                    Span(Body: LangRes(header))\r\n                                }\r\n                            }\r\n                            Div(Class: col-md-9 mb-sm text-left){\r\n                                Input(Class: form-control, Value: \"Header text\", Type: text, Name: text_header)\r\n                            } \r\n                        }\r\n                        Div(Class: row df f-valign){\r\n                            Div(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: text_body){\r\n                                    Span(Body: LangRes(body_text))\r\n                                }\r\n                            }\r\n                            Div(Class: col-md-9 mc-sm text-left){\r\n                                Input(Class: form-control, Value: \"Body text\", Type: text, Name: text_body)\r\n                            } \r\n                        }\r\n                    }\r\n\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                            Div(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: page_name){\r\n                                    Span(Body: LangRes(page_name))\r\n                                }\r\n                            }\r\n                            Div(Class: col-md-9 mb-sm text-left){\r\n                                Input(Class: form-control, Value: \"notifications_testpage\", Type: text, Name: page_name)\r\n                            } \r\n                        }\r\n                        Div(Class: row df f-valign){\r\n                            Div(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: val_int){\r\n                                    Span(Body: LangRes(value_number))\r\n                                }\r\n                            }\r\n                            Div(Class: col-md-9 mb-sm text-left){\r\n                                Input(Class: form-control, Value: 11, Type: Number, Name: val_int)\r\n                            } \r\n                        }\r\n                        Div(Class: row df f-valign){\r\n                            Div(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: val_str){\r\n                                    Span(Body: LangRes(value_string))\r\n                                }\r\n                            }\r\n                            Div(Class: col-md-9 mc-sm text-left){\r\n                                Input(Class: form-control, Value: \"string\", Type: text, Name: val_str)\r\n                            } \r\n                        }\r\n                    }\r\n\r\n                    Div(Class: panel-footer clearfix){\r\n                        Div(Class: pull-right){\r\n                            Button(Body: LangRes(back), Class: btn btn-default, Page: notifications_single)\r\n                            Button(Body: LangRes(send), Class: btn btn-primary, Page: notifications_single, Contract: Notifications_Single_Send)\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        Div(Class: col-md-3)\r\n    }\r\n}"
        }
    ],
    "blocks": [],
    "menus": [
        {
            "Name": "default_menu",
            "Conditions": "ContractAccess(\"@1EditMenu\")",
            "Value": "MenuItem(Title:$profile$, Page:profile_view, Icon:\"fa icon-user\")\r\nMenuGroup(Title:Administrator,Icon:\"fa icon-settings\"){\r\n    MenuItem(Title:Money transfer, Page:money_transfer, Icon:\"icon-energy\")\r\n    MenuItem(Title:New ecosystem, Page:ecosystem_new, Icon:\"icon-globe\"a)\r\n}\r\nMenuGroup(Title:$membership_roles_notifications$,Icon:\"fa icon-people\"){\r\n    MenuItem(Title:$membership$, Page:members_list, Icon:\"fa icon-people\")\r\n    MenuItem(Title:$roles$, Page:roles_list, Icon:\"fa icon-list\")\r\n    MenuItem(Title:$single_notifics$, Page:notifications_single, Icon:\"fa icon-bell\")\r\n    MenuItem(Title:$role_notifics$, Page:notifications_roles, Icon:\"fa icon-bell\")\r\n    MenuItem(Title:$test_page$, Page:notifications_testpage, Icon:\"icon-settings\")\r\n}\r\nMenuGroup(Title:$system_tokens$,Icon:\"icon-energy\"){\r\n    MenuItem(Title:$accounts$, Page:tokens_accounts_list, Icon:\"fa icon-wallet\")\r\n    MenuItem(Title:$tokens$, Page:tokens_list, Icon:\"fa icon-energy\")\r\n    MenuItem(Title:$tranche$, Page:tokens_tranche, Icon:\"fa fa-mail-forward\")\r\n    MenuItem(Title:$tokens_transfer$, Page:tokens_transfer, Icon:\"fa fa-exchange\")  \r\n    MenuItem(Title:$tokens_rollback$, Page:tokens_rollback, Icon:\"fa icon-trash\")  \r\n}"
        },
        {
            "Name": "membership_menu",
            "Conditions": "ContractAccess(\"@1EditMenu\")",
            "Value": "MenuItem(Title:$membership$, Page:members_list, Icon:\"fa icon-people\")\r\nMenuItem(Title:$roles$, Page:roles_list, Icon:\"fa icon-list\")\r\nMenuItem(Title:$single_notifics$, Page:notifications_single, Icon:\"fa icon-bell\")\r\nMenuItem(Title:$role_notifics$, Page:notifications_roles, Icon:\"fa icon-bell\")\r\nMenuItem(Title:$test_page$, Page:notifications_testpage, Icon:\"icon-settings\")"
        }
    ],
    "parameters": [
        {
            "Name": "notification_icon",
            "Value": "fa-bell,fa-comment,fa-envelope,fa-bookmark,fa-check,fa-exclamation-triangle,fa-info-circle",
            "Conditions": "ContractConditions(`MainCondition`)"
        },
        {
            "Name": "gender_list",
            "Value": "male,female",
            "Conditions": "ContractConditions(`MainCondition`)"
        },
        {
            "Name": "notification_closure",
            "Value": "single,multiple",
            "Conditions": "ContractConditions(`MainCondition`)"
        },
        {
            "Name": "notification_type",
            "Value": "single,role",
            "Conditions": "ContractConditions(`MainCondition`)"
        },
        {
            "Name": "roles_types",
            "Value": "assigned_role,elective_role,system_role",
            "Conditions": "ContractConditions(`MainCondition`)"
        },
        {
            "Name": "roles_types_short",
            "Value": "assigned_role,elective_role",
            "Conditions": "ContractConditions(`MainCondition`)"
        }
    ],
    "languages": [
        {
            "Name": "system_role",
            "Trans": "{\"en\":\"System\",\"ru\":\"Системная\"}",
            "Conditions": ""
        },
        {
            "Name": "type_voting_system",
            "Trans": "{\"en\":\"System\",\"ru\":\"Системное\"}",
            "Conditions": ""
        },
        {
            "Name": "type_voting_custom",
            "Trans": "{\"en\":\"Custom\",\"ru\":\"Пользовательское\"}",
            "Conditions": ""
        },
        {
            "Name": "want_make_emission",
            "Trans": "{\"en\":\"Do you want to make an emission?\",\"ru\":\"Вы хотите выполнить эмиссию?\"}",
            "Conditions": ""
        },
        {
            "Name": "trash_account_not_found",
            "Trans": "{\"en\":\"System trash account is not found\",\"ru\":\"Системный счет корзины не найден\"}",
            "Conditions": ""
        },
        {
            "Name": "emission_account_not_found",
            "Trans": "{\"en\":\"System emission account is not found\",\"ru\":\"Системный эмиссионный счет не найден\"}",
            "Conditions": ""
        },
        {
            "Name": "appointment_impossible",
            "Trans": "{\"ru\":\"*Эта роль не является назначаемой. Назначение членов невозможно\",\"en\":\"*This role is not assignable. The appointment of members is impossible\"}",
            "Conditions": ""
        },
        {
            "Name": "gender",
            "Trans": "{\"en\": \"Gender\", \"ru\": \"Пол\"}",
            "Conditions": ""
        },
        {
            "Name": "male",
            "Trans": "{\"en\": \"Male\", \"ru\": \"Мужской\"}",
            "Conditions": ""
        },
        {
            "Name": "female",
            "Trans": "{\"en\": \"Female\", \"ru\": \"Женский\"}",
            "Conditions": ""
        },
        {
            "Name": "assigned_role",
            "Trans": "{\"en\": \"Assigned\", \"ru\": \"Назначаемая\"}",
            "Conditions": ""
        },
        {
            "Name": "begin",
            "Trans": "{\"en\": \"Begin\", \"ru\": \"Начать\"}",
            "Conditions": ""
        },
        {
            "Name": "membership_requests",
            "Trans": "{\"en\": \"Membership requests\", \"ru\": \"Запросы на членство\"}",
            "Conditions": ""
        },
        {
            "Name": "name_last",
            "Trans": "{\"en\": \"Last name\", \"ru\": \"Фамилия\"}",
            "Conditions": ""
        },
        {
            "Name": "processing",
            "Trans": "{\"en\": \"Processing\", \"ru\": \"Обработка\"}",
            "Conditions": ""
        },
        {
            "Name": "role_notifics",
            "Trans": "{\"en\": \"Role notifications\", \"ru\": \"Ролевые уведомления\"}",
            "Conditions": ""
        },
        {
            "Name": "want_finish_processing",
            "Trans": "{\"en\": \"Do you want to finish processing this notification?\", \"ru\": \"Вы хотите завершить обработку этого уведомления?\"}",
            "Conditions": ""
        },
        {
            "Name": "multiple",
            "Trans": "{\"en\": \"Multiple\", \"ru\": \"Множественные\"}",
            "Conditions": ""
        },
        {
            "Name": "recipient",
            "Trans": "{\"en\": \"Recipient\", \"ru\": \"Получатель\"}",
            "Conditions": ""
        },
        {
            "Name": "want_delete_member",
            "Trans": "{\"en\": \"Do you want to delete this member?\", \"ru\": \"Вы хотите удалить этого члена?\"}",
            "Conditions": ""
        },
        {
            "Name": "username",
            "Trans": "{\"en\": \"Username\", \"ru\": \"Никнейм\"}",
            "Conditions": ""
        },
        {
            "Name": "no_expiration",
            "Trans": "{\"en\": \"No expiration\", \"ru\": \"Без окончания\"}",
            "Conditions": ""
        },
        {
            "Name": "test_page",
            "Trans": "{\"en\": \"Test page\", \"ru\": \"Тестовая страница\"}",
            "Conditions": ""
        },
        {
            "Name": "attention",
            "Trans": "{\"en\": \"ATTENTION! The page has not received parameters and is unavailable for viewing.\", \"ru\": \"ВНИМАНИЕ! Страница не получила параметров и не доступна для просмотра.\"}",
            "Conditions": ""
        },
        {
            "Name": "created",
            "Trans": "{\"en\": \"Created\", \"ru\": \"Создан\"}",
            "Conditions": ""
        },
        {
            "Name": "new_role",
            "Trans": "{\"en\": \"New role\", \"ru\": \"Новая роль\"}",
            "Conditions": ""
        },
        {
            "Name": "started",
            "Trans": "{\"en\": \"Started\", \"ru\": \"Начато\"}",
            "Conditions": ""
        },
        {
            "Name": "accepted",
            "Trans": "{\"en\": \"Accepted\", \"ru\": \"Принят\"}",
            "Conditions": ""
        },
        {
            "Name": "editing_profile",
            "Trans": "{\"en\": \"Editing profile\", \"ru\": \"Редактирование профиля\"}",
            "Conditions": ""
        },
        {
            "Name": "members",
            "Trans": "{\"en\": \"Members\", \"ru\": \"Члены\"}",
            "Conditions": ""
        },
        {
            "Name": "membership",
            "Trans": "{\"en\": \"Membership\", \"ru\": \"Членство\"}",
            "Conditions": ""
        },
        {
            "Name": "name_middle",
            "Trans": "{\"en\": \"Middle name\", \"ru\": \"Отчество\"}",
            "Conditions": ""
        },
        {
            "Name": "type",
            "Trans": "{\"en\": \"Type\", \"ru\": \"Тип\"}",
            "Conditions": ""
        },
        {
            "Name": "waiting",
            "Trans": "{\"en\": \"Waiting\", \"ru\": \"Ожидание\"}",
            "Conditions": ""
        },
        {
            "Name": "assigned",
            "Trans": "{\"en\": \"Assigned\", \"ru\": \"Назначен\"}",
            "Conditions": ""
        },
        {
            "Name": "expiration_only_visitor",
            "Trans": "{\"en\": \"Expiration only for visitor\", \"ru\": \"Окончание только для посетителя\"}",
            "Conditions": ""
        },
        {
            "Name": "single",
            "Trans": "{\"en\": \"Single\", \"ru\": \"Одиночные\"}",
            "Conditions": ""
        },
        {
            "Name": "visitor",
            "Trans": "{\"en\": \"Visitor\", \"ru\": \"Посетитель\"}",
            "Conditions": ""
        },
        {
            "Name": "want_delete_role",
            "Trans": "{\"en\": \"Do you want to delete this role?\", \"ru\": \"Вы хотите удалить эту роль?\"}",
            "Conditions": ""
        },
        {
            "Name": "empty",
            "Trans": "{\"en\": \"[no]\", \"ru\": \"[нет]\"}",
            "Conditions": ""
        },
        {
            "Name": "header",
            "Trans": "{\"en\": \"Header\", \"ru\": \"Заголовок\"}",
            "Conditions": ""
        },
        {
            "Name": "name",
            "Trans": "{\"en\": \"Name\", \"ru\": \"Название\"}",
            "Conditions": ""
        },
        {
            "Name": "role",
            "Trans": "{\"en\": \"Role\", \"ru\": \"Роль\"}",
            "Conditions": ""
        },
        {
            "Name": "change",
            "Trans": "{\"en\": \"Change\", \"ru\": \"Изменить\"}",
            "Conditions": ""
        },
        {
            "Name": "deleted",
            "Trans": "{\"en\": \"Deleted\", \"ru\": \"Удалено\"}",
            "Conditions": ""
        },
        {
            "Name": "roles",
            "Trans": "{\"en\": \"Roles\", \"ru\": \"Роли\"}",
            "Conditions": ""
        },
        {
            "Name": "assign",
            "Trans": "{\"en\": \"Assign\", \"ru\": \"Назначить\"}",
            "Conditions": ""
        },
        {
            "Name": "close",
            "Trans": "{\"en\": \"Close\", \"ru\": \"Закрыть\"}",
            "Conditions": ""
        },
        {
            "Name": "creator",
            "Trans": "{\"en\": \"Creator\", \"ru\": \"Кто создал\"}",
            "Conditions": ""
        },
        {
            "Name": "id",
            "Trans": "{\"en\": \"ID\", \"ru\": \"ID\"}",
            "Conditions": ""
        },
        {
            "Name": "сlosed",
            "Trans": "{\"en\": \"Closed\", \"ru\": \"Закрыто\"}",
            "Conditions": ""
        },
        {
            "Name": "accept",
            "Trans": "{\"en\": \"Accept\", \"ru\": \"Принять\"}",
            "Conditions": ""
        },
        {
            "Name": "elective_role",
            "Trans": "{\"en\": \"Elective\", \"ru\": \"Выборная\"}",
            "Conditions": ""
        },
        {
            "Name": "membership_roles_notifications",
            "Trans": "{\"en\": \"Membership, roles, notifications\", \"ru\": \"Членство, роли, уведомления\"}",
            "Conditions": ""
        },
        {
            "Name": "save",
            "Trans": "{\"en\": \"Save\", \"ru\": \"Сохранить\"}",
            "Conditions": ""
        },
        {
            "Name": "status",
            "Trans": "{\"en\": \"Status\", \"ru\": \"Статус\"}",
            "Conditions": ""
        },
        {
            "Name": "value_string",
            "Trans": "{\"en\": \"Value string\", \"ru\": \"Значение (строка)\"}",
            "Conditions": ""
        },
        {
            "Name": "accept_request_member",
            "Trans": "{\"en\": \"Accept the request of this member?\", \"ru\": \"Принять запрос этого члена?\"}",
            "Conditions": ""
        },
        {
            "Name": "all",
            "Trans": "{\"en\": \"All\", \"ru\": \"Все\"}",
            "Conditions": ""
        },
        {
            "Name": "avatar",
            "Trans": "{\"en\": \"Avatar\", \"ru\": \"Фото\"}",
            "Conditions": ""
        },
        {
            "Name": "back",
            "Trans": "{\"en\": \"Back\", \"ru\": \"Назад\"}",
            "Conditions": ""
        },
        {
            "Name": "date_end",
            "Trans": "{\"en\": \"Date end\", \"ru\": \"Дата окончания\"}",
            "Conditions": ""
        },
        {
            "Name": "actions",
            "Trans": "{\"en\": \"Actions\", \"ru\": \"Действия\"}",
            "Conditions": ""
        },
        {
            "Name": "visitor_rights",
            "Trans": "{\"en\": \"Visitor (with SR)\", \"ru\": \"Посетитель (с правами)\"}",
            "Conditions": ""
        },
        {
            "Name": "want_delete_from_role",
            "Trans": "{\"en\": \"Are you sure you want to delete this member from the role?\", \"ru\": \"Вы уверены, что хотите удалить этого члена из роли?\"}",
            "Conditions": ""
        },
        {
            "Name": "want_return_member",
            "Trans": "{\"en\": \"Do you want to return this member?\", \"ru\": \"Вы хотите восстановить этого члена?\"}",
            "Conditions": ""
        },
        {
            "Name": "elective",
            "Trans": "{\"en\": \"Elective\", \"ru\": \"Выбран\"}",
            "Conditions": ""
        },
        {
            "Name": "icon",
            "Trans": "{\"en\": \"Icon\", \"ru\": \"Иконка\"}",
            "Conditions": ""
        },
        {
            "Name": "add",
            "Trans": "{\"en\": \"Add\", \"ru\": \"Добавить\"}",
            "Conditions": ""
        },
        {
            "Name": "appointed",
            "Trans": "{\"en\": \"Appointed\", \"ru\": \"Назначен\"}",
            "Conditions": ""
        },
        {
            "Name": "expiration",
            "Trans": "{\"en\": \"Expiration\", \"ru\": \"Окончание\"}",
            "Conditions": ""
        },
        {
            "Name": "member",
            "Trans": "{\"en\": \"Member\", \"ru\": \"Член\"}",
            "Conditions": ""
        },
        {
            "Name": "page_name",
            "Trans": "{\"en\": \"Page name\", \"ru\": \"Название страницы\"}",
            "Conditions": ""
        },
        {
            "Name": "request",
            "Trans": "{\"en\": \"Request\", \"ru\": \"Запрос\"}",
            "Conditions": ""
        },
        {
            "Name": "value_number",
            "Trans": "{\"en\": \"Value number\", \"ru\": \"Значение (число)\"}",
            "Conditions": ""
        },
        {
            "Name": "birthdate",
            "Trans": "{\"en\": \"Birthdate\", \"ru\": \"Дата рождения\"}",
            "Conditions": ""
        },
        {
            "Name": "date_start",
            "Trans": "{\"en\": \"Date start\", \"ru\": \"Дата начала\"}",
            "Conditions": ""
        },
        {
            "Name": "view_all",
            "Trans": "{\"en\": \"View all\", \"ru\": \"Посмотреть все\"}",
            "Conditions": ""
        },
        {
            "Name": "want_close_notification",
            "Trans": "{\"en\": \"Do you want to close this notification?\", \"ru\": \"Вы хотите закрыть это уведомление?\"}",
            "Conditions": ""
        },
        {
            "Name": "want_reject_request",
            "Trans": "{\"en\": \"Do you want to reject the request?\", \"ru\": \"Вы хотите отклонить запрос?\"}",
            "Conditions": ""
        },
        {
            "Name": "body_text",
            "Trans": "{\"en\": \"Body text\", \"ru\": \"Основной текст\"}",
            "Conditions": ""
        },
        {
            "Name": "member_id",
            "Trans": "{\"en\": \"Member ID\", \"ru\": \"ID члена\"}",
            "Conditions": ""
        },
        {
            "Name": "single_notifics",
            "Trans": "{\"en\": \"Single notifications\", \"ru\": \"Одиночные уведомления\"}",
            "Conditions": ""
        },
        {
            "Name": "send",
            "Trans": "{\"en\": \"Send\", \"ru\": \"Отправить\"}",
            "Conditions": ""
        },
        {
            "Name": "want_change_status",
            "Trans": "{\"en\": \"Do you want to change the status of this member?\", \"ru\": \"Вы хотите изменить статус этого члена?\"}",
            "Conditions": ""
        },
        {
            "Name": "want_start_processing",
            "Trans": "{\"en\": \"Do you want to start processing this notification?\", \"ru\": \"Вы хотите начать обработку этого уведомления?\"}",
            "Conditions": ""
        },
        {
            "Name": "active",
            "Trans": "{\"en\": \"Active\", \"ru\": \"Активно\"}",
            "Conditions": ""
        },
        {
            "Name": "closure_type",
            "Trans": "{\"en\": \"Closure type\", \"ru\": \"Тип закрытия\"}",
            "Conditions": ""
        },
        {
            "Name": "name_first",
            "Trans": "{\"en\": \"First name\", \"ru\": \"Имя\"}",
            "Conditions": ""
        },
        {
            "Name": "expired",
            "Trans": "{\"en\": \"Expired\", \"ru\": \"Истекло\"}",
            "Conditions": ""
        },
        {
            "Name": "view",
            "Trans": "{\"en\": \"View\", \"ru\": \"Просмотр\"}",
            "Conditions": ""
        },
        {
            "Name": "user_info",
            "Trans": "{\"en\": \"User information\", \"ru\": \"Информация о пользователе\"}",
            "Conditions": ""
        },
        {
            "Name": "pending_notifics",
            "Trans": "{\"en\": \"Pending notifications\", \"ru\": \"Ожидающие уведомления\"}",
            "Conditions": ""
        },
        {
            "Name": "profile",
            "Trans": "{\"en\": \"Profile\", \"ru\": \"Профиль\"}",
            "Conditions": ""
        },
        {
            "Name": "admin_tools",
            "Trans": "{\"en\": \"Admin tools\", \"ru\": \"Инструменты администратора\"}",
            "Conditions": ""
        },
        {
            "Name": "notifics",
            "Trans": "{\"en\": \"Notifications\", \"ru\": \"Уведомления\"}",
            "Conditions": ""
        },
        {
            "Name": "membership_management",
            "Trans": "{\"en\": \"Membership management and\", \"ru\": \"Управление членами и\"}",
            "Conditions": ""
        },
        {
            "Name": "lists_of_roles",
            "Trans": "{\"en\": \"Lists of roles and\", \"ru\": \"Список ролей и\"}",
            "Conditions": ""
        },
        {
            "Name": "their_members",
            "Trans": "{\"en\": \"their members\", \"ru\": \"их члены\"}",
            "Conditions": ""
        },
        {
            "Name": "single_and_role",
            "Trans": "{\"en\": \"Single and Role\", \"ru\": \"Одиночные и ролевые\"}",
            "Conditions": ""
        },
        {
            "Name": "num_members",
            "Trans": "{\"en\": \"Number of members\", \"ru\": \"Количество членов\"}",
            "Conditions": ""
        },
        {
            "Name": "dashboard",
            "Trans": "{\"en\": \"Dashboard\", \"ru\": \"Приборная панель\"}",
            "Conditions": ""
        },
        {
            "Name": "accounts",
            "Trans": "{\"en\": \"Accounts\", \"ru\": \"Счета\"}",
            "Conditions": ""
        },
        {
            "Name": "onhold",
            "Trans": "{\"en\": \"onHold\", \"ru\": \"Закрыт\"}",
            "Conditions": ""
        },
        {
            "Name": "want_close_account",
            "Trans": "{\"en\": \"Do you want to close this account?\", \"ru\": \"Вы хотите закрыть этот счет?\"}",
            "Conditions": ""
        },
        {
            "Name": "sys_trash",
            "Trans": "{\"en\":\"sys-trash\",\"ru\":\"Корзина (системный)\"}",
            "Conditions": ""
        },
        {
            "Name": "sys_emission",
            "Trans": "{\"en\":\"sys-emission\",\"ru\":\"Эмиссия (системный)\"}",
            "Conditions": ""
        },
        {
            "Name": "person",
            "Trans": "{\"en\": \"Person\", \"ru\": \"Персональный\"}",
            "Conditions": ""
        },
        {
            "Name": "agency",
            "Trans": "{\"en\": \"Agency\", \"ru\": \"Агенский\"}",
            "Conditions": ""
        },
        {
            "Name": "company",
            "Trans": "{\"en\": \"Company\", \"ru\": \"Компания\"}",
            "Conditions": ""
        },
        {
            "Name": "create_account",
            "Trans": "{\"en\": \"Create account\", \"ru\": \"Создать счет\"}",
            "Conditions": ""
        },
        {
            "Name": "create",
            "Trans": "{\"en\": \"Create\", \"ru\": \"Создать\"}",
            "Conditions": ""
        },
        {
            "Name": "amount",
            "Trans": "{\"en\": \"Amount\", \"ru\": \"Сумма\"}",
            "Conditions": ""
        },
        {
            "Name": "tokens_transfer",
            "Trans": "{\"en\": \"Tokens transfer\", \"ru\": \"Перевод токенов\"}",
            "Conditions": ""
        },
        {
            "Name": "my_account",
            "Trans": "{\"en\": \"My account\", \"ru\": \"Мой счет\"}",
            "Conditions": ""
        },
        {
            "Name": "recipient_account",
            "Trans": "{\"en\": \"Recipient account\", \"ru\": \"Счет получателя\"}",
            "Conditions": ""
        },
        {
            "Name": "balance",
            "Trans": "{\"en\": \"Balance\", \"ru\": \"Баланс\"}",
            "Conditions": ""
        },
        {
            "Name": "tokens_rollback",
            "Trans": "{\"en\": \"Tokens rollback\", \"ru\": \"Удаление токенов\"}",
            "Conditions": ""
        },
        {
            "Name": "account",
            "Trans": "{\"en\": \"Account\", \"ru\": \"Счет\"}",
            "Conditions": ""
        },
        {
            "Name": "tokens",
            "Trans": "{\"en\": \"Tokens\", \"ru\": \"Токены\"}",
            "Conditions": ""
        },
        {
            "Name": "system_tokens",
            "Trans": "{\"en\": \"System of tokens\", \"ru\": \"Система токенов\"}",
            "Conditions": ""
        },
        {
            "Name": "impossible",
            "Trans": "{\"en\": \"Impossible\", \"ru\": \"Не возможно\"}",
            "Conditions": ""
        },
        {
            "Name": "possible",
            "Trans": "{\"en\": \"Possible\", \"ru\": \"Возможно\"}",
            "Conditions": ""
        },
        {
            "Name": "limited",
            "Trans": "{\"en\": \"Limited\", \"ru\": \"Ограничены\"}",
            "Conditions": ""
        },
        {
            "Name": "unlimited",
            "Trans": "{\"en\": \"Unlimited\", \"ru\": \"Не ограничены\"}",
            "Conditions": ""
        },
        {
            "Name": "emission",
            "Trans": "{\"en\": \"Emission\", \"ru\": \"Эмиссия\"}",
            "Conditions": ""
        },
        {
            "Name": "want_delete_tokens",
            "Trans": "{\"en\": \"Do you want to delete this tokens?\", \"ru\": \"Вы хотите удалить эти токены?\"}",
            "Conditions": ""
        },
        {
            "Name": "check_expiration",
            "Trans": "{\"en\": \"Check expiration\", \"ru\": \"Проверить истечение\"}",
            "Conditions": ""
        },
        {
            "Name": "want_check_tokens",
            "Trans": "{\"en\": \"Do you want to check the expiration of the tokens?\", \"ru\": \"Вы хотите проверить истечение токенов?\"}",
            "Conditions": ""
        },
        {
            "Name": "execute",
            "Trans": "{\"en\": \"Execute\", \"ru\": \"Выполнить\"}",
            "Conditions": ""
        },
        {
            "Name": "rollback",
            "Trans": "{\"en\": \"Rollback\", \"ru\": \"Откат\"}",
            "Conditions": ""
        },
        {
            "Name": "voting",
            "Trans": "{\"en\": \"Voting\", \"ru\": \"Голосование\"}",
            "Conditions": ""
        },
        {
            "Name": "voting_decisions_candidate_manual",
            "Trans": "{\"en\": \"Role candidates with manual registration of participants\", \"ru\": \"Ролевые кандидаты с ручной регистрацией участников\"}",
            "Conditions": ""
        },
        {
            "Name": "voting_decisions_candidate_requests",
            "Trans": "{\"en\": \"Role candidates with registration of participants by request\", \"ru\": \"Ролевые кандидаты с регистрацией участников по запросу\"}",
            "Conditions": ""
        },
        {
            "Name": "voting_decisions_db",
            "Trans": "{\"en\": \"Formal decision\", \"ru\": \"Формальное решение\"}",
            "Conditions": ""
        },
        {
            "Name": "voting_decisions_document",
            "Trans": "{\"en\": \"Document approval\", \"ru\": \"Утверждение документа\"}",
            "Conditions": ""
        },
        {
            "Name": "voting_participants_manual",
            "Trans": "{\"en\": \"Choose manually\", \"ru\": \"Ручной выбор\"}",
            "Conditions": ""
        },
        {
            "Name": "voting_participants_role",
            "Trans": "{\"en\": \"By role\", \"ru\": \"По роли\"}",
            "Conditions": ""
        },
        {
            "Name": "subject_voting",
            "Trans": "{\"en\": \"Subject of voting\", \"ru\": \"Предмет голосования\"}",
            "Conditions": ""
        },
        {
            "Name": "participants",
            "Trans": "{\"en\": \"Participants\", \"ru\": \"Участники\"}",
            "Conditions": ""
        },
        {
            "Name": "notifications",
            "Trans": "{\"en\": \"Notifications\", \"ru\": \"Уведомления\"}",
            "Conditions": ""
        },
        {
            "Name": "decision",
            "Trans": "{\"en\": \"Decision\", \"ru\": \"Решение\"}",
            "Conditions": ""
        },
        {
            "Name": "description",
            "Trans": "{\"en\": \"Description\", \"ru\": \"Описание\"}",
            "Conditions": ""
        },
        {
            "Name": "voting_participants_everybody",
            "Trans": "{\"en\": \"Anybody\", \"ru\": \"Все\"}",
            "Conditions": ""
        },
        {
            "Name": "voting_volume",
            "Trans": "{\"en\": \"Volume\", \"ru\": \"Объем\"}",
            "Conditions": ""
        },
        {
            "Name": "voting_quorum",
            "Trans": "{\"en\": \"Quorum\", \"ru\": \"Кворум\"}",
            "Conditions": ""
        },
        {
            "Name": "success",
            "Trans": "{\"en\": \"Success\", \"ru\": \"Успешно\"}",
            "Conditions": ""
        },
        {
            "Name": "voting_quorum_desc",
            "Trans": "{\"en\": \"Percentage value of votes for a decision (from 5 to 100)\", \"ru\": \"Процентная доля голосов для принятия решения (от 5 до 100)\"}",
            "Conditions": ""
        },
        {
            "Name": "voting_volume_desc",
            "Trans": "{\"en\": \"Percentage value of votes to fulfill requirements of this voting (from 50 to 100)\", \"ru\": \"Процентная доля голосов для выполнения этого голосования (от 50 до 100)\"}",
            "Conditions": ""
        },
        {
            "Name": "new_voting",
            "Trans": "{\"en\": \"New voting\", \"ru\": \"Новое голосование\"}",
            "Conditions": ""
        },
        {
            "Name": "yes",
            "Trans": "{\"en\":\"Yes\",\"ru\":\"Да\"}",
            "Conditions": ""
        },
        {
            "Name": "no",
            "Trans": "{\"en\":\"No\",\"ru\":\"Нет\"}",
            "Conditions": ""
        },
        {
            "Name": "want_send_notific_voters",
            "Trans": "{\"en\": \" Do you want to send a notification to all the voters?\", \"ru\": \"Вы хотите отправить уведомление всем участникам голосования?\"}",
            "Conditions": ""
        },
        {
            "Name": "want_check_decision",
            "Trans": "{\"en\": \"Do you want to check decision?\", \"ru\": \"Вы хотите проверить решение?\"}",
            "Conditions": ""
        },
        {
            "Name": "not_enough_votes",
            "Trans": "{\"en\": \"Not enough votes\", \"ru\": \"Недостаточно голосов\"}",
            "Conditions": ""
        },
        {
            "Name": "rejected",
            "Trans": "{\"en\": \"Rejected\", \"ru\": \"Отклонено\"}",
            "Conditions": ""
        },
        {
            "Name": "finished",
            "Trans": "{\"en\": \"Finished\", \"ru\": \"Завершено\"}",
            "Conditions": ""
        },
        {
            "Name": "want_delete_voting",
            "Trans": "{\"en\": \"Do you want to delete this voting?\", \"ru\": \"Вы хотите удалить это голосование?\"}",
            "Conditions": ""
        },
        {
            "Name": "progress",
            "Trans": "{\"en\": \"Progress\", \"ru\": \"Прогресс\"}",
            "Conditions": ""
        },
        {
            "Name": "did_not_vote",
            "Trans": "{\"en\": \"Did not vote\", \"ru\": \"Не голосовал\"}",
            "Conditions": ""
        },
        {
            "Name": "vote_for_candidate",
            "Trans": "{\"en\": \"Vote for the candidate\", \"ru\": \"Проголосовал за кандидата\"}",
            "Conditions": ""
        },
        {
            "Name": "at",
            "Trans": "{\"en\": \"at\", \"ru\": \"в\"}",
            "Conditions": ""
        },
        {
            "Name": "document_accept",
            "Trans": "{\"en\": \"Document accept\", \"ru\": \"Документ одобрен\"}",
            "Conditions": ""
        },
        {
            "Name": "document_reject",
            "Trans": "{\"en\": \"Document reject\", \"ru\": \"Документ отклонен\"}",
            "Conditions": ""
        },
        {
            "Name": "decision_accept",
            "Trans": "{\"en\": \"Decision accept\", \"ru\": \"Решение одобрено\"}",
            "Conditions": ""
        },
        {
            "Name": "decision_reject",
            "Trans": "{\"en\": \"Decision reject\", \"ru\": \"Решение отклонено\"}",
            "Conditions": ""
        },
        {
            "Name": "select_member",
            "Trans": "{\"en\": \"Select a member to add\", \"ru\": \"Укажите члена, чтобы добавить\"}",
            "Conditions": ""
        },
        {
            "Name": "select_role",
            "Trans": "{\"en\": \"Select a role to add all members of this role\", \"ru\": \"Выберите роль, чтобы добавить всех участников этой роли\"}",
            "Conditions": ""
        },
        {
            "Name": "add_member",
            "Trans": "{\"en\": \"Add member\", \"ru\": \"Добавить члена\"}",
            "Conditions": ""
        },
        {
            "Name": "add_role",
            "Trans": "{\"en\": \"Add role\", \"ru\": \"Добавить роль\"}",
            "Conditions": ""
        },
        {
            "Name": "vacancies",
            "Trans": "{\"en\": \"Vacancies\", \"ru\": \"Вакансии\"}",
            "Conditions": ""
        },
        {
            "Name": "candidates",
            "Trans": "{\"en\": \"Candidates\", \"ru\": \"Кандидаты\"}",
            "Conditions": ""
        },
        {
            "Name": "can_apply_voting",
            "Trans": "{\"en\": \"You can apply for voting\", \"ru\": \"Вы можете подать заявку на голосование\"}",
            "Conditions": ""
        },
        {
            "Name": "apply",
            "Trans": "{\"en\": \"Apply\", \"ru\": \"Подать\"}",
            "Conditions": ""
        },
        {
            "Name": "text_document",
            "Trans": "{\"en\": \"Text of the document\", \"ru\": \"Текст документа\"}",
            "Conditions": ""
        },
        {
            "Name": "row_id",
            "Trans": "{\"en\": \"Row ID\", \"ru\": \"ID строки\"}",
            "Conditions": ""
        },
        {
            "Name": "table_to_written",
            "Trans": "{\"en\": \"Table name\", \"ru\": \"Название таблицы\"}",
            "Conditions": ""
        },
        {
            "Name": "description_desc",
            "Trans": "{\"en\": \"Text description of the subject of voting\", \"ru\": \"Текстовое описание предмета голосования\"}",
            "Conditions": ""
        },
        {
            "Name": "column_name",
            "Trans": "{\"en\": \"Column name\", \"ru\": \"Название столбца\"}",
            "Conditions": ""
        },
        {
            "Name": "written_value",
            "Trans": "{\"en\": \"Written value\", \"ru\": \"Записываемое значение\"}",
            "Conditions": ""
        },
        {
            "Name": "table_to_written_desc",
            "Trans": "{\"en\": \"Table to which the value will be written (Example: accounts)\", \"ru\": \"Таблица, в которую будет записано значение (Пример: accounts)\"}",
            "Conditions": ""
        },
        {
            "Name": "row_id_desc",
            "Trans": "{\"en\": \"Row ID to which the value will be written (Example: 14)\", \"ru\": \"ID строки, в которую будет записано значение (Пример: 14)\"}",
            "Conditions": ""
        },
        {
            "Name": "column_name_desc",
            "Trans": "{\"en\": \"Column name to which the value will be written (Example: onhold)\", \"ru\": \"Название столбца, в который будет записано значение (Пример: onhold)\"}",
            "Conditions": ""
        },
        {
            "Name": "written_value_desc",
            "Trans": "{\"en\": \"Value to be written to the table (Example: 1)\", \"ru\": \"Значение, которое должно быть записано в таблицу (Пример: 1)\"}",
            "Conditions": ""
        },
        {
            "Name": "filled",
            "Trans": "{\"en\": \"Filled\", \"ru\": \"Заполнено\"}",
            "Conditions": ""
        },
        {
            "Name": "subject_voting_edit",
            "Trans": "{\"en\": \"Edit subject of voting\", \"ru\": \"Редактировать предмет голосования\"}",
            "Conditions": ""
        },
        {
            "Name": "participants_add",
            "Trans": "{\"en\": \"Add participants\", \"ru\": \"Добавить участников\"}",
            "Conditions": ""
        },
        {
            "Name": "voted",
            "Trans": "{\"en\": \"Voted\", \"ru\": \"Проголосовавшие\"}",
            "Conditions": ""
        },
        {
            "Name": "voting_graph_voted",
            "Trans": "{\"en\": \"Graph of the proportion of voters from the total number of participants\", \"ru\": \"График отношения проголосовавших от общего числа участников\"}",
            "Conditions": ""
        },
        {
            "Name": "voting_graph_progress",
            "Trans": "{\"en\": \"Graph of the percentages of votes needed to make a decision\", \"ru\": \"График процента голосов, необходимых для принятия решения\"}",
            "Conditions": ""
        },
        {
            "Name": "vote",
            "Trans": "{\"en\": \"Vote\", \"ru\": \"Голосовать\"}",
            "Conditions": ""
        },
        {
            "Name": "want_vote_for_candidate",
            "Trans": "{\"en\": \"Are you sure you want to vote for this candidate?\", \"ru\": \"Вы уверены, что хотите проголосовать за этого кандидата?\"}",
            "Conditions": ""
        },
        {
            "Name": "reject",
            "Trans": "{\"en\": \"Reject\", \"ru\": \"Отклонить\"}",
            "Conditions": ""
        },
        {
            "Name": "want_accept_document",
            "Trans": "{\"en\": \"Are you sure you want to accept document?\", \"ru\": \"Вы уверены, что хотите принять документ?\"}",
            "Conditions": ""
        },
        {
            "Name": "want_reject_decision",
            "Trans": "{\"en\": \"Are you sure you want to reject decision?\", \"ru\": \"Вы уверены, что хотите отклонить решение?\"}",
            "Conditions": ""
        },
        {
            "Name": "want_accept_decision",
            "Trans": "{\"en\": \"Are you sure you want to accept decision?\", \"ru\": \"Вы уверены, что хотите принять решение?\"}",
            "Conditions": ""
        },
        {
            "Name": "want_reject_document",
            "Trans": "{\"en\": \"Are you sure you want to reject document?\", \"ru\": \"Вы уверены, что хотите отклонить документ?\"}",
            "Conditions": ""
        },
        {
            "Name": "contract_accept",
            "Trans": "{\"en\": \"Contract of accept\", \"ru\": \"Контракт при принятии\"}",
            "Conditions": ""
        },
        {
            "Name": "contract_reject",
            "Trans": "{\"en\": \"Contract of reject\", \"ru\": \"Контракт при отклонении\"}",
            "Conditions": ""
        },
        {
            "Name": "contract_accept_des",
            "Trans": "{\"en\": \"Name of the contract, which should be started if the decision is accepted\", \"ru\": \"Название контракта, который должен быть запущен, если решение будет одобрено\"}",
            "Conditions": ""
        },
        {
            "Name": "contract_reject_des",
            "Trans": "{\"en\": \"Name of the contract, which should be started if the decision is rejected\", \"ru\": \"Название контракта, который должен быть запущен, если решение будет отклонено\"}",
            "Conditions": ""
        },
        {
            "Name": "contract_accepted",
            "Trans": "{\"en\": \"Contractaccept\", \"ru\": \"Контракт принят\"}",
            "Conditions": ""
        },
        {
            "Name": "contract_rejected",
            "Trans": "{\"en\": \"Contract reject\", \"ru\": \"Контракт отклонен\"}",
            "Conditions": ""
        },
        {
            "Name": "want_reject_contract",
            "Trans": "{\"en\": \"Do you want to reject this contract?\", \"ru\": \"Вы хотите отклонить этот контракт?\"}",
            "Conditions": ""
        },
        {
            "Name": "want_accept_contract",
            "Trans": "{\"en\": \"Do you want to accept this contract?\", \"ru\": \"Вы хотите принять этот контракт?\"}",
            "Conditions": ""
        },
        {
            "Name": "voting_decisions_contract",
            "Trans": "{\"en\": \"Performance of the contract\", \"ru\": \"Выполнение контракта\"}",
            "Conditions": ""
        },
        {
            "Name": "optional",
            "Trans": "{\"en\": \"[Optional]\", \"ru\": \"[Необязательный]\"}",
            "Conditions": ""
        },
        {
            "Name": "member_name",
            "Trans": "{\"en\":\"Full name\",\"ru\":\"Полное имя\"}",
            "Conditions": ""
        },
        {
            "Name": "confirmation",
            "Trans": "{\"en\":\"Confirmation\",\"ru\":\"Подтверждение\"}",
            "Conditions": ""
        },
        {
            "Name": "want_save_changes",
            "Trans": "{\"en\":\"Do you want to save the changes?\",\"ru\":\"Вы хотите сохранить изменения?\"}",
            "Conditions": ""
        },
        {
            "Name": "want_create_new_role",
            "Trans": "{\"en\":\"Do you want to create a new role?\",\"ru\":\"Вы хотите создать новую роль?\"}",
            "Conditions": ""
        },
        {
            "Name": "want_assign_member_to_role",
            "Trans": "{\"en\":\"Do you want to assign this member of the ecosystem to this role?\",\"ru\":\"Вы хотите назначить этого члена экосистемы на эту роль?\"}",
            "Conditions": ""
        },
        {
            "Name": "want_create_new_account",
            "Trans": "{\"en\":\"Do you want to create a new account?\",\"ru\":\"Вы хотите создать новый счет?\"}",
            "Conditions": ""
        },
        {
            "Name": "want_release_tokens",
            "Trans": "{\"en\":\"Do you want to release new tokens?\",\"ru\":\"Вы хотите выпустить новые токены?\"}",
            "Conditions": ""
        },
        {
            "Name": "tranche",
            "Trans": "{\"en\":\"Tranche\",\"ru\":\"Транш\"}",
            "Conditions": ""
        },
        {
            "Name": "sender_account",
            "Trans": "{\"en\":\"Sender account\",\"ru\":\"Счет отправителя\"}",
            "Conditions": ""
        },
        {
            "Name": "available",
            "Trans": "{\"en\":\"Available\",\"ru\":\"Доступно\"}",
            "Conditions": ""
        },
        {
            "Name": "want_send_tokens",
            "Trans": "{\"en\":\"Do you want to send tokens?\",\"ru\":\"Вы хотите отправить токены?\"}",
            "Conditions": ""
        },
        {
            "Name": "want_rollback_tokens",
            "Trans": "{\"en\":\"Do you want to rollback the tokens?\",\"ru\":\"Вы хотите откатить токены?\"}",
            "Conditions": ""
        }
    ],
    "contracts": [
        {
            "Name": "Notifications_Single_Send",
            "Value": "contract Notifications_Single_Send {\n    data {\n        member_id int\n        icon_name string\n        text_header string\n        text_body string\n        page_name string\n        val_int int\n        val_str string\n    }\n\n    conditions {\n\t\t$row_id = 0\n\n\t\t$ret_member = DBFind(\"member\").Columns(\"id,member_name,avatar\").Where(\"member_id = $\", $member_id).Order(\"id\")\n\t\tif (Len($ret_member) > 0){\n\t\t\t$vals_member = $ret_member[0]\n\n            if(Int($vals_member[\"id\"]) > 0){\n\t\t\t    $row_id = Int($vals_member[\"id\"])\n            }\n\t\t}\n    }\n\n    action {\n        if ($row_id > 0){\n            DBInsert(`notifications`, `icon,header_text,body_text,page_name,page_val_int,page_val_str,notification_type,recipient_id,recipient_name,recipient_avatar`, \n                $icon_name, $text_header, $text_body, $page_name, $val_int, $val_str, 1, $member_id, $vals_member[\"member_name\"], $vals_member[\"avatar\"])\n        }\n    }\n}",
            "Conditions": "ContractConditions(`MainCondition`)"
        },	
        {
            "Name": "Notifications_Single_Close",
            "Value": "contract Notifications_Single_Close {\n    data {\n\t    notific_id int\n    }\n\n    conditions {\n    }\n\n    action {\n        DBUpdate(`notifications`, $notific_id, `closed,timestamp finished_processing_time,finished_processing_id`, 1, $block_time, $key_id) \n    }\n}",
            "Conditions": "ContractConditions(`MainCondition`)"
        },	
        {
            "Name": "Notifications_Roles_Finishing",
            "Value": "contract Notifications_Roles_Finishing{\n    data {\n\t    notific_id int\n    }\n\n    conditions {\n\n    }\n\n    action {\n\n        DBUpdate(`notifications`, $notific_id, `timestamp finished_processing_time,finished_processing_id,closed`, $block_time, $key_id, 1) \n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },	
        {
            "Name": "Notifications_Roles_Processing",
            "Value": "contract Notifications_Roles_Processing {\n    data {\n\t    notific_id int\n    }\n\n    conditions {\n\n    }\n\n    action {\n\n        DBUpdate(`notifications`, $notific_id, `timestamp started_processing_time,started_processing_id`, $block_time, $key_id) \n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },	
        {
            "Name": "Notifications_Roles_Send",
            "Value": "contract Notifications_Roles_Send {\n    data {\n        role_id int\n        closure_type int\n\n        icon_name string\n        text_header string\n        text_body string\n        page_name string\n        val_int int\n        val_str string \n    }\n\n    conditions {\n\n    }\n\n    action {\n\n        $ret = DBFind(\"roles_list\").Columns(\"role_name\").Where(\"id = $\", $role_id).Order(\"id\")\n        var vals map\n        vals = $ret[0]\n\n        //closure_type - Single\n        if ($closure_type == 1){\n\n            DBInsert(`notifications`, `icon,header_text,body_text,page_name,page_val_int,page_val_str,notification_type,role_id,role_name`, \n                $icon_name, $text_header, $text_body, $page_name, $val_int, $val_str, 2, $role_id, vals[\"role_name\"])\n\n        //closure_type - Multiple      \n        } else {\n\n            $ret_role = DBFind(\"roles_assign\").Columns(\"member_id\").Where(\"role_id = $ and delete = $\", $role_id, 0).Order(\"id\")\n\n            $len_role = Len($ret_role)\n            $i_role = 0\n            while($i_role < $len_role){\n\n                var vals_role map\n                vals_role = $ret_role[$i_role] \n\n                Notifications_Single_Send(\"member_id,icon_name,text_header,text_body,page_name,val_int,val_str\", \n                                vals_role[\"member_id\"], $icon_name, $text_header, $text_body, $page_name, $val_int, $val_str)\n\n                $i_role = $i_role + 1\n            }\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },	
        {
            "Name": "Roles_Unassign",
            "Value": "contract Roles_Unassign {\n    data {\n\t    row_id int\n    }\n\n    conditions {\n\t\t$check_flag = 0\n\n\t\t$ret_assign = DBFind(`roles_assign`).Columns(`role_id`).Where(`id=$`, $row_id).Order(`id`).Limit(1)\n\t\tif (Len($ret_assign) > 0){\n\t\t\t$vals_assign = $ret_assign[0] \n\t\t\t$role_id = Int($vals_assign[\"role_id\"])\n\n\t\t\t$ret_role = DBFind(\"roles_list\").Columns(\"creator_id\").Where(\"id=$\", $role_id).Order(\"id\")\n\t\t\tif (Len($ret_role) > 0){\n\t\t\t\t$vals_role = $ret_role[0]\n\t\t\t\t$creator_id = Int($vals_role[\"creator_id\"])\n\n\t\t\t\tif ($creator_id == $key_id){\n\t\t\t\t\t$check_flag = 1\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\twarning \"Sorry, you are not the creator of this role\"  \n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\twarning \"Role not found in the roles registry\"  \n\t\t\t}\n\t\t} \n\t\telse {\n\t\t\t\twarning \"Role not found for the specified member\"  \n\t\t}\n    }\n\n    action {\n\t\tif ($check_flag == 1){\n\t\t\tDBUpdate(`roles_assign`, $row_id, `delete,timestamp date_end`, 1, $block_time)\n\t\t}\n    }\n}",
            "Conditions": "ContractConditions(`MainCondition`)"
        },	
        {
            "Name": "Roles_Del",
            "Value": "contract Roles_Del {\n    data {\n\t    role_id int\n    }\n\n    conditions {\n        $check_flag = 0\n\n        $ret_role = DBFind(\"roles_list\").Columns(\"creator_id,role_type\").Where(\"id=$\", $role_id).Order(\"id\")\n        if (Len($ret_role) > 0){\n            $vals_role = $ret_role[0]\n\n            $creator_id = Int($vals_role[\"creator_id\"])\n            $role_type = Int($vals_role[\"role_type\"])\n\n            if ($role_type == 3){\n                warning \"System role can not be removed\"  \n            }\n\n            if ($creator_id == $key_id){\n                $check_flag = 1\n            }\n            else{\n                warning \"Sorry, you are not the creator of this role\"  \n            }\n        }\n    }\n\n    action {\n\t\tif ($check_flag == 1){\n            $ret_assign = DBFind(\"roles_assign\").Columns(\"id\").Where(\"role_id = $ and delete = $\", $role_id, 0).Order(\"id\")\n\n            $len_assign = Len($ret_assign)\n            $i_assign = 0\n            while($i_assign < $len_assign){\n                $vals_assign = $ret_assign[$i_assign] \n                DBUpdate(`roles_assign`, Int($vals_assign[\"id\"]), `delete,timestamp date_end`, 1, $block_time)\n                $i_assign = $i_assign + 1\n            } \n\n            DBUpdate(`roles_list`, $role_id, `delete,timestamp date_delete`, 1, $block_time)\n        }\n    }\n}",
            "Conditions": "ContractConditions(`MainCondition`)"
        },	
        {
            "Name": "Roles_Assign",
            "Value": "contract Roles_Assign {\n    data {\n\t    role_id int\n\t\tmember_id int\n    }\n\n    conditions {\n        $check_flag = 0\n\n        $ret_role = DBFind(\"roles_list\").Columns(\"role_type,role_name,creator_id,delete\").Where(\"id = $\", $role_id).Order(\"id\")\n        $ret_member = DBFind(\"member\").Columns(\"member_name,avatar\").Where(\"member_id = $\", $member_id).Order(\"id\")\n        $ret_appointed = DBFind(\"member\").Columns(\"member_name\").Where(\"member_id = $\", $key_id).Order(\"id\")\n\n\t\tif (  (Len($ret_role) > 0) && (Len($ret_member) > 0) && (Len($ret_appointed) > 0)  ){\n            $vals_role = $ret_role[0]\n            $vals_member = $ret_member[0]\n            $vals_appointed = $ret_appointed[0]\n\n            if ( Int($vals_role[\"delete\"]) == 1 ){\n                warning \"This role has been deleted. The appointment of members is impossible\"\n            }\n\n            if ( Int($vals_role[\"role_type\"]) != 1 ){\n                warning \"This role is not assignable. The appointment of members is impossible\"\n            }\n\n            if ( Int($vals_role[\"creator_id\"]) != $key_id ){\n                warning \"Sorry, you are not the creator of this role. The appointment of members is impossible\"  \n            }\n\n            $ret_assign = DBFind(`roles_assign`).Columns(`id`).Where(`role_id=$ and member_id=$ and delete=$`, $role_id, $member_id, 0).Order(`id`).Limit(1)\n            if (Len($ret_assign) > 0){\n                $vals_assign = $ret_assign[0] \n                if ( Int($vals_assign[\"id\"]) > 0  ){\n                    warning \"This member has already been added\" \n                }\n            }\n\n            $check_flag = 1\n        }\n    }\n\n    action {\n\t\tif ($check_flag == 1){\n            DBInsert(`roles_assign`, `role_id,role_type,role_name,member_id,member_name,member_avatar,appointed_by_id,appointed_by_name,timestamp date_start,delete`, \n                    $role_id, $vals_role[\"role_type\"], $vals_role[\"role_name\"], $member_id, $vals_member[\"member_name\"], $vals_member[\"avatar\"], $key_id, $vals_appointed[\"member_name\"], $block_time, 0)\n        }\n    }\n}",
            "Conditions": "ContractConditions(`MainCondition`)"
        },	
        {
            "Name": "Roles_Create",
            "Value": "contract Roles_Create {\n    data {\n\t\trole_name string\n\t\trole_type int\n    }\n\n    conditions {\n\t\t$check_flag = 0\n\t\t\n\t\tif ($role_type == 3){\n\t\t\twarning \"System role can not be created\"\n\t\t}\n\n\t\t$ret_member = DBFind(\"member\").Columns(\"member_name,avatar\").Where(\"member_id = $\", $key_id).Order(\"id\")\n\t\tif (Len($ret_member) > 0){\n\t\t\t$vals_member = $ret_member[0]\n\t\t\t$check_flag = 1\n\t\t}\n    }\n\n    action { \n\t\tif ($check_flag == 1){\n\t\t\tDBInsert(`roles_list`, `role_name,role_type,creator_id,creator_name,creator_avatar,timestamp date_create,delete`, \n\t\t\t\t\t$role_name, $role_type, $key_id, $vals_member[\"member_name\"], $vals_member[\"avatar\"], $block_time, 0)\n\t\t}\n    }\n}",
            "Conditions": "ContractConditions(`MainCondition`)"
        },
        {
            "Name": "Profile_Edit",
            "Value": "contract Profile_Edit {\n    data {\n\t    member_name string\n        avatar string \"image\"\n    }\n\n    conditions {\n\t\t$row_id = 0\n\n\t\t$ret_member = DBFind(\"member\").Columns(\"id\").Where(\"member_id = $\", $key_id).Order(\"id\")\n\t\tif (Len($ret_member) > 0){\n\t\t\t$vals_member = $ret_member[0]\n\n            if(Int($vals_member[\"id\"]) > 0){\n\t\t\t    $row_id = Int($vals_member[\"id\"])\n            }\n\t\t}\n    }\n\n    action {\n        if ($row_id > 0){\n            DBUpdate(`member`, $row_id, `member_name,avatar`, $member_name, $avatar)\n        } \n        else{\n            DBInsert(`member`, `member_id,member_name,avatar`, $key_id, $member_name, $avatar)\n        }\n    }\n}",
            "Conditions": "ContractConditions(`MainCondition`)"
        },
        {
            "Name": "RoleCondition",
            "Value": "contract RoleCondition {\n    data{\n        role string\n    }\n    conditions {\n        $assignedFind = DBFind(\"roles_assign\").Where(\"role_name=? and member_id=? and delete=0\", $role, $key_id)\n        if Len($assignedFind) == 0{\n            warning Sprintf(\"This action allowed only for role: %v\",$role)\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        }
    ],
    "tables": [
        {
            "Name": "member",
            "Columns": "[{\"name\":\"member_name\",\"type\":\"varchar\",\"conditions\":\"true\"},{\"name\":\"avatar\",\"type\":\"bytea\",\"conditions\":\"true\"},{\"name\":\"member_id\",\"type\":\"number\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"
        },
        {
            "Name": "notifications",
            "Columns": "[{\"name\":\"recipient_name\",\"type\":\"varchar\",\"conditions\":\"true\"},{\"name\":\"recipient_avatar\",\"type\":\"bytea\",\"conditions\":\"true\"},{\"name\":\"started_processing_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"finished_processing_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"role_name\",\"type\":\"varchar\",\"conditions\":\"true\"},{\"name\":\"header_text\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"recipient_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"notification_type\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"icon\",\"type\":\"varchar\",\"conditions\":\"true\"},{\"name\":\"closed\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"body_text\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"page_name\",\"type\":\"varchar\",\"conditions\":\"true\"},{\"name\":\"role_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"page_val_str\",\"type\":\"varchar\",\"conditions\":\"true\"},{\"name\":\"started_processing_time\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"finished_processing_time\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"page_val_int\",\"type\":\"number\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"
        },
        {
            "Name": "roles_assign",
            "Columns": "[{\"name\":\"delete\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"date_end\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"role_name\",\"type\":\"varchar\",\"conditions\":\"true\"},{\"name\":\"member_name\",\"type\":\"varchar\",\"conditions\":\"true\"},{\"name\":\"appointed_by_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"role_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"member_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"role_type\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"date_start\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"member_avatar\",\"type\":\"bytea\",\"conditions\":\"true\"},{\"name\":\"appointed_by_name\",\"type\":\"varchar\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"
        },
        {
            "Name": "roles_list",
            "Columns": "[{\"name\":\"role_type\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"creator_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"date_create\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"date_delete\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"creator_name\",\"type\":\"varchar\",\"conditions\":\"true\"},{\"name\":\"creator_avatar\",\"type\":\"bytea\",\"conditions\":\"true\"},{\"name\":\"delete\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"role_name\",\"type\":\"varchar\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"
        }
    ],
    "data": [
        {
            "Table": "roles_list",
            "Columns": [
                "role_name",
                "role_type",
                "creator_id",
                "date_create",
                "date_delete",
                "creator_name",
                "creator_avatar",
                "delete"
            ],
            "Data": [
                [
                    "Delegate",
                    "3",
                    "0",
                    "2018-01-01T00:00:00Z",
                    "NULL",
                    "NULL",
                    "NULL",
                    "0"
                ],
                [
                    "Investor with voting rights",
                    "3",
                    "0",
                    "2018-01-01T00:00:00Z",
                    "NULL",
                    "NULL",
                    "NULL",
                    "0"
                ],
                [
                    "Validators",
                    "3",
                    "0",
                    "2018-01-01T00:00:00Z",
                    "NULL",
                    "NULL",
                    "NULL",
                    "0"
                ],
                [
                    "Candidate for validators",
                    "3",
                    "0",
                    "2018-01-01T00:00:00Z",
                    "NULL",
                    "NULL",
                    "NULL",
                    "0"
                ]
            ]
        }
    ]
}