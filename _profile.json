{
    "name": "Basic application",
    "data": [
        {
            "Conditions": "ContractAccess(\"@1EditMenu\")",
            "Value": "MenuItem(Title:$profile$, Page:profile_view, Icon:\"fa icon-user\")\nMenuItem(Title:$membership$, Page:members_list, Icon:\"fa icon-people\")",
            "Name": "default_menu",
            "Type": "menu"
        },
        {
            "Name": "deposit",
            "Trans": "{\"en\": \"Deposit\", \"ru\": \"Депозит\"}",
            "Type": "languages"
        },
        {
            "Name": "total",
            "Trans": "{\"en\": \"Total\", \"ru\": \"Итого\"}",
            "Type": "languages"
        },
        {
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Value": "Div(content-wrapper){\n    SetTitle($membership$)\n\n    If(GetVar(Search)){\n        SetVar(Where,\"member_name='#v_Search#'\")\n    }.Else{\n        SetVar(Where,\"id!=0\").(Search,)\n    } \n    \n    DBFind(Name: members, Source: src_member).Columns(\"id,member_name,image_id\").Custom(custom_id){\n        Span(Class: h5, Body: #id#)\n    }.Custom(custom_member_id){\n        SetVar(Name: style_text, Value: \"text-normal\")\n        SetVar(Name: style_link, Value: \"text-primary\")\n        Span(Class: #style_text#, Body: Address(#id#))\n    }.Custom(custom_username){\n        LinkPage(Class: #style_link# h5 text-bold, Page: profile_view, PageParams: \"v_member_id=#id#\"){\n            If(#image_id#>0){\n                Image(Src: Binary().ById(#image_id#), Class: img-circle).Style(height: 30px;width: 30px; border: 1px solid #5A5D63; margin-right: 10px;)\n                Span(#member_name#)\n            }.Else{\n                Div(){\n                    Span(Em(Class: fa icon-user fa-2x)).Style(margin-right:10px;)\n                    Span(#member_name#)\n                }.Style(display:flex; align-items:center;)\n            }\n        }\n    }.Where(#Where#).Order(\"member_name\")\n    \n    Form(panel panel-primary){\n        Div(panel-body){\n            Div(row){\n                Div(col-md-12){\n                    Div(input-group){\n                        Div(input-group-addon){\n                            LangRes(name)\n                        }\n                        Input(Name: Search, Value: #Search#)\n                        Div(input-group-btn){\n                            Button(Class: btn btn-default fa fa-search, Page: members_list, PageParams: \"Search=Val(Search)\")\n                        }\n                    }\n                }\n            }\n            Div(row){\n                Div(col-md-12){\n                    Table(Source: src_member, Columns: \"$username$=custom_username,$id$=custom_id,$address$=custom_member_id\")\n                }\n            }\n            If(GetVar(Search)){\n                Div(row){\n                    Div(col-md-12 mt-lg){\n                        Div(text-center){\n                            Button(Body: $view_all$, Class: btn btn-primary, Page: members_list)\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
            "Name": "members_list",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Value": "Div(content-wrapper){\n    SetTitle($editing_profile$)\n    Div(breadcrumb){\n        LinkPage($user_info$, profile_view)\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\n        Span(Class: text-muted, Body: $editing_profile$)\n    }\n    \n    If(Or(#v_member_id#>0,#v_member_id#<0)){\n        DBFind(Name: members, Source: src_member).Columns(\"id,member_name,image_id,member_info->information\").Where(\"id=#v_member_id#\").Vars(prefix)\n    }.Else{\n        DBFind(Name: members, Source: src_member).Columns(\"id,member_name,image_id,member_info->information\").Where(\"id=#key_id#\").Vars(prefix)\n    }\n    \n    Div(row){\n        Div(col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3){\n            Form(panel panel-primary){\n                Div(panel-heading, Body: LangRes(editing_profile))\n                Div(panel-body){\n                    Div(list-group-item){\n                        Div(row){\n                            Div(col-md-3 mt-sm text-right){\n                                Label(For: member_name){\n                                    Span(Body: LangRes(member_name))\n                                    Span(Class: text-danger, Body:*)\n                                }\n                            }\n                            Div(col-md-9 mc-sm text-left){\n                                If(Or(#prefix_id#>0,#prefix_id#<0)){\n                                    Input(Name: member_name, Value: #prefix_member_name#, Disabled: true)\n                                }.Else{\n                                    Input(Name: member_name).Validate(minLength:5, maxLength:20)\n                                    InputErr(Name: member_name, minLength: $validate_member_name$, maxLength: $validate_member_name$)\n                                }\n                            }\n                        }\n                    }\n                    Div(list-group-item){\n                        Div(row){\n                            Div(col-md-3 mt-sm text-right){\n                                Label(For: member_image){\n                                    Span(Body: LangRes(member_image))\n                                    If(Or(#prefix_id#>0,#prefix_id#<0)){\n                                    }.Else{\n                                        Span(Class: text-danger, Body:*)\n                                    }\n                                }\n                            }\n                            Div(col-md-9 mc-sm text-left){\n                                Input(Name: member_image, Type: file)\n                            }\n                        }\n                    }\n                    Div(list-group-item){\n                        Div(row){\n                            Div(col-md-3 mt-lg text-right){\n                                Label(For: information){\n                                    Span(Body: LangRes(information))\n                                }\n                            }\n                            Div(col-md-9 mc-sm text-left){\n                                If(GetVar(prefix_member_info_information)){\n                                    Input(Name: information, Type: textarea, Value: #prefix_member_info_information#)\n                                }.Else{\n                                    Input(Name: information, Type: textarea)\n                                }\n                            }\n                        }\n                    }\n                }\n                Div(panel-footer text-right){\n                    Button(Body: LangRes(save), Class: btn btn-primary, Contract: Profile_Edit, Page: members_list,).Alert(Text: $want_save_changes$, ConfirmButton: $yes$, CancelButton: $no$, Icon: question)\n                }\n            }\n        }\n    }\n}",
            "Name": "profile_edit",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Value": "Div(content-wrapper){\n    If(Or(#v_member_id#>0,#v_member_id#<0)){\n    }.Else{\n        SetVar(Name: v_member_id, Value: #key_id#)\n    }\n    DBFind(Name: members, Source: src_member).Where(\"id=#v_member_id#\").Vars(prefix)\n    DBFind(Name: keys, Source: src_keys).Where(\"id=#key_id#\").Vars(tokens)\n    \n    If(Or(#prefix_id#>0,#prefix_id#<0)){\n    }.Else{\n        SetVar(Name: prefix_member_name, Value: \"\")\n    }\n    \n    Div(row){\n        Div(col-sm-8 col-sm-offset-2 col-lg-6 col-lg-offset-3){\n            Form(panel panel-default){\n                Div(panel-heading text-center){\n                    Span(Class: h3, Body: LangRes(user_info))\n                }\n                Div(panel-body){\n                    Div(form-group){\n                        Div(row){\n                            Div(col-md-12 mt-sm text-center){\n                                If(Or(#prefix_id#>0,#prefix_id#<0)){\n                                    If(#prefix_id# == #key_id#){\n                                        Button(Class: btn btn-link, Page: profile_edit, PageParams: \"v_member_id=#key_id#\"){\n                                            If(#prefix_image_id#>0){\n                                                Image(Src: Binary().ById(#prefix_image_id#), Class: img-circle).Style(width: 80px; border: 1px solid #5A5D63;)\n                                            }.Else{\n                                                Span(Class: fa icon-user fa-5x text-primary)\n                                            }\n                                            Div(m0 h3 text-bold){#prefix_member_name#}\n                                        }\n                                    }.Else{\n                                        If(#prefix_image_id#>0){\n                                            Image(Src: Binary().ById(#prefix_image_id#), Class: img-circle).Style(width: 80px; border: 1px solid #5A5D63;)\n                                        }.Else{\n                                            Span(Class: fa icon-user fa-5x)\n                                        }\n                                        Div(m0 h3 text-bold){#prefix_member_name#}\n                                    }\n                                }.Else{\n                                    Button(Class: btn btn-link, Page: profile_edit){\n                                        Span(Class: h3 text-bold, Body: LangRes(editing_profile))\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    Div(list-group-item text-center){\n                        Div(text-muted m0 h5, Body: LangRes(address))\n                        Span(Class: h5 text-bold, Body: Address(#prefix_id#))\n                    }\n                    Div(list-group-item text-center){\n                        Div(text-muted m0 h5, Body: LangRes(roles))\n                        DBFind(Name: roles_participants, Source: src_check).Columns(\"id\").Where(\"member->member_id='#v_member_id#' and deleted=0\").Vars(check)\n                        If(#check_id#>0){\n                            DBFind(Name: roles_participants, Source: src_roles).Columns(\"role->id,role->name\").Where(\"member->member_id='#v_member_id#' and deleted=0\").Order(\"id\")\n                            ForList(src_roles){\n                                Span(){\n                                    LinkPage(Page: roles_view, PageParams: \"v_role_id=#role.id#\"){\n                                        Span(Class: h5 text-bold, Body: \"#role.name#\")\n                                    }\n                                }.Style(margin-right: 5px; margin-left: 5px;)\n                            }\n                        }.Else{\n                            Span(LangRes(no))\n                        }\n                    }\n                    Div(list-group-item text-center){\n                        Div(text-muted m0 h5, Body: LangRes(tokens))\n                        DBFind(keys,src_keys).Ecosystem(1).Where(\"id='#v_member_id#' and deleted=0\").Custom(_total){\n                            SetVar(total,Calculate(#amount#-#deposit#, Type:money))\n                            Money(#total#)\n                        }.Custom(_amount){\n                            Money(#amount#)\n                        }.Custom(_deposit){\n                            Money(#deposit#)\n                        }\n                        Table(src_keys,\"$amount$=_amount,$deposit$=_deposit,$total$=_total\")\n                    }.Style(\n                        thead th {\n                            text-align:center;\n                        }\n                    )\n                }\n            }\n        }\n    }\n}",
            "Name": "profile_view",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract Profile_Edit {\n    data {\n        member_name string\n        member_image bytes \"file\"\n        information string \"optional\"\n    }\n\n    conditions {\n        var app_name string\n        app_name = \"Basic application\" \n\n        $member = DBFind(\"members\").Where(\"id=?\", $key_id).Row()\n        $app_id = Int(DBFind(\"applications\").Where(\"name=? and deleted=0\", app_name).One(\"id\"))\n\n        if !$member {\n            // check member_name \n            if DBFind(\"members\").Where(\"member_name=?\", $member_name).One(\"id\") {\n                warning \"This member name is busy. Enter another member name, please\"\n            }\n        }\n    }\n\n    action {\n        var memberInfo map\n        var image_id int\n        var image_name string\n        image_name = \"avatar\" \n\n        if $member {\n            image_id = Int($member[\"image_id\"]) \n            image_id = @1UploadBinary(\"Name,Data,ApplicationId\", image_name, $member_image, $app_id)\n            DBUpdate(\"members\", Int($member[\"id\"]), \"member_info->information,image_id\", $information, image_id)\n        } else {\n            memberInfo[\"information\"] = $information\n            image_id = @1UploadBinary(\"Name,Data,ApplicationId\", image_name, $member_image, $app_id)\n            DBInsert(\"members\", \"id,member_name,image_id,member_info\", $key_id, $member_name, image_id, memberInfo)\n        }\n    }\n}",
            "Name": "Profile_Edit",
            "Type": "contracts"
        }
    ]
}