contract business_Process {
    data {
        ModelId int // business_models id
        EventId int
        ResultId int
        ObjectType int
        ObjectId int
        Comment string "optional"
    }
    conditions {
        $ApplicationId = Int(DBFind("applications").Where("name='Business'").One("id"))
        if $ApplicationId == 0 {
            warning "Application ID not found"
        }
        $numSubmitted = Int(DBFind("business_events").Where("event_id=? and object_type=? and object_id=? and key_id and result_id=?", $EventId, $ObjectType, $ObjectId, $key_id, $ResultId).Order("num_submitted desc").One("num_submitted")) + 1
        $models = DBFind("business_models").Where("object_type=?", $ObjectType)
        $conditionModel = DBFind("business_models").Where("id=?", $ModelId).One("condition")
        if !$conditionModel{
            error "Business condition not found"
        }
        $condition = JSONDecode($conditionModel["condition"])
    }
    action {
        DBInsert("business_events", "event_id,object_type,object_id,key_id,result_id,comment,num_submitted,created_at", $EventId, $ObjectType, $ObjectId, $key_id, $ResultId, $Comment, $numSubmitted, "Now()")
        var i int
        var model map
        var isNextFound bool
        while i<Len($models){
            model = $models[i]
            if $condition[model["event_id"]] = $Result {
                isNextFound = true
                break
            }
            i=i+1
        }
        if isNextFound {
            // TODO: отправить Notifications_Roles_Send с переходом на страницу business_process
        }else{
            warning "Next step not found"
        }
    }
}