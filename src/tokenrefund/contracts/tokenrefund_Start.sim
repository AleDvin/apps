contract tokenrefund_Start{
    data{
        SufferingAccount string
        SuspectAccount string
        Amount int
        Note string
        DateStart string "date"
        DateEnd string "date"
        DatetimeNow string "date"
        TimeNow string "date"
    }
    
    conditions{
        var allowed map
        allowed = DBFind("roles_assign").Where("role_name='Validator' and role_type=3 and delete=0 and member_id=?", $key_id)
        if !allowed{
            warning "You can not to run this"
        }
        
        var template_id int
        template_id = DBFind("laws").Where("name='tokenrefund'").One("voting_template_id")
        if template_id == nil{
            info "Template not found"
        }
        
        $template = DBFind("voting_templates").Where("id=?", template_id).Row()
        $votersRoleName = $template["voters"]
        $votingName = $template["title"]
        $typeParticipants = 3 // участников добавим по роли
        $typeDecision = 5 // запуск контракта
        $typeVoting = 2 // системное голосование
        $volume = Int($template["volume"])
        $quorum = Int($template["quorum"])
        $contractAccept = $template["contract_accept"]
        $contractReject = $template["contract_reject"]
        
        $desc = Sprintf("%v [#%v]", $votingName, $TemplateId)
        
        
        $isCreated = DBFind("voting_instances").Where("name=? and description=? and delete=0", $votingName, $desc).Row()
        if $isCreated{
            // info "Voting already created" // раскомментировать на проде
        }
        
        $defaultParams = Sprintf("VotingTemplateId->%v;KeyId->%v", $TemplateId, $key_id)
    }
    
    action{
        $voting_id = 0 // должно установиться в voting_CreateNew
        voting_CreateNew("voting_name,type_voting,description,type_participants,type_decision,volume,quorum,now_date,start_time,end_time,start_date,end_date", $votingName, $typeVoting, $desc, $typeParticipants, $typeDecision, $volume, $quorum, $DatetimeNow, $TimeNow, $TimeNow, $DateStart, $DateEnd)
        if $voting_id == 0 {
            $voting_id = DBFind("voting_instances").Where("voting_name=? and start_date=?", $votingName, $DateStart).One("id")
            $voting_id = Int($voting_id)
        }
        voting_SubjectContract("votingID,contract_reject,contract_accept,contract_reject_params,contract_accept_params", $voting_id, $contractAccept, $contractReject, $defaultParams, $defaultParams)
        
        var roleId int
        roleId = DBFind("roles_list").Where("role_name=? and delete=0", $votersRoleName).One("id")
        voting_Invite("votingID,var_id", $voting_id, roleId)
    }
}