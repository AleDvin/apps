contract land_registry_InititiatePurchase{
    data{
        LandId int
    }
    
    conditions{}
    
    action{
        var ownership map
        ownership = DBFind("land_registry_ownership").Where("lend_object_id=?", $LandId).Row()
        
        var ownershipId, ownerId int
        ownershipId = Int(ownership["id"])
        ownerId = Int(ownership["owner_id"])
        
        DBUpdate("land_registry_ownership", ownershipId, "owner_new_id,step", $key_id, 0)
        
        var query string
        query = Sprintf("page_params='LandId=%v'", $LandId)
        var notifications array
        notifications = DBFind("notifications").Where(query)
        var i int
        while i < Len(notifications) {
            var notification map
            notification = notifications[i]
            Notifications_Single_Close("notific_id", Int(notification["id"]))
            i = i + 1
        }
        
        // notify land owner
        var icon, header, body, page, params string
        icon = "fa-bell"
        header = "$purchase_request$"
        body = "$need_your_processing$"
        page = "land_registry_view"
        params = Sprintf("LandId=%v,",$LandId)
        Notifications_Single_Send("member_id,icon_name,text_header,text_body,page_name,params_val", ownerId, icon, header, body, page, params)
        
        //DBUpdate("land_registry_ownership", ownershipId, "owner_new_id, step", $key_id, 1)
        // notify self
        // $textHeader = "New purchase"
        // $textBody = "Waiting for a response from the bank"
        // $valInt = $LandId
        // $valStr = ""
        // Notifications_Single_Send($notifySingleParams,$memberId,$iconName,$textHeader,$textBody,$pageName,$valInt,$valStr)
        
        // notify bank
        //notification_Roles_Send("icon_number,text_header,text_body,page_name,val_int,val_str,role_id,closure_type", 5, "New land", "Need your processing", "page_bank", $LandId, "", 4, 2)
    }
}