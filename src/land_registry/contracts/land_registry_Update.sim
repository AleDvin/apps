contract land_registry_Update{
    data {
        LandId int
        Coords string
        LandUse int
        BuildingsUseClass int
        Area int
        CoordsAddress string
        LandNature int
        LandLocalBody int
    }
    func conditions {
        $landRegistryRecord = DBFind("land_registry").Where("id=?", $LandId).Row()
        if !$landRegistryRecord{
            warning "Land Registry record not found"
        }
    }
    
    func log(field, value string){
        if value != $landRegistryRecord[field] {
            var name string
            name = DBFind("members").Where("id=?", $key_id).One("member_name")
            
            DBInsert("land_registry_editing", "editing_attribute,lend_object_id,new_attr_value,old_attr_value,person_id,person_name,timestamp date", field, $LandId, value, $landRegistryRecord[field],$key_id, name, $block_time)
        }
    }
    func action {
        log("land_use", $LandUse)
        log("buildings_use_class", $BuildingsUseClass)
        log("address", $CoordsAddress)
        log("map_coords", $Coords)
        log("area", $Area)
        
        DBUpdate("land_registry", $LandId, "address,area,buildings_use_class,map_coords,land_use,land_nature,land_local_body", $CoordsAddress,$Area,$BuildingsUseClass,$Coords,$LandUse,$LandNature,$LandLocalBody)
    }
}