Div(Class: content-wrapper){
    
    SetTitle($voting$)
    Div(breadcrumb){
        Span(Class: text-muted, Body: $voting$)
    }
    
    If(GetVar(isSearch) == 1){
        SetVar(Name: v_Where, Value: "name='#v_Search#' and deleted = 0")
    }.Else{
        SetVar(Name: v_Where, Value: "deleted=0")
        SetVar(Name: v_Search, Value: "")
    }
    
    DBFind(Name: votings, Source: src_voting).Columns("id,voting->name,voting->type,voting->type_decision,voting->type_participants,flags->notifics,flags->success,flags->decision,progress->percent_success,creator->member_id,creator->member_name,date_started,date_ended,deleted").Custom(custom_id){
        Span(Class: h5, Body: #id#)
        SetVar(Name: vDateNow, Value: Now("YYYY-MM-DD HH:MI"))
        SetVar(Name: vStartDate, Value: DateTime(DateTime: #date_started#, Format: "YYYY-MM-DD HH:MI"))
        SetVar(Name: vEndDate, Value: DateTime(#date_ended#, "YYYY-MM-DD HH:MI"))
        SetVar(Name: vCmpStartDate, Value: CmpTime(#vStartDate#,#vDateNow#))
        SetVar(Name: vCmpEndDate, Value: CmpTime(#vEndDate#,#vDateNow#))
    }.Custom(custom_name){
        LinkPage(Page: voting_view, PageParams: "vID=#id#"){
            Span(Class: h5 text-bold, Body: #voting.name#)
        }
    }.Custom(custom_subject){
        If(Or(#vCmpStartDate#<=0,#voting.type#==2)){
            Span(Class: h6, Body: EcosysParam(Name: type_voting_decisions, Index: #voting.type_decision#))
        }.Else{
            If(#voting.type_decision# == 1){
				LinkPage(Page: voting_decision_candidates, PageParams: "vID=#id#"){
					Span(Class: h6 text-bold, Body: EcosysParam(Name: type_voting_decisions, Index: #voting.type_decision#))
				}
            }
			If(#voting.type_decision# == 2){
				LinkPage(Page: voting_decision_election, PageParams: "vID=#id#"){
					Span(Class: h6 text-bold, Body: EcosysParam(Name: type_voting_decisions, Index: #voting.type_decision#))
				}
            }
			If(#voting.type_decision# == 3){
				LinkPage(Page: voting_decision_document, PageParams: "vID=#id#"){
					Span(Class: h6 text-bold, Body: EcosysParam(Name: type_voting_decisions, Index: #voting.type_decision#))
				}
            }
			If(#voting.type_decision# == 4){
				LinkPage(Page: voting_decision_formal, PageParams: "vID=#id#"){
					Span(Class: h6 text-bold, Body: EcosysParam(Name: type_voting_decisions, Index: #voting.type_decision#))
				}
            }
			If(#voting.type_decision# == 5){
				LinkPage(Page: voting_decision_contract, PageParams: "vID=#id#"){
					Span(Class: h6 text-bold, Body: EcosysParam(Name: type_voting_decisions, Index: #voting.type_decision#))
				}
            }
        }
    }.Custom(custom_participants){
        If(Or(#vCmpStartDate#<=0,#voting.type#==2)){
            Span(Class: h6, Body: EcosysParam(Name: type_voting_participants, Index: #voting.type_participants#))
        }.Else{
            LinkPage(Page: voting_invite, PageParams: "vID=#id#"){
                Span(Class: h6 text-bold, Body: EcosysParam(Name: type_voting_participants, Index: #voting.type_participants#))
            }
        }
    }.Custom(custom_notifics){
        If(#flags.notifics# == 1){
            Div(Class: text-center text-bold, Body: LangRes(yes))
        }.Else{
            If(And(#flags.success#!=1,#vCmpEndDate#>0,#vCmpStartDate#<0,#creator.member_id#==#key_id#)){
                Div(Class: text-center, Body: Button(Body: LangRes(send), Class: btn btn-primary, Contract: voting_SendNotifics, Params: "votingID=#id#", Page: voting_list))
            }.Else{
                Div(Class: text-center text-bold, Body: LangRes(no))
            }
        }
    }.Custom(custom_creator){
		LinkPage(Class: text-primary h5 text-bold, Page: profile_view, PageParams: "v_member_id=#creator.member_id#"){
			Span(Body: #creator.member_name#)
		}
    }.Custom(custom_date){
        If(#vCmpStartDate# < 0){
            Div(Class: text-muted, Body: DateTime(DateTime: #date_started#, Format: "DD.MM.YYYY HH:MI"))
        }.Else{
            Div(Class: text-bold, Body: DateTime(DateTime: #date_started#, Format: "DD.MM.YYYY HH:MI"))
        }
        If(#vCmpEndDate# < 0){
            Div(Class: text-muted, Body: DateTime(DateTime: #date_ended#, Format: "DD.MM.YYYY HH:MI"))
        }.Else{
            Div(Class: text-bold, Body: DateTime(DateTime: #date_ended#, Format: "DD.MM.YYYY HH:MI"))
        }
    }.Custom(custom_type){
        Span(Class: h6, Body: EcosysParam(Name: type_voting, Index: #voting.type#))
    }.Custom(custom_progress){
        Div(Class: text-center h5 text-bold, Body: #progress.percent_success# %)
    }.Custom(custom_decision){
        If(#flags.decision# == 0){
            If(And(#vCmpEndDate#<0,#creator.member_id#==#key_id#)){
                Div(Class: text-center, Body: Button(Body: LangRes(decision), Class: btn btn-primary, Contract: voting_CheckDecision, Params: "votingID=#id#", Page: voting_list))
            }.Else{
                Div(Class: text-muted text-center, Body: LangRes(no))
            }
        }
        If(#flags.decision# == -2){
            Div(Class: text-muted text-center, Body: LangRes(not_enough_votes))
        }
        If(#flags.decision# == 1){
            Div(Class: text-success text-center, Body: LangRes(accepted))
        }
        If(#flags.decision# == -1){
            Div(Class: text-danger text-center, Body: LangRes(rejected))
        }
    }.Custom(custom_status){
        If(#flags.success# == 1){
            Div(Class: text-success text-center, Body: LangRes(success))
        }.Else{
            If(#vCmpEndDate# < 0){
                Div(Class: text-muted text-center, Body: LangRes(finished))
            }.Else{
                If(#vCmpStartDate# < 0){
                    Div(Class: text-center){
                        Button(Class: btn btn-link, Page: voting_view, PageParams: "vID=#id#"){
                            Span(Class: h4, Body: Em(Class: fa icon-eye))
                        }
                    }
                }.Else{
                    Div(Class: text-warning text-center, Body: LangRes(waiting))
                }
            }
        }
    }.Custom(actions){
		Div(Class: pull-right){
			If(#vCmpStartDate# > 0){
				Button(Body: Em(Class: fa fa-trash), Class: btn btn-default, Contract: voting_Delete, Params: "votingID=#id#", Page: voting_list).Alert(Text: $want_delete_voting$, ConfirmButton: $yes$, CancelButton: $no$, Icon: question)
			}
		}
        Div(Class: text-center, Body: )
    }.Where(#v_Where#).Order(id desc)
    
    Div(Class: panel panel-primary){
        Form(){
            Div(Class: list-group-item){
                Div(Class: row df f-valign){
                    Div(Class: col-md-1 mt-sm text-right){
                        Label(For: Search){
                            Span(Body: LangRes(name))
                        }
                    }
                    Div(Class: col-md-11 mc-sm){
                        Div(Class: input-group){
                            Input(Class: form-control, Type: text, Name: Search, Value: #v_Search#)
                            Div(Class: input-group-btn){
                                Button(Body: Em(Class: fa fa-search), Class: btn btn-default, Page: voting_list, PageParams: "isSearch=1,v_Search=Val(Search)")
                            }
                        }
                    }
                }
            }
            Div(Class: list-group-item){
                Table(src_voting, "$id$=custom_id,$name$=custom_name,$type$=custom_type,$subject_voting$=custom_subject,$participants$=custom_participants,$date_start$/$date_end$=custom_date,$creator$=custom_creator,$notifications$=custom_notifics,$progress$=custom_progress,$decision$=custom_decision,$status$=custom_status,=actions")
                If(GetVar(isSearch) == 1){
                    Div(Class: text-center){
                        Button(Body: $view_all$, Class: btn btn-primary, Page: voting_list, PageParams: "isSearch=0")
                    }
                }
            }
            Div(Class: panel-footer clearfix){
                Div(Class: pull-right){
                    Button(Body: LangRes(create), Class: btn btn-primary, Page: voting_create)
                }
            }
        }
    }
}