Div(Class: content-wrapper){

	SetTitle($role_notifics$)
	Div(breadcrumb){
		Span(Class: text-muted, Body: $role_notifics$)
	}

    If(GetVar(isSearch) == 1){
        SetVar(Name: v_Where, Value: "notification->type='2' and recipient->role_name='#v_Search#'")
    }.Else{
        SetVar(Name: v_Where, Value: "notification->type='2'")
        SetVar(Name: v_Search, Value: "")
    }

    DBFind(Name: notifications, Source: src_notifications).Columns("id,recipient->role_id,recipient->role_name,recipient->image_id,sender->type,sender->member_id,sender->member_name,sender->role_id,sender->role_name,notification->icon,page_name,page_params,date_created,date_closed,date_start_processing,processing_info->member_name,closed").Custom(custom_id){
		If(#closed# == 0){
			SetVar(Name: style_text, Value: "text-normal")
			SetVar(Name: style_link, Value: "text-primary")
		}.Else{
			SetVar(Name: style_text, Value: "text-muted")
			SetVar(Name: style_link, Value: "text-muted")
		}
        Span(Class: #style_text#, Body: #id#)
    }.Custom(custom_recipient){
		SetVar(Name: img_id, Value: 0)
		DBFind(Name: binary_data, Source: src_binary).Columns("binary_data").Where("id=#recipient.image_id#").Vars(img)
		LinkPage(Class: #style_link# h5 text-bold, Page: roles_view, PageParams: "v_role_id=#recipient.role_id#"){
			If(#img_id#>0){
				Image(Src: "#img_binary_data#").Style(width: 30px; border: 1px solid #5A5D63; margin-right: 10px;)
				Span(#recipient.role_name#)
			}.Else{
				Div(){
					Span(Em(Class: fa icon-settings fa-2x)).Style(margin-right:10px;)
					Span(#recipient.role_name#)
				}.Style(display:flex; align-items:center;)
			}			
		}
    }.Custom(custom_sender){
		If(#sender.type#==1){
			LinkPage(Class: #style_link# h5 text-bold, Page: profile_view, PageParams: "v_member_id=#sender.member_id#"){
				Span(Body: #sender.member_name#)
			}
		}
		If(#sender.type#==2){
			LinkPage(Class: #style_link# h5 text-bold, Page: roles_view, PageParams: "v_role_id=#sender.role_id#"){
				Span(Body: #sender.role_name#)
			}
		}
    }.Custom(custom_icon){
        Em(Class: fa #notification.icon# fa-2x #style_text#)
    }.Custom(custom_page){
		LinkPage(Class: #style_link# h5 text-bold, Page: #page_name#, PageParams: "notific_id=#id#"){
			Span(Body: #page_name#)
		}
    }.Custom(custom_date){
		Div(Class: #style_text# h6 m0 , Body: DateTime(DateTime: #date_created#, Format: "DD.MM.YYYY HH:MI"))
		Div(Class: #style_text# h6 m0 , Body: DateTime(DateTime: #date_closed#, Format: "DD.MM.YYYY HH:MI"))
    }.Custom(custom_processing){
        If(#date_start_processing# == NULL){
			P(Class: #style_text# h6 m0, Body: $not_started$)
        }.Else{
			P(Class: #style_text# h6 m0, Body: $started$ #processing_info.member_name# $at$)
            P(Class: #style_text# h6 m0, Body: DateTime(DateTime: #date_start_processing#, Format: "DD.MM.YYYY HH:MI"))
        }
    }.Custom(custom_status){
        If(#closed# == 0){
            If(#date_start_processing# == NULL){
                Span(Class: #style_text#, Body: LangRes(active))
            }.Else{
                Span(Class: #style_text#, Body: LangRes(processing))
            }
        }.Else{
            Span(Class: #style_text#, Body: LangRes(сlosed))
        }
    }.Custom(actions){
		Div(Class: pull-right){
			If(#closed# == 0){
				If(#date_start_processing# == NULL){
					Button(Body: Em(Class: fa fa-recycle), Class: btn btn-default, Contract: Notifications_Roles_Processing, Params: "notific_id=#id#", Page: notifications_roles).Alert(Text: $want_start_processing_notification$, ConfirmButton: $yes$, CancelButton: $no$, Icon: question)
				}.Else{
					Button(Body: Em(Class: fa fa-trash), Class: btn btn-default, Contract: Notifications_Roles_Close, Params: "notific_id=#id#", Page: notifications_roles).Alert(Text: $want_close_notification$, ConfirmButton: $yes$, CancelButton: $no$, Icon: question)
				}
			}
		}	
    }.Where(#v_Where#).Order("closed ASC, id ASC")

    Div(Class: panel panel-primary){
        Form(){
            Div(Class: list-group-item){
                Div(Class: row df f-valign){
                    Div(Class: col-md-1 mt-sm text-right){
                        Label(For: Search){
                            Span(Body: LangRes(role))
                        }
                    }
                    Div(Class: col-md-11 mc-sm){
                        Div(Class: input-group){
                            Input(Class: form-control, Type: text, Name: Search, Value: #v_Search#)
                            Div(Class: input-group-btn){
                                Button(Body: Em(Class: fa fa-search), Class: btn btn-default, Page: notifications_roles, PageParams: "isSearch=1,v_Search=Val(Search)")
                            }
                        }
                    }
                }  
            }

            Div(Class: list-group-item){ 
                Table(Source: src_notifications, Columns: "$id$=custom_id,$icon$=custom_icon,$recipient$=custom_recipient,$page_name$=custom_page,$sender$=custom_sender,$processing$=custom_processing,$sent$/$сlosed$=custom_date,$status$=custom_status,=actions")
                If(GetVar(isSearch) == 1){
                    Div(Class: text-center){  
                        Button(Body: $view_all$, Class: btn btn-primary, Page: notifications_roles, PageParams: "isSearch=0")
                    }
                }
            }

            Div(Class: panel-footer clearfix){
                Div(Class: pull-right){
                    Button(Body: LangRes(send), Class: btn btn-primary, Page: notifications_roles_send)
                }
            }
            
        }           
    }

}