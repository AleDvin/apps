Div(Class: content-wrapper){
    If(#vID# > 0){
        DBFind(Name: votings, Source: src_voting).Columns("id,voting->name,optional->role_id,optional->role_vacancies,optional->contract_accept,optional->contract_reject,optional->contract_accept_params,optional->contract_reject_params").Where("id=#vID#").Vars(instance)

        SetTitle($subject_voting$)
        Div(Class: breadcrumb){
            LinkPage($voting$, voting_list)
            Span(/).Style(margin-right: 10px; margin-left: 10px;)
            LinkPage(#instance_voting_name#, voting_view,, "vID=#vID#")
            Span(/).Style(margin-right: 10px; margin-left: 10px;)
            Span(Class: text-muted, Body: $subject_voting$)
        }

        Div(Class: row df f-valign){
            Div(Class: col-lg-10 col-lg-offset-1){
                Div(Class: panel panel-primary){
                    Form(){
						Div(Class: list-group-item){
							Div(Class: row df f-valign){
								Div(Class: col-md-3 mt-sm text-right){
									Label(){
										Span(Body: LangRes(candidates))
										Span(Class: text-danger, Body:*)
									}
								}
								Div(Class: col-md-9 mc-sm text-left){
                                    Div(Class: input-group){
										Input(Name: can_apply_voting, Class: form-control, Disabled: 1, Type: text, Value: "$can_apply_voting$")	
                                        Div(Class: input-group-btn){
                                            Button(Body: LangRes(apply), Class: btn btn-primary, Page: voting_decision_candidates, PageParams: "vID=#vID#", Contract: voting_SubjectCandidates)
                                        }
                                    }
								}
							}
                            Div(Class: row df){
                    			Div(Class: col-lg-8 col-lg-offset-3){
                                    DBFind(Name: votings_subject, Source: src_voting_subject).Columns("id,subject->member_id,subject->member_name").Where("voting_id=#vID#").Custom(custom_address){
                                        Address(#subject.member_id#)
	                                }.Custom(custom_member){
										LinkPage(Class: text-primary h5 text-bold, Page: profile_view, PageParams: "v_member_id=#subject.member_id#"){
											Span(Body: #subject.member_name#)
										}
									}
                                    Table(src_voting_subject, "$candidates$=custom_member,$address$=custom_address")
                                }
                            }
                        }
                        Div(Class: list-group-item){
                            Div(Class: row df f-valign){
                                Div(Class: col-md-3 mt-sm text-right){
                                    Label(){
                                        Span(Body: LangRes(role))
										Span(Class: text-danger, Body:*)
                                    }
                                }
                                Div(Class: col-md-9 mb-sm text-left){
                                    DBFind(Name: roles, Source: src_roles).Columns("id,role_name").Where("role_type=2 and deleted=0")
                                    Select(Name: roleID, Source: src_roles, NameColumn: role_name, ValueColumn: id, Value: #instance_optional_role_id#)
                                } 
                            }
                            Div(row df f-valign){
                                Div(Class: col-md-3 mt-sm text-right){
                                    Label(){
                                        Span(Body: LangRes(vacancies))
										Span(Class: text-danger, Body:*)
                                    }
                                }
                    			Div(Class: col-md-9 mc-sm text-left){
                    			    Input(Name: vacancies, Class: form-control, Type: Number, Value: #instance_optional_role_vacancies#)
                                }
                            }
                        }
                        Div(Class: list-group-item){
                            Div(Class: row df f-valign){
                                Div(Class: col-md-3 mt-sm text-right){
                                    Label(){
                                        Span(Body: LangRes(contract_accept))
                                    }
                                }
                                Div(Class: col-md-9 mb-sm text-left){
                                    Input(Name: contract_accept, Class: form-control, Type: text, Value: #instance_optional_contract_accept#, Placeholder: "$contract_accept_des$").Validate(minLength:3, maxLength:255)
									InputErr(Name: contract_accept, minLength: $validate_contract_name$, maxLength: $validate_contract_name$)
                                }
							}
							Div(Class: row df f-valign){
                                Div(Class: col-md-3 mt-sm text-right){
                                    Label(){
                                        Span(Body: LangRes(params))
                                    }
                                }
                                Div(Class: col-md-9 mb-sm text-left){
                                    Input(Name: contract_accept_params, Class: form-control, Type: text, Value: #instance_optional_contract_accept_params#, Placeholder: "$contract_params_des$")
                                }
                            }
                            Div(Class: row df f-valign){
                                Div(Class: col-md-3 mt-sm text-right){
                                    Label(){
                                        Span(Body: LangRes(contract_reject))
                                    }
                                }
                                Div(Class: col-md-9 mb-sm text-left){
                                    Input(Name: contract_reject, Class: form-control, Type: text, Value: #instance_optional_contract_reject#, Placeholder: "$contract_reject_des$").Validate(minLength:3, maxLength:255)
									InputErr(Name: contract_reject, minLength: $validate_contract_name$, maxLength: $validate_contract_name$)
                                }
							}
							Div(Class: row df f-valign){
                                Div(Class: col-md-3 mt-sm text-right){
                                    Label(){
                                        Span(Body: LangRes(params))
                                    }
                                }
                                Div(Class: col-md-9 mc-sm text-left){
                                    Input(Name: contract_reject_params, Class: form-control, Type: text, Value: #instance_optional_contract_reject_params#, Placeholder: "$contract_params_des$")
                                }
                            }
                        }
                        Div(Class: panel-footer clearfix){
                            Div(Class: pull-left){
								Input(Name: memberID, Class: form-control hidden, Type: text, Value: 0)
								Input(Name: votingID, Class: form-control hidden, Type: text, Value: #vID#)
                            }
                            Div(Class: pull-right){
                                Button(Body: LangRes(back), Class: btn btn-default, Page: voting_view, PageParams: "vID=#vID#")
                                Button(Body: LangRes(save), Class: btn btn-primary, Page: voting_view, PageParams: "vID=#vID#", Contract: voting_SubjectSettings)
                            }
                        }
                    }
                }
            }
        }
    }.Else{
        Div(Class: md-12 alert alert-danger text-center){
            Span(Body: LangRes(attention))
        }
    }
}