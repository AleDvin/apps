contract voting_Invite {
    data {
        votingID int
        var_id int //0, member_id, role_id
    }

    conditions {
        $voting_map = DBFind("voting").Where("id=$ and date_ended > now()", $votingID).Row()
        if !$voting_map {
            warning "Voting has expired. Can not add new participants"
        }

        // get JSON
        var voting_json string
        voting_json = Str($voting_map["voting"])

        // get MAP
        var voting map
        voting = JSONToMap(voting_json)

        $type_participants = Int(voting["type_participants"])
        $type_voting = Int(voting["type"])

        // get JSON
        var progress_json string
        progress_json = Str($voting_map["progress"])

        // get MAP
        var progress map
        progress = JSONToMap(progress_json)

        $number_participants = Int(progress["number_participants"])

        if (($number_participants > 1) && ($type_voting == 2)) {
            warning "This vote is a system. Add new participants are not possible"
        }

        if ($type_participants == 2) { //list of candidates
            $participant_id = DBFind("voting_participants").Where("voting_id=$ and member->member_id=$", $votingID, $var_id).One("id")
            if $participant_id {
                warning "Member has already been added before"
            }
        }

        if ($type_participants == 3) { //list of candidates
            $participant_id = DBFind("voting_participants").Where("voting_id=$", $votingID).One("id")
            if $participant_id {
                warning "Voting participants have already been added before"
            }
        }
    }

    action {
        if ($type_participants == 1) {
            $ret_member = DBFind("members").Where("id != $", 0).Order("id")
            $i = 0
            while ($i < Len($ret_member)) {
                $vals_member = $ret_member[$i]

                var member map
                member["member_id"] = Str($vals_member["id"])
                member["member_name"] = Str($vals_member["member_name"])
                member["image_id"] = Str($vals_member["image_id"])

                DBInsert("voting_participants", "voting_id,member", $votingID, member)
                $number_participants = $number_participants + 1
                $i = $i + 1
            }
        }

        if ($type_participants == 2) {
            $member_map = DBFind("members").Where("id = $", $var_id).Row()
            if $member_map {

                var member map
                member["member_id"] = Str($member_map["id"])
                member["member_name"] = Str($member_map["member_name"])
                member["image_id"] = Str($member_map["image_id"])

                DBInsert("voting_participants", "voting_id,member", $votingID, member)
                $number_participants = $number_participants + 1
            }
        }

        if ($type_participants == 3) {
            $ret_role = DBFind("roles_participants").Where("role->id=$ and deleted=0", $var_id).Order("id")
            $i = 0
            while ($i < Len($ret_role)) {
                $vals_role = $ret_role[$i]

                DBInsert("voting_participants", "voting_id,member", $votingID, Str($vals_role["member"]))
                $number_participants = $number_participants + 1
                $i = $i + 1
            }
        }

        // get JSON
        var progress_json string
        progress_json = Str($voting_map["progress"])

        // get MAP
        var progress map
        progress = JSONToMap(progress_json)

		progress["number_participants"] = Str($number_participants)
        DBUpdate("voting", $votingID, "progress", progress)
    }
}