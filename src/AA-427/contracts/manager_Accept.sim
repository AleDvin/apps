contract manager_Accept {
    data {
        NotificId int
    }
    func blockDeposit(memberId int){
        DBUpdate("@1_keys", memberId, "+deposit", $deposit)
        var sender int header body page params eco string
        sender = 1
        header = "Tokens has been blocked"
        body = "Part of your APL tokens has been blocked until completion of the calculations"
        page = "notifications_testpage"
        params = "{}"
        eco = "3"
        notifications_Send("member_id,sender,text_header,text_body,page_name,params_map,eco", memberId, sender,header, body, page, params, eco)
    }
    func sendValidated(memberId int){
        var sender int header body page params eco string
        sender = 1
        header = "Tokens transfer has been validated"
        body = "The APL Token transfer has been validated by the PSPs servicing the parties"
        page = "notifications_testpage"
        params = "{}"
        eco = "3"
        notifications_Send("member_id,sender,text_header,text_body,page_name,params_map,eco", memberId,sender,header,body,page,params,eco)
    }
    func signFin(fin int){
        var signature string
        if fin == 1 {
            signature = "signature_fin1"
        }
        if fin == 2 {
            signature = "signature_fin2"
        }
        if signature {
            DBUpdate("@3_form_of_listing", Int($form["id"]), signature, 1)
        }
    }
    func isBothFinSigned() bool{
        if DBFind("@3_form_of_listing").Where("id=? and signature_fin1=1 and signature_fin2=1", Int($form["id"])).One("id") {
            return true
        }
        return false
    }
    conditions {
        $notific = DBFind("notifications").Columns("id,notification->type,notification->header,page_params->buyer,page_params->emitent,page_params->paper_title,page_params->amount,page_params->form_of_listing_id").Where("id=?", $NotificId).Row()
        if !$notific {
            warning "Notification not found"
        }
        if $role_id != 3 {
            warning "Accepting allowed only for Manager"
        }
        $buyer = DBFind("keys").Ecosystem(1).Where("id=?", $notific["page_params.buyer"]).Row()
        $emitent = DBFind("keys").Ecosystem(1).Where("id=?", $notific["page_params.emitent"]).Row()
        $deposit = Money($notific["page_params.amount"])
        $paper = $notific["page_params.paper_title"]
        $form = DBFind("form_of_listing").Ecosystem(3).Where("id=?", $notific["page_params.form_of_listing_id"]).Row()

        if !$buyer{
            warning "buyer not found"
        }
        if !$emitent{
            warning "emitent not found"
        }
        if !$paper{
            warning "paper_title not found"
        }
        if !$deposit {
            warning "amount not found"
        }
        if !$form {
            warning "Transaction ID not found"
        }
        if Money($buer["amount"]) - Money($buer["deposit"]) - $deposit <= 0 {
            warning "Funds in the account of the buyer is not enough"
        }
    }
    action {
        if $ecosystem_id == 4 { // fin A
            blockDeposit(Int($buyer["id"]))
            signFin(1)
        }
        if $ecosystem_id == 5 { // fin B
            signFin(2)
        }
        if isBothFinSigned() {
            sendValidated(Int($buyer["id"]))
            sendValidated(Int($emitent["id"]))
        }

        notifications_Close("notific_id", $NotificId)
    }
}