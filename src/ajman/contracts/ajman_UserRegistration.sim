contract ajman_UserRegistration {
    data {
        Username string
        Password string
        FirstNameAr string
        LastNameAr string
        FirstNameEn string
        LastNameEn string
        Nationality int
        EmirateNumber string
        EmirateIdExpieryDate string "date"
        EmirateIdImage bytes "file"
        PassportId string
        PassportExpieryDate string "date"
        PassportIdImage bytes "file"
        DateOfBirth string "date"
        ProfileImage bytes "file"
        Gender int
        Email string
        Mobile string
        Phone string "optional"
        Fax string "optional"
        PostOffice string "optional"
        Address string "optional"
        Communication int
        Language int
    }
    conditions {
        if !$Nationality{
            warning "Please select Nationality"
        }
        if Contains($Email, " ") || !Contains($Email, "@") {
            warning "Incorrect email"
        }
        $member = DBFind("members").Where("id=?", $key_id).Row()
        if !$member{
            warning "Member not found"
        }
        $ApplicationId = Int(DBFind("applications").Where("name='Ajman property'").One("id"))
        if $ApplicationId == 0 {
            warning "Application ID not found"
        }
        $managerRoleId = AppParam($ApplicationId, "manager_role_id")
    }
    action {
        var emirateIdImage, passportIdImage, profileImage int
        emirateIdImage = UploadBinary("Name,Data,ApplicationId,DataMimeType", "EmirateIdImage", $EmirateIdImage, $ApplicationId, $EmirateIdImageMimeType)
        passportIdImage = UploadBinary("Name,Data,ApplicationId,DataMimeType", "PassportIdImage", $PassportIdImage, $ApplicationId, $PassportIdImageMimeType)
        profileImage = UploadBinary("Name,Data,ApplicationId,DataMimeType", "ProfileImage", $ProfileImage, $ApplicationId, $ProfileImageMimeType)

        var inform map
        if $member["member_info"] != "" {
            inform = JSONDecode($member["member_info"])
        }
        inform["username"] = $Username
        inform["password"] = Sha256($Password)
        inform["first_name_ar"] = $FirstNameAr
        inform["last_name_ar"] = $LastNameAr
        inform["first_name_en"] = $FirstNameEn
        inform["last_name_en"] = $LastNameEn
        inform["nationality"] = $Nationality
        inform["emirate_number"] = $EmirateNumber
        inform["emirate_id_expiery_date"] = $EmirateIdExpieryDate
        inform["emirate_id_image"] = emirateIdImage
        inform["passport_id"] = $PassportId
        inform["passport_expiery_date"] = $PassportExpieryDate
        inform["passport_id_image"] = passportIdImage
        inform["date_of_birth"] = $DateOfBirth
        inform["profile_image"] = profileImage
        inform["gender"] = $Gender
        inform["email"] = $Email
        inform["mobile"] = $Mobile
        inform["phone"] = $Phone
        inform["fax"] = $Fax
        inform["post_office"] = $PostOffice
        inform["address"] = $Address
        inform["communication"] = $Communication
        inform["language"] = $Language
        inform["status"] = 0 // 0:registrated, 1:rejected, 2:approved
        DBUpdate("members", $key_id, "member_info", inform)

        // managers notification
        var roleId closureType sender int
        roleId = $managerRoleId
        closureType = 2 // multiple
        sender = 2 // from admin?
        var icon header body page string
        icon = "icon-envelope"
        header = "Ajman URP: New user"
        body = $Username
        page = "ajman_user_registration"
        var params map
        params["member_id"] = $key_id
        Notifications_Roles_Send_map("rid,closure_type,sender,icon_name,text_header,text_body,page_name,params_map", roleId, closureType, sender, icon, header, body, page, params)
    }
}