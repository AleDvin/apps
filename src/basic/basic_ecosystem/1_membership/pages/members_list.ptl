Div(Class: content-wrapper){

	SetTitle($membership$)
	Div(breadcrumb){
		Span(Class: text-muted, Body: $membership$)
	}

    If(GetVar(isSearch) == 1){
        SetVar(Name: v_Where, Value: "member_name='#v_Search#'")
    }.Else{
        SetVar(Name: v_Where, Value: "id!=0")
        SetVar(Name: v_Search, Value: "")
    }

    DBFind(Name: members, Source: src_member).Custom(custom_username){
        LinkPage(Page: profile_view, PageParams: "v_member_id=#id#"){
            If(#avatar# != ""){
                Image(Src: "#avatar#", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)
            }
            Span(Class: h5 text-bold, Body: #member_name#)
        }
	}.Custom(custom_member_id){
        Span(Body: Address(#id#))
    }.Where(#v_Where#).Order("member_name")

    Div(Class: panel panel-primary){
        Form(){
            Div(Class: list-group-item){
                Div(Class: row df f-valign){
                    Div(Class: col-md-1 mt-sm text-right){
                        Label(For: Search){
                            Span(Body: LangRes(username))
                        }
                    }
                    Div(Class: col-md-11 mc-sm){
                        Div(Class: input-group){
                            Input(Class: form-control, Type: text, Name: Search, Value: #v_Search#)
                            Div(Class: input-group-btn){
                                Button(Body: Em(Class: fa fa-search), Class: btn btn-default, Page: members_list, PageParams: "isSearch=1,v_Search=Val(Search)")
                            }
                        }
                    }
                }  
            }
            Div(Class: list-group-item){ 
                Table(Source: src_member, Columns: "$username$=custom_username,$id$=id,$member_id$=custom_member_id")
                If(GetVar(isSearch) == 1){
                    Div(Class: text-center){  
                        Button(Body: $view_all$, Class: btn btn-primary, Page: members_list, PageParams: "isSearch=0")
                    }
                }
            }
        }           
    }
	
    DBFind(Name: vde_membership_requests, Source: src_requests).Custom(custom_id){
		If(#status#==0){
			Span(Class: text-normal, Body: #id#)
		}.Else{
			Span(Class: text-muted, Body: #id#)
		}
	}.Custom(custom_comment){
		If(#status#==0){
			Span(Class: text-normal, Body: #comment#)
		}.Else{
			Span(Class: text-muted, Body: #comment#)
		}
	}.Custom(custom_username){
		Image(Src: "#avatar#", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)
		If(#status#==0){
			Span(Class: h5 text-bold, Body: #member_name#)
		}.Else{
			Span(Class: h5 text-bold text-muted, Body: #member_name#)
		}
	}.Custom(custom_member_id){
		If(#status#==0){
			Span(Class: text-normal, Body: Address(#member_id#))
		}.Else{
			Span(Class: text-muted, Body: Address(#member_id#))
		}
    }.Custom(custom_status){
        If(#status#==0){
            Span(Class: text-normal, Body: LangRes(waiting))
        }
        If(#status#==-1){
            Span(Class: text-muted, Body: LangRes(rejected))
        }
	}.Custom(buttons){
		If(#status#==0){
			Div(Class: pull-right){
				Span(){ 
					Button(Class: btn btn-success, Body: Em(Class:fa fa-check) $accept$, Contract: membership_Request_Accept, Params: "v_id=#id#", Page: members_list).Alert(Text: $membership_request_accept$, ConfirmButton: $yes$, CancelButton: $no$, Icon: question)
				}.Style(margin-right: 20px;)
				Button(Class: btn btn-danger, Body: Em(Class:fa fa-close) $reject$, Contract: membership_Request_Reject, Params: "v_id=#id#", Page: members_list).Alert(Text: $membership_request_reject$, ConfirmButton: $yes$, CancelButton: $no$, Icon: question)
			}		
		}
    }.Where("status=0 or status=-1").Order("status desc, id asc")	
	
    Div(Class: panel panel-primary){
        Form(){
			Div(Class: list-group-item text-center){
				Span(Class: h3, Body: LangRes(membership_requests))	
			}
            Div(Class: list-group-item){ 
                Table(Source: src_requests, Columns: "$id$=custom_id,$username$=custom_username,$member_id$=custom_member_id,$comment$=custom_comment,$status$=custom_status,=buttons")
            }
        }           
    }

}