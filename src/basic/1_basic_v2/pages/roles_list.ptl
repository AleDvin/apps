Div(content-wrapper){
    DBFind(Name:applications, Source:src_app).Columns("name,id").Where("name='Basic application'").Vars(app)
    SetTitle($roles$)
    AddToolButton(Title: $create$, Page: roles_create, Icon: icon-plus)

    If(GetVar(search)){
        SetVar(where,"role_name='#search#'")
    }.Else{
        SetVar(where,"id>0").(search,)
    }

    DBFind(Name: roles, Source: src_roles).Custom(_id){
        JsonToSource(rids,#roles_access#)
        If(#deleted# == 0){
            SetVar(style_text,).(style_link,"text-primary")
        }.Else{
            SetVar(style_text,"text-muted").(style_link,"text-muted")
        }
        Span(Class: #style_text#, Body: #id#)
    }.Custom(_creator){
        If(#role_type#==3){
        }.Else{
            LinkPage(Class: #style_link# h5 text-bold, Page: profile_view, PageParams: "v_member_id=#creator.member_id#"){
                Span(Body: #creator.member_name#)
            }
        }
    }.Custom(_name){
        SetVar(Name: img_id, Value: 0)
        DBFind(Name: binaries, Source: src_binaries).Columns("id,data").Where("id=#image_id#").Vars(img)
        LinkPage(Class: #style_link# h5 text-bold, Page: roles_view, PageParams: "v_role_id=#id#"){
            If(#img_id#>0){
                Image(Src: "#img_data#").Style(width: 30px; border: 1px solid #5A5D63; margin-right: 10px;)
                Span(#role_name#)
            }.Else{
                Div(){
                    Span(Em(Class: fa icon-settings fa-2x)).Style(margin-right:10px;)
                    Span(#role_name#)
                }.Style(display:flex; align-items:center;)
            }
        }
    }.Custom(_date){
        Div(#style_text# h6 m0, Body: DateTime(DateTime: #date_created#, Format: "DD.MM.YYYY HH:MI"))
        Div(#style_text# h6 m0, Body: DateTime(DateTime: #date_deleted#, Format: "DD.MM.YYYY HH:MI"))
    }.Custom(_type){
        Span(Class: #style_text#, Body: AppParam(App:#app_id#, Name: roles_types, Index: #role_type#))
    }.Custom(_status){
        If(#deleted# == 0){
            Span(Class: #style_text#, Body: LangRes(active))
        }.Else{
            Span(Class: #style_text#, Body: LangRes(deleted))
        }
    }.Custom(_access){
        If(#creator.member_id#==#key_id#){
            SetVar(access,done)
        }.Else{
            SetVar(access,)
        }
        If(#roles_access#!=""){
            DBFind(roles, src_roles_list).Where("id in (#roles_access#)").Columns("id,role_name").Count(access_count).Order(role_name)
            Div(#style_text#){
                ForList(src_roles_list){
                    If(And(#role_id#==#id#)){
                        SetVar(access,done)
                    }
                    
                    If(#access_count#!=#src_roles_list_index#){
                        Span("#role_name#,",mr-sm)
                    }.Else{
                        Span(#role_name#)
                    }
                }
            }
        }
    }.Custom(_actions){
        Div(text-right button-group){
            If(#access#=="done"){
                Button(Class: fa fa-edit btn btn-default, PageParams: "rid=#id#", Page: roles_create)
                If(And(#deleted#==0,#role_type#!=3)){
                    Button(Class: fa fa-trash btn btn-danger, Contract: Roles_Del, Params: "rid=#id#", Page: roles_list).Alert(Text: $sure_want_delete$, ConfirmButton: $yes$, CancelButton: $no$, Icon: question)
                }.ElseIf(#deleted#==1){
                    Button(Class: fa fa-recycle btn btn-info, Contract: Roles_Restore, Params: "rid=#id#", Page: roles_list)
                }
            }
        }.Style(
            .btn {
                width:50px;
            }
        )
    }.Where(#where#).Order("deleted ASC, id ASC").Columns("id,role_name,role_type,image_id,creator->member_id,creator->member_name,date_created,date_deleted,deleted,roles_access")

    Form(panel panel-primary){
        Div(panel-body){
            Div(row){
                Div(col-md-12){
                    Div(input-group){
                        Div(input-group-addon mt-sm){
                            LangRes(name)
                        }
                        Input(Name: search, Value: #search#)
                        Div(input-group-btn){
                            Button(Body: Em(Class: fa fa-search), Class: btn btn-default, Page: roles_list, PageParams: "search=Val(search)")
                        }
                    }
                }
            }
            Div(table-responsive){
                Table(Source: src_roles, Columns: "$id$=_id,$name$=_name,$type$=_type,$creator$=_creator,$created$ / $deleted$=_date,$status$=_status,$roles_access$=_access,=_actions")
            }
            If(GetVar(search)){
                Div(row){
                    Div(col-md-12 mt-lg){
                        Div(text-center){
                            Button(Body: $view_all$, Class: btn btn-primary, Page: roles_list)
                        }
                    }
                }
            }
        }
    }
}.Style(.inline {display:inline-block;})