DBFind(applications).Columns("name,id").Where("name='Basic application'").Vars(application)
DBFind(roles, src_roles).Columns("role_name,id").Where("deleted=0").Order(id)
If(comment==rid){
    если переданное айди роли больше нуля - значит у нас режим редактирования
    if the passed role ID is greater than zero - then we have edit mode
}
If(GetVar(rid)){
    DBFind(roles).Where("id=#rid#").Vars(rid)
    SetVar(title,$edit_role$)
}.Else{
    SetVar(rid,0).(title,$new_role$)
}
SetTitle(#title#)

DBFind(buffer_data).Where("member_id=#key_id# and key='roles_access'").Vars(buf)
If(#buf_id#>0){
    If(comment==buf_rid_roles){
        формирую объединенный источник привязанных ролей менеджера из буфера и поля 'roles_access'
        form a combined source of the bound managers role from the buffer and field 'roles_access'
    }
    JsonToSource(buf_roles, #buf_value#)
    If(#rid_id#>0){
        JsonToSource(rid_roles, #rid_roles_access#)
        SetVar(comp,"_")
        ForList(buf_roles){
            If(#comp#=="_"){
                SetVar(comp,`"#key#":"#value#"`)
            }.Else{
                SetVar(comp,`"#key#":"#value#",#comp#`)
            }
        }
        ForList(rid_roles){
            If(#comp#=="_"){
                SetVar(comp,`"#key#":"#value#"`)
            }.Else{
                SetVar(comp,`"#key#":"#value#",#comp#`)
            }
        }
        JsonToSource(buf_roles, "{#comp#}")
    }
}

AppParam(App:#application_id#, Name: roles_types, Source: app_roles_types)

If(GetVar(role_name)){}.Else{SetVar(role_name,)}
If(GetVar(role_type)){}.Else{SetVar(role_type,1)}
If(And(#role_name#=="",#rid_id#>0)){
    SetVar(role_name,#rid_role_name#).(role_type,#rid_role_type#)
}
Data(inputs, "Name,Res,Type,Req,Src,Val"){
    role_name,name,input,*,"",#role_name#
    role_type,type,select,*,app_roles_types,#role_type#
    roles_managers,roles_managers,rids,,src_roles,
}

If(comment==image_upload_worked_GOOD){
    когда заработает добавление изображения с обрезкой надо добавить в форму загрузку иконки
    when will you add an image with trimming is necessary to add to the form loading icon
    Add to 'inputs' "icon,icon,image,,,"
}

Div(content-wrapper){
    Div(breadcrumb){
        LinkPage($roles$, roles_list)
        Span(/).Style(margin-right: 10px; margin-left: 10px;)
        Span(Class: text-muted, Body: $new_role$)
    }
    Div(container){
        Div(row){
            Div(col-md-8 col-md-offset-2){
                Form(panel panel-primary){
                    Div(panel-heading){LangRes(new_role)}
                    Div(panel-body){
                        ForList(inputs){
                            Div(row form-group){
                                Div(col-md-3 mt-sm text-right){
                                    Label(For:#Name#){
                                        LangRes(#Res#)
                                        If(#Req#=="*"){
                                            Span(*,text-danger)
                                        }
                                    }
                                }
                                Div(col-md-9 text-left){
                                    If(#Type#==input){
                                        Input(Name: #Name#, Value:#Val#).Validate(minLength:3, maxLength:30)
                                        InputErr(Name: #Name#, minLength: $validate_role_name$, maxLength: $validate_role_name$)
                                    }.ElseIf(#Type#==select){
                                        Select(Name: #Name#, Source: #Src#, NameColumn: name, ValueColumn: id, Value:#Val#)
                                    }.ElseIf(#Type#==image){
                                        ImageInput(Name: icon, Width: 100, Ratio: 1/1)
                                    }.ElseIf(#Type#==rids){
                                        Div(input-group mb-sm){
                                            Select(Name:#Name#, Source:#Src#, NameColumn:role_name, ValueColumn: id)
                                            Div(input-group-btn){
                                                Button(Class: btn btn-default fa fa-plus, Page: roles_create, PageParams:"role_name=Val(role_name),role_type=Val(role_type),rid=#rid#", Contract:buffer_RoleAccessAdd, Params:"Rid=Val(#Name#)")
                                            }
                                        }
                                        ForList(buf_roles){
                                            If(#value#!=""){
                                                Button(Class: btn btn-default mr-sm mb-sm, Page: roles_create, PageParams:"role_name=Val(role_name),role_type=Val(role_type),rid=#rid#", Contract:buffer_RoleAccessRemove, Params:"Rid=#key#"){
                                                    Span(Class: fa fa-remove)
                                                    #value#
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    Div(panel-footer text-right){
                            Button(Body: LangRes(back), Class: btn btn-default, Page: roles_list)
                        If(#rid_id#>0){
                            Button(Body: LangRes(save), Class: btn btn-primary, Page: roles_list, Contract: Roles_Edit, Params: "rids=#buf_value#,rid=#rid#")
                        }.Else{
                            Button(Body: LangRes(create), Class: btn btn-primary, Page: roles_list, Contract: Roles_Create, Params: "rids=#buf_value#").Alert(Text: $want_create_new_role$, ConfirmButton: $yes$, CancelButton: $no$, Icon: question)
                        }

                    }
                }
            }
        }
    }
}