SetVar(template_id, EcosysParam(voting_sysparams_template_id))
SetTitle($voting$)

Div(content-wrapper){
    Div(breadcrumb){
        LinkPage($system_params$, sysparams_list)
        Span(/).Style(margin-right: 10px; margin-left: 10px;)
        Span(Class: text-muted, Body: $voting$)
    }
    
    If(And(#template_id#>0,#param_index#>0,#param_name#!="")){
        Div(row){
            Div(col-sm-8 col-sm-offset-2 col-lg-6 col-lg-offset-3){
                If(#param_name#=="full_nodes"){
                    Form(panel panel-primary){
                        Input(Name: Start, Type: hidden, Value: Now("YYYY-MM-DD"))
                        Input(Name: End, Type: hidden, Value: Now("YYYY-MM-DD", 21 days))
                        Input(Name: StartTime, Type: hidden, Value: Now("HH:MI", +5 minute))
                        Input(Name: EndTime, Type: hidden, Value: Now("HH:MI", +5 minute))
                        Input(Name: TemplateId, Type: hidden, Value: #template_id#)
                        Div(panel-heading text-center h3){
                            Span(#param_name#).Style(text-transform:uppercase;): Span($add$ $new_value$).Style(text-transform:lowercase;)
                        }
                        Data(new_node_form, "name,type,placeholder,value"){
                            TcpAddress,text,tcp_address,""
                            ApiAddress,text,api_address,""
                            KeyId,number,key_id,#key_id#
                            PubKey,text,public_key,""
                        }
                        Div(panel-body){
                            ForList(new_node_form){
                                Div(row form-group){
                                    Div(col-md-3 text-right){
                                        Label(For: #name#){LangRes(#name#)}
                                    }
                                    Div(col-md-9 text-left){
                                        Input(Name: #name#, Placeholder: #placeholder#, Type: #type#, Value: #value#)
                                    }
                                }
                            }
                        }
                        Div(panel-footer text-right){
                            Button(Body: LangRes(back), Class: btn btn-default, Page: sysparams_list)
                            Button(Body: LangRes(voting), Class: btn btn-primary, Contract: sysparams_StartNodeAdd, Page: voting_list)
                        }
                    }
                    EcosysParam(Name:full_nodes_keys, Source:src_keys)
                    ForList(Source:src_catalog){
                        If(#name#=="key_id"){
                            SetVar(node_owner, 1)
                        }
                    }
                    
                    If(#node_owner#==1){
                        Form(panel panel-primary){
                            Div(panel-heading text-center h3){$delete_node$}
                            Div(panel-body text-center){$delete_node_desc$}
                            Div(panel-footer text-right){
                                Button(Body: LangRes(delete), Class: btn btn-danger, Page: sysparams_list, Contract: sysparams_RemoveNode)
                            }
                        }
                    }
                    If("" != SysParam(full_nodes)){
                        Div(panel panel-primary){
                            Div(panel-heading text-center h3){full_nodes}
                            Div(panel-body text-center){
                                Div(col-sm-12 text-center){
                                    SysParam(full_nodes)
                                }.Style(overflow-x:hidden)
                            }
                        }
                    }
                }.Else{
                    Form(panel panel-primary){
                        Input(Name: Start, Type: hidden, Value: Now("YYYY-MM-DD"))
                        Input(Name: End, Type: hidden, Value: Now("YYYY-MM-DD", 21 days))
                        Input(Name: StartTime, Type: hidden, Value: Now("HH:MI", +2 minute))
                        Input(Name: EndTime, Type: hidden, Value: Now("HH:MI", +2 minute))
                        Input(Name: TemplateId, Type: hidden, Value: #template_id#)
                        Div(panel-heading text-center h3){#param_name#}
                        Div(panel-body){
                            Div(form-group){
                                Div(row){
                                    Div(col-md-3 mt-sm text-right){
                                        Label(For: NewValue){LangRes(new_value)}
                                    }
                                    Div(col-md-9 mc-sm text-left){
                                        Input(Name: NewValue, Value: "SysParam(#param_name#)", Type: textarea)
                                    }
                                }
                            }
                        }
                        Div(panel-footer text-right){
                            Button(Body: LangRes(back), Class: btn btn-default, Page: sysparams_list)
                            Button(Body: LangRes(voting), Class: btn btn-primary, Contract: voting_TemplateRun, Params: "ColumnName=#param_name#", Page: voting_list)
                        }
                    }
                }
            }
        }
    }.Else{
        If(#param_index#>0){}.Else{
            Div(col-md-12 alert alert-danger text-center){
                Div(){LangRes(attention)}
            }
        }
        If(#template_id#>0){}.Else{
            Div(col-md-12 alert alert-danger text-center){
                Div(){LangRes(voting_template_not_found)}
            }
        }
    }
}