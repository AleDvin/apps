contract sysparams_AcceptValidator{
    data{
        VotingTemplateId string
        KeyId string
        VotingId string
    }
    func conditions{
        var templateId int
        templateId = Int(EcosysParam("voting_validators_template_id"))
        
        var params map
        params = DBFind("voting_templates").Where("id=?", templateId).Row()
        if params{
            warning "Voting params not found"
        }

        $Id = Int($KeyId)
        var candidateId, oldRoleId, roleId int
        oldRoleId = 2 // Candidate for validators
        roleId = 3 // Validator
        
        candidateId = DBFind("sysparams_candidate").Where("id=?",$Id).One("candidate_key_id")
        if candidateId == nil{
            warning "Candidate key id not found"
        }
        $assignedRow = DBFind("roles_assign").Where("delete=0 and id=? and member_id=?", oldRoleId, candidateId).Row()
        
        $role = DBFind("roles_list").Where("role_id=? and delete=0", roleId).Row()
        if !$role {
            warning "Validator role not found"
        }
    }
    
    func action{
        var this_contract string
        this_contract = "sysparams_AcceptValidator"
        
        if $assignedRow {
            Roles_Unassign("row_id,origin_contract", Int($assignedRow["id"]), this_contract)
        }
        Roles_Assign("role_id,member_id,origin_contract", Int($role["id"]), $Id, this_contract)
    }
}