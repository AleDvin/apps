Div(content-wrapper){
    SetTitle($sysparams_candidates_list$)
    Div(breadcrumb){
        Span(Class: text-muted, Body: $sysparams_candidates_list$)
    }
    
    DBFind(Name:sysparams_candidate, Source: src_candidates).Where("deleted=0").Custom(buttons){
        DBFind(Name: voting_instances, Source: src_vi).Where("name='Voting for Validator'").Where("contract_accept_params='VotingTemplateId->1;KeyId->#candidate_key_id#'").Where("delete=0").Vars(vi)
        
        
        If(#vi_id#>0){}.Else{
            Form(btn-group){
                Input(Name:KeyId, Type: hidden, Value: #candidate_key_id#)
                Input(Name:TemplateId, Type: hidden, Value: 3)
                Input(Name:Start, Type: hidden, Value: Now("YYYY-MM-DD", +1 days))
                Input(Name:StartTime, Type: hidden, Value: Now("HH:MI"))
                Input(Name:End, Type: hidden, Value: Now("YYYY-MM-DD", +14 days))
                Input(Name:EndTime, Type: hidden, Value: Now("HH:MI"))
                Button(Body: $voting_start$, Contract: voting_TemplateRun, Page: voting_list, Class: btn btn-success)
            }
        }
    }.Custom(_date){
        DateTime(DateTime: #date_created#, Format: YYYY-MM-DD HH:MI)
    }
    
    Div(row){
        Div(col-md-12){
            Div(panel panel-primary){
                Div(table-responsive){
                    Table(Source: src_candidates, Columns: "$id$=id,$host_ip$=host_ip,$commission_address$=commission_address,$description_equipment$=description,$comment$=comment,$date_created$=_date,=buttons")
                }
                Div(panel-footer text-right){
                    Button(Body: LangRes(add), Class: btn btn-primary, Page: sysparams_candidate_validators_form)
                }
            }
        }
    }
}