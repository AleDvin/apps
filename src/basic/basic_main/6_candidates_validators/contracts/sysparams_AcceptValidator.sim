contract sysparams_AcceptValidator{
    data{
        VotingTemplateId string
        KeyId string
        VotingId string
    }
    func conditions{
        $origin_contract = "sysparams_AcceptValidator"
        $Id = Int($KeyId)
        
        $votingParams = DBFind("voting_templates").Where("id=?", $VotingTemplateId).Row()
        if !$votingParams{
            warning "Voting params not found"
        }
        
        $oldRoleName = $votingParams["candidates"]
        $roleName = $votingParams["subject"]
        
        $oldRoleId = DBFind("roles_list").Where("role_name=? and delete=0", $oldRoleName).One("id")
        $roleId = DBFind("roles_list").Where("role_name=? and delete=0", $roleName).One("id")
    }
    
    func action{
        // reassign old role
        $raId = DBFind("roles_assign").Where("delete=0 and role_id=? and member_id=?", $oldRoleId, $Id).One("id")
        if $raId !=nil {
            Roles_Unassign("row_id,origin_contract", Int($raId), $origin_contract)
        }
        // assign new role
        Roles_Assign("role_id,member_id,origin_contract", Int($roleId), $Id, $origin_contract)
    }
}