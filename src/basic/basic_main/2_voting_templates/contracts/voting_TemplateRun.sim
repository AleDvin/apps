contract voting_TemplateRun{
    data{
        TemplateId int
        Start string "date"
        End string "date"
        
        EndTime string "date,optional"
        StartTime string "date,optional"
        KeyId int "optional"
        TableWritten string "optional"
        RowId string "optional"
        ColumnName string "optional"
        NewValue string "optional"
        TextDocument string "optional"
    }
    func checkInput(value, name string){
        if Size(value) == 0 || value == "NULL" {
            warning Sprintf("%q not found", name)
        }
    }
    
    conditions{
        $template = DBFind("voting_templates").Where("id=?",$TemplateId).Row()
        if !$template{
            warning "Voting template not found"
        }
        if $KeyId != 0{
            $keyFind = DBFind("keys").Where("id=?", $KeyId).Row()
            if !$keyFind{
                warning "Key id not found"
            }
        }
        if $StartTime == ""{
            $StartTime = "00:00"
        }
        if $EndTime == ""{
            $EndTime = "23:59"
        }
        
        $initContract = $template["init_contract"]
        if $initContract != "" && $initContract != "NULL"{
            var initParam map
            initParam["KeyId"] = $KeyId
            CallContract($initContract, initParam)
        }
        
        $voters = $template["voters"]
        $candidates = $template["candidates"]
        $votingName = $template["title"]
        $volume = Int($template["volume"])
        $quorum = Int($template["quorum"])
        $voting = Int($template["type_voting"])
        $participants = Int($template["type_participants"])
        $decision = Int($template["type_decision"])
        $vacancies = Int($template["vacancies"])
        
        $desc = Sprintf("%v [template #%v]", $votingName, $TemplateId)
        
        $contractAccept = $template["contract_accept"]
        if $contractAccept == "NULL"{
            $contractAccept = ""
        }
        $acceptParams = $template["accept_params"]
        if $acceptParams == "NULL"{
            $acceptParams = ""
        }
        
        $contractReject = $template["contract_reject"]
        if $contractReject == "NULL"{
            $contractReject = ""
        }
        $rejectParams = $template["reject_params"]
        if $rejectParams == "NULL"{
            $rejectParams = ""
        }
        
        if $decision == 1 || $decision == 2 {
            // ролевые кандидаты
            checkInput($candidates, "Candidate role")
            var candidate map
            candidate = DBFind("roles_list").Where("id=? and delete=0", $candidates).Row()
            if !candidate {
                warning Sprintf("Candidates role (%v) not found", candidate["role_name"])
            }
            $candidateId = Int(candidate["id"])
        }

        if $decision == 3 {
            // утверждение документа
            checkInput($TextDocument, "TextDocument")
        }
        
        if $decision == 4 {
            // формальное решение
            checkInput($TableWritten, "TableWritten")
            checkInput($RowId, "RowId")
            checkInput($ColumnName, "ColumnName")
            checkInput($NewValue, "NewValue")
        }
        $isCreated = DBFind("voting_instances").Where("name=? and description=? and delete=0", $votingName, $desc).Row()
        if $isCreated{
            // info "Voting already created" // проверка дубликатов голосования
        }
        
        
        if $participants == 3 {
            // если тип участников "по роли" - проверяю роль
            var role map
            role = DBFind("roles_list").Where("id=? and delete=0", $voters).Row()
            if !role {
                warning Sprintf("Voters role (%v) not found", role["role_name"])
            }
            $roleId = Int(role["id"])
        }
    }
    
    action{
        
        $voting_id = 0 // должно установиться в voting_CreateNew
        voting_CreateNew("voting_name,type_voting,description,type_participants,type_decision,now_date,start_time,start_date,end_date,end_time,volume,quorum", $votingName, $voting, $desc, $participants, $decision, $Start, $StartTime, $Start, $End, $EndTime, $volume, $quorum)
        if $voting_id == 0 {
            // если не смогло установиться в voting_CreateNew (когда/если будет исправлена передача глобальных переменных)
            $voting_id = DBFind("voting_instances").Where("voting_name=? and start_date=?", $votingName, $Start).One("id")
            $voting_id = Int($voting_id)
        }
        // дефолтные аргументы для контрактов
        $defaultParams = Sprintf("VotingTemplateId->%v;KeyId->%v;VotingId->%v", $TemplateId, $KeyId, $voting_id)
        if Size($acceptParams) == 0{
            $acceptParams = $defaultParams
        }
        if Size($rejectParams) == 0{
            $rejectParams = $defaultParams
        }
        
        if $decision == 1 || $decision == 2{
            // 1. Ролевые кандидаты с регистрацией участников по запросу
            // 2. Ролевые кандидаты с ручной регистрацией участников
            voting_SubjectCandidates("votingID,memberID", $voting_id, $KeyId)
            voting_SubjectSettings("votingID,roleID,vacancies,contract_accept,accept_params,contract_reject,reject_params", $voting_id, $candidateId, $vacancies, $contractAccept, $acceptParams, $contractReject,$rejectParams)
        }
        if $decision == 3 {
            // Утверждение документа
            voting_SubjectDocument("votingID,text_document,contract_accept,accept_params,contract_reject,reject_params", $voting_id,$TextDocument, $contractAccept, $acceptParams, $contractReject, $rejectParams)
        }
        
        if $decision == 4 {
            // Формальное решение
            voting_SubjectFormal("votingID,description,table_to_written,row_id,column_name,written_value,contract_accept,accept_params,contract_reject,reject_params",$voting_id, $desc, $TableWritten, $RowId, $ColumnName, $NewValue, $contractAccept, $acceptParams, $contractReject, $rejectParams)
            
        }
        
        if $decision == 5 {
            // Выполнение контракта
            voting_SubjectContract("votingID,contract_accept,accept_params,contract_reject,reject_params",$voting_id,$contractAccept, $acceptParams, $contractReject, $rejectParams)
        }
        if $participants == 3 {
            // участники: "по роли"
            voting_Invite("votingID,var_id", $voting_id, $roleId)
        }
        if $participants == 1 {
            // если участники "все", инвайт уже произошел  в "voting_CreateNew"
        }
    }
}   