contract voting_TemplateRun{
    data{
        KeyId int "optional"
        TemplateId int
        Start string "date"
        StartTime string "date,optional"
        End string "date"
        EndTime string "date,optional"
    }
    
    conditions{
        $template = DBFind("voting_templates").WhereId($TemplateId).Row()
        if !$template{
            warning "Voting template not found"
        }
        if $KeyId != 0{
            $keyFind = DBFind("keys").Where("id=?", $KeyId).Row()
            if !$keyFind{
                warning "Key id not found"
            }
        }
        if $StartTime == ""{
            $StartTime = "00:00"
        }
        if $EndTime == ""{
            $EndTime = "23:59"
        }
        
        $initContract = $template["init_contract"]
        if $initContract != "" && $initContract != "NULL"{
            var initParam map
            initParam["KeyId"] = $KeyId
            CallContract($condition, initParam)
        }
        
        $votersRoleName = $template["voters"]
        $votingName = $template["title"]
        $volume = Int($template["volume"])
        $quorum = Int($template["quorum"])
        $voting = Int($template["type_voting"])
        $participants = Int($template["type_participants"])
        $decision = Int($template["type_decision"])
        $vacancies = Int($template["vacancies"])
        
        $desc = Sprintf("%v [template #%v]", $votingName, $TemplateId)
        
        $contractAccept = $template["contract_accept"]
        if $contractAccept == "NULL"{
            $contractAccept = ""
        }
        $acceptParams = $template["accept_params"]
        if $acceptParams == "NULL"{
            $acceptParams = ""
        }
        
        $contractReject = $template["contract_reject"]
        if $contractReject == "NULL"{
            $contractReject = ""
        }
        $rejectParams = $template["reject_params"]
        if $rejectParams == "NULL"{
            $rejectParams = ""
        }
        
        
        $isCreated = DBFind("voting_instances").Where("name=? and description=? and delete=0", $votingName, $desc).Row()
        if $isCreated{
            // info "Voting already created" // проверка дубликатов голосования
        }
        
        $roleId = DBFind("roles_list").Where("role_name=? and delete=0", $votersRoleName).One("id")
        if $roleId == nil {
            warning Sprintf("Voters (%v) not found", $votersRoleName)
        }
    }
    
    action{
        
        $voting_id = 0 // will be set in voting_CreateNew
        voting_CreateNew("voting_name,type_voting,description,type_participants,type_decision,now_date,start_time,start_date,end_date,end_time,volume,quorum", $votingName, $voting, $desc, $participants, $decision, $Start, $StartTime, $Start, $End, $EndTime, $volume, $quorum)
        if $voting_id == 0 {
            $voting_id = DBFind("voting_instances").Where("voting_name=? and start_date=?", $votingName, $Start).One("id")
            $voting_id = Int($voting_id)
        }
        $defaultParams = Sprintf("VotingTemplateId->%v;KeyId->%v;VotingId->%v", $TemplateId, $KeyId, $voting_id)
        if Size($acceptParams) == 0{
            $acceptParams = $defaultParams
        }
        if Size($rejectParams) == 0{
            $rejectParams = $defaultParams
        }
        if $decision == 1 || $decision == 2{
            // Ролевые кандидаты с регистрацией участников по запросу
            // Ролевые кандидаты с ручной регистрацией участников
            voting_SubjectCandidates("votingID,memberID", $voting_id, $KeyId)
            voting_SubjectSettings("votingID,roleID,vacancies,contract_accept,accept_params,contract_reject,reject_params", $voting_id, $roleId, $vacancies, $contractAccept, $acceptParams, $contractReject,$rejectParams)
        }
        if $decision == 3 {
            // TODO: Утверждение документа
            voting_SubjectDocument()
        }    
        if $decision == 4 {
            // TODO: Формальное решение
            voting_SubjectFormal(voting_SubjectFormal {"votingID,description,table_to_written,row_id,column_name,written_value,contract_reject,contract_accept",$voting_id,$desc,)
            
        }
        if $decision == 5 {
            // Выполнение контракта
            voting_SubjectContract("votingID,contract_accept,contract_accept_params,contract_reject,contract_reject_params",$voting_id,$contractAccept, $acceptParams, $contractReject,$rejectParams)
        }else{
        }
        voting_Invite("votingID,var_id", $voting_id, $roleId)
    }
}