SetTitle($voting_start$)
Div(content-wrapper){
    Div(breadcrumb){
        LinkPage($voting_templates$, voting_templates)
        Span(/).Style(margin-right: 10px; margin-left: 10px;)
        Span(Class: text-muted, Body: $voting_start$)
    }
    
    If(#TemplateId#>0){
        DBFind(Name:voting_templates, Source: templates).Where(id=#TemplateId#).Vars(template)
        Data(inputs, "res,value"){
            LangRes(name),#template_title#
            LangRes(participants),"EcosysParam(Name: type_voting_participants, Index: #template_type_participants#)"
            LangRes(voting_type),"EcosysParam(Name: type_voting, Index: #template_type_voting#)"
            LangRes(decision),"EcosysParam(Name: type_voting_decisions, Index: #template_type_decision#)"
            LangRes(voting_volume),#template_volume#
            LangRes(voting_quorum),#template_quorum#
            LangRes(voting_subject),#template_subject#
            LangRes(voters),#template_voters#
            LangRes(vacancies),#template_vacancies#
            LangRes(init_contract),#template_init_contract#
            LangRes(voting_contract_accept),"#template_contract_accept#(#template_accept_params#)"
            LangRes(voting_contract_reject),"#template_contract_reject#(#template_reject_params#)"
            LangRes(date_start),"Input(Name:Start, Type: date)"
            LangRes(date_end),"Input(Name:End, Type: date)"
        }
        Div(row){
            Div(col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3){
                Form(panel panel-primary){
                    Div(panel-heading){LangRes(voting_start)}
                    Div(panel-body){
                        ForList(inputs){
                            Div(form-group){
                                Div(row){
                                    Div(col-md-4 text-right){
                                        Strong(#res#)
                                    }
                                    Div(col-md-8 text-left){
                                        If(#value#!="()"){
                                            #value#
                                        }
                                    }
                                }
                            }
                        }
                    }
                    Input(Name:StartTime, Type: hidden, Value: Now("HH:MI", 15 minutes))
                    Div(panel-footer){
                        Div(text-left){
                            Button(Body: LangRes(copy), Class: btn btn-default, Page: voting_template_create, PageParams: "TemplateId=#TemplateId#")
                        }
                        Div(text-right){
                            Button(Body: LangRes(back), Class: btn btn-default, Page: voting_templates)
                            Button(Body: LangRes(voting_start), Class: btn btn-primary, Page: voting_list, Contract: voting_TemplateRun, Params: "TemplateId=#TemplateId#")
                        }
                    }
                }
            }
        }
    }.Else{
        Div(col-md-12 alert alert-danger text-center){
            LangRes(attention)
        }
    }
}