SetTitle($voting_start$)
Div(content-wrapper){
    Div(breadcrumb){
        LinkPage($voting_templates$, voting_templates)
        Span(/).Style(margin-right: 10px; margin-left: 10px;)
        Span(Class: text-muted, Body: $voting_start$)
    }
    
    If(#TemplateId#>0){
        DBFind(Name:voting_templates, Source: templates).Where(id=#TemplateId#).Vars(template)
        If(GetVar(template_voters)){
            DBFind(Name:roles_list, Source: src_roles).Columns("role_name").Where("id=#template_voters#").Vars(vid)
            SetVar(v_role, #vid_role_name#)
        }.Else{
            SetVar(v_role, "")
        }
        
        If(GetVar(template_candidates)){
            DBFind(Name:roles_list, Source: src_roles).Columns("role_name").Where("id=#template_candidates#").Vars(cid)
            SetVar(c_role, #cid_role_name#)
        }.Else{
            SetVar(c_role, "")
        }
        Data(inputs, "res,value"){
            name,#template_title#
            participants,"EcosysParam(Name: type_voting_participants, Index: #template_type_participants#)"
            voting_type,"EcosysParam(Name: type_voting, Index: #template_type_voting#)"
            decision,"EcosysParam(Name: type_voting_decisions, Index: #template_type_decision#)"
            voting_volume,#template_volume#
            voting_quorum,#template_quorum#
            voting_subject,#template_subject#
            voters,#v_role#
            candidates,#c_role#
            vacancies,#template_vacancies#
            init_contract,#template_init_contract#
            voting_contract_accept,"#template_contract_accept#(#template_accept_params#)"
            voting_contract_reject,"#template_contract_reject#(#template_reject_params#)"
            date_start,"Input(Name:Start, Type: date)"
            date_end,"Input(Name:End, Type: date)"
        }
        
        If(#template_type_decision#==3){
            Data(decision_inputs, Columns: "name,type,res,star,value,control"){
                TextDocument,textarea,text_document,*,"",textarea
            }
        }.Else{
            If(#template_type_decision#==4){
                Data(decision_inputs, Columns: "name,type,res,star,value,control"){
                    TableWritten,text,table_to_written,*,"",input
                    RowId,number,row_id,*,"",input
                    ColumnName,text,column_name,*,"",input
                    NewValue,text,written_value,*,"",input
                }
            }.Else{
                Data(decision_inputs, Columns: "name,type,res,star,value,control"){}
            }
        }
        
        Div(row){
            Div(col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3){
                Form(panel panel-primary){
                    Div(panel-heading){LangRes(voting_start)}
                    Div(panel-body){
                        ForList(inputs){
                            Div(row form-group){
                                Div(col-md-4 text-right){
                                    Strong(LangRes(#res#))
                                }
                                Div(col-md-8 text-left){
                                    If(#value#!="()"){
                                        #value#
                                    }
                                }
                            }
                        }
                        ForList(decision_inputs){
                            Div(row form-group){
                                If(#control#!="textarea"){
                                    Div(col-md-4 mt-sm text-right){
                                        Label(For: #name#){
                                            LangRes(#res#)
                                            If(#star#=="*"){
                                                Span(Class: text-danger, Body:*)
                                            }
                                        }
                                    }
                                    Div(col-md-8 text-left){
                                        If(#control#=="input"){
                                            Input(Name: #name#, Value: #value#, Type: #type#)
                                        }
                                    }
                                }
                                If(#control#=="textarea"){
                                    Div(col-md-12){
                                        Label(For: #name#){LangRes(#res#)}
                                        Input(Name: #name#, Type: textarea, Value: #value#)
                                    }
                                }
                            }
                        }
                    }
                    Input(Name:StartTime, Type: hidden, Value: Now("HH:MI", 15 minutes))
                    Div(panel-footer){
                        Div(text-left){
                            Button(Body: LangRes(copy), Class: btn btn-default, Page: voting_template_create, PageParams: "TemplateId=#TemplateId#")
                        }
                        Div(text-right){
                            Button(Body: LangRes(back), Class: btn btn-default, Page: voting_templates)
                            Button(Body: LangRes(voting_start), Class: btn btn-primary, Page: voting_list, Contract: voting_TemplateRun, Params: "TemplateId=#TemplateId#")
                        }
                    }
                }
            }
        }
    }.Else{
        Div(col-md-12 alert alert-danger text-center){
            LangRes(attention)
        }
    }
}