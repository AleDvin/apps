Div(content-wrapper){
    
    SetTitle($template_create$)
    Div(Class: breadcrumb){
        LinkPage($voting_templates$, voting_templates)
        Span(/).Style(margin-right: 10px; margin-left: 10px;)
        Span(Class: text-muted, Body: $template_create$)
    }
    
    If(#TemplateId#>0){
        DBFind(Name:voting_templates, Source: templates).Where(id=#TemplateId#).Vars(template)
        SetVar(title, #template_title#)
        SetVar(typepart, #template_type_participants#)
        SetVar(typevoting, #template_type_voting#)
        SetVar(typedec, #template_type_decision#)
        SetVar(volume, #template_volume#)
        SetVar(subj, #template_subject#)
        SetVar(quorum, #template_quorum#)
        SetVar(voters, #template_voters#)
        SetVar(vacancies, #template_vacancies#)
        SetVar(contract_init, #template_init_contract#)
        SetVar(contract_accept, #template_contract_accept#)
        SetVar(accept_params, #template_accept_params#)
        SetVar(contract_reject, #template_contract_reject#)
        SetVar(reject_params, #template_reject_params#)
        
    }.Else{
        SetVar(template_id, 0)
        SetVar(title, New voting)
        SetVar(typepart, 0)
        SetVar(typevoting, 0)
        If(#TypeDecision#>0){
            SetVar(typedec, #TypeDecision#)
        }.Else{
            SetVar(typedec, 0)
        }
        SetVar(volume, 50)
        SetVar(quorum, 50)
        SetVar(subj, "")
        SetVar(voters, "")
        SetVar(vacancies, 1)
        SetVar(contract_init, "")
        SetVar(contract_accept, "")
        SetVar(accept_params, "")
        SetVar(contract_reject, "")
        SetVar(reject_params, "")
        
    }
    
    EcosysParam(Name: type_voting_participants, Source: src_typepart)
    EcosysParam(Name: type_voting, Source: src_typevoting)
    EcosysParam(Name: type_voting_decisions, Source: src_typedec)
    If(Or(#TypeDecision#>0,#typedec#>0)){
        Data(inputs, Columns: "name,type,res,star,value,control,src,desc"){
            Title,text,name,*,#title#,input,"",""
            TypeParticipants,text,participants,*,#typepart#,select,src_typepart,""
            TypeVoting,text,voting_type,*,#typevoting#,select,src_typevoting,""
            TypeDecision,text,decision,*,#typedec#,disabled,"EcosysParam(Name: type_voting_decisions, Index: #typedec#)",""
            Volume,number,voting_volume,*,#volume#,validate,"",$voting_volume_desc$
            Quorum,number,voting_quorum,*,#quorum#,validate,"",$voting_quorum_desc$
            Subject,text,voting_subject,*,#subj#,input,"",""
            Voters,text,voters,*,#voters#,input,"",""
            Vacancies,number,vacancies,"",#vacancies#,input,"",""
            InitContract,text,voting_init_contract,"",#contract_init#,input,"",$voting_init_contract_desc$
            ContractAccept,text,voting_contract_accept,"",#contract_accept#,contract,ParamsAccept,#accept_params#
            ContractReject,text,voting_contract_reject,"",#contract_reject#,contract,ParamsReject,#reject_params#
        }
    }.Else{
        Data(inputs, Columns: "name,type,res,star,value,control,src,desc"){
            TypeDecision,text,decision,*,#typedec#,radio,src_typedec,""
        }
    }
    Div(row){
        Div(col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3){
            Form(panel panel-primary){
                Div(panel-heading){LangRes(new_template)}
                Div(panel-body){
                    ForList(inputs){
                        Div(row form-group){
                            Div(col-md-4 mt-sm text-right){
                                Label(For: #name#){LangRes(#res#)}
                                If(#star#=="*"){
                                    Span(Class: text-danger, Body:*)
                                }
                            }
                            Div(col-md-8 text-left){
                                If(#control#=="select"){
                                    Select(Name: #name#, Source: #src#, NameColumn: name, ValueColumn: id, Value: #value#)
                                }
                                If(#control#=="disabled"){
                                    #src#
                                    Input(Name: #name#, Type: hidden, Value: #value#)
                                }
                                If(#control#=="input"){
                                    Input(Name: #name#, Value: #value#, Type: #type#)
                                }
                                If(#control#=="validate"){
                                    Input(Name: #name#, Type: #type#, Value: #value#).Validate(minLength: 1)
                                    InputErr(Name: #name#, minLength: Please enter #name#)
                                }
                                If(#control#=="contract"){
                                    Div(row){
                                        Div(col-md-6){
                                            Input(Name: #name#, Type: #type#, Placeholder: $contract$, Value: #value#)
                                        }
                                        Div(col-md-6){
                                            Input(Name: #src#, Type: #type#, Placeholder: $arguments$, Value: #desc#)
                                        }
                                    }
                                }
                                If(#control#=="radio"){
                                    RadioGroup(Name: #name#, Value: #value#, Source: #src#, ValueColumn: id, NameColumn: name)
                                }
                                If(#desc#!=""){
                                    P(Class: m0 text-muted, Body: #desc#)
                                }
                            }
                        }
                    }
                }
                
                Div(panel-footer text-right){
                    If(Or(#TypeDecision#>0,#typedec#>0)){
                        Button(Body: LangRes(back), Class: btn btn-default, Page: voting_template_create, PageParams: "TemplateId=#TemplateId#")
                        Button(Body: LangRes(create), Class: btn btn-primary, Page: voting_templates, Contract: voting_TemplateStore)
                    }.Else{
                        Button(Body: LangRes(back), Class: btn btn-default, Page: voting_templates)
                        Button(Body: LangRes(next), Class: btn btn-primary, Page: voting_template_create, PageParams: "TemplateId=#TemplateId#,TypeDecision=Val(TypeDecision)")
                    }
                }
            }
        }
    }
}