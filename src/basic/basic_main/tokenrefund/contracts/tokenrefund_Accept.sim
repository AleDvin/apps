contract tokenrefund_Accept{
    data{
        Id string
    }
    
    func refundAmount(victimId, attackerId, amount string){
        TokensTransfer("SenderId,RecipientId,Amount", attackerId, victimId, amount)
        Debug("Value", Sprintf("ВОЗВРАТ ТОКЕНОВ (%v: %v => %v)", amount, attackerId, victimId))
    }
    func unblockAccounts(victimId, attackerId string){
        //todo: РАЗБЛОКИРОВКА АККАУНТОВ
        Debug("Value", Sprintf("РАЗБЛОКИРОВКА АККАУНТОВ (%v, %v)", victimId, attackerId))
    }
    
    conditions{
        Debug("Value","tokenrefund_Accept")
        $tokenrefund = DBFind("tokenrefund").Where("id=?", $Id).Row()
        if !$tokenrefund{
            Debug("Value", "tokenrefund не найден")
            return
        }
    }
    
    action{
        unblockAccounts($tokenrefund["victim_key_id"],$tokenrefund["attacker_key_id"])
        refundAmount($tokenrefund["victim_key_id"],$tokenrefund["attacker_key_id"],$tokenrefund["amount"])
        // статус 3: закрыто; результат 2: токены возвращены
        DBUpdate("tokenrefund", Int($tokenrefund["id"]), "status,result", 3,2)
    }
}