contract voting_SubjectContract {
  data {
    votingID int
    
    contract_reject string
    contract_accept string
    reject_params string "optional"
    accept_params string "optional"
  }
  
  conditions {
    $voting_map = DBFind("voting_instances").Where("id=? and startdate > now()", $votingID).Row()
    if ($voting_map["id"] == nil){
      warning "Voting already started. Can not edit document"
    }
    if ((Int($voting_map["flag_fulldata"]) == 1) && (Int($voting_map["type_voting"]) == 2) ){
      warning "This vote is a system. Change settings not allowed"
    }
  }
  
  action {
    $subject_id = DBFind("voting_subject").Where("voting_id = $", $votingID).One("id")
    if ($subject_id != nil){
      DBUpdate(`voting_subject`, Int($subject_id), `contract_accept,contract_reject,contract_accept_params,contract_reject_params`, $contract_accept, $contract_reject, $accept_params, $reject_params)
    } else {
      DBInsert(`voting_subject`, `voting_id,contract_accept,contract_reject,contract_accept_params,contract_reject_params`, $votingID, $contract_accept, $contract_reject, $accept_params, $reject_params)
    }
    
    voting_SubjectCheckFulldata("votingID", $votingID)
  }
}