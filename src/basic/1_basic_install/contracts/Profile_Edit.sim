contract Profile_Edit {
    data {
        member_name string
        member_image string "image"
        information string "optional"
    }
    
    conditions {
        $member_map = DBFind("members").Where("id = $", $key_id).Row()
        
        if !$member_map {
            // check member_name
            $member_id = DBFind("members").Where("member_name = $", $member_name).One("id")
            if $member_id {
                warning "This member name is busy. Enter another member name, please"
            }
            
            if Size($member_image) == 0 {
                warning "Avatar was not received"
            }
        }
    }
    
    action {
        var imgName string
        var appId, imageId int
        var memberInfo map
        imgName = "avatar"

        if Size($member_image) > 0 {
            UploadBinary("Name,Data,AppID,MemberID", imgName, $member_image, 0, $key_id)
            imageId = Int(DBFind("binaries").Where("name=? and app_id=? and member_id=?",imgName, appId, $key_id).One("id"))
        }
        if $member_map {
            memberInfo = JSONToMap($member_map["member_info"])
            memberInfo["information"] = $information
            if imageId > 0{
                DBUpdate("members", $key_id, "image_id,member_info", imageId, memberInfo)
            }else{
                DBUpdate("members", $key_id, "member_info", memberInfo)
            }
        } else {
            memberInfo["information"] = $information
            DBInsert("members", "id,member_name,image_id,member_info", $key_id, $member_name, imageId, memberInfo)
        }
    }
}