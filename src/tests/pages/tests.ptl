SetVar(now, Now("YYYY-MM-DD HH:MI:SS"))
Div(content-wrapper){
    Div(row){
        Div(col-sm-10 col-sm-offset-1 col-lg-8 col-lg-offset-2){
            Form(panel panel-default){
                Div(panel-heading text-right){
                    Button(Body: Run contracts tests, Contract: tests_Run, Class: btn btn-primary, Page: tests, PageParams: "date=#now#", Params: "Date=#now#")
                }
                Div(panel-body){
                    If(GetVar(date)){
                        Div(h3){Contract operation tests, DateTime(#date#)}
                        DBFind(Name: tests, Source: src).Where("date='#date#'").Order("id desc")
                        Div(form-group row){
                            Div(col-sm-2 text-center){details}
                            Div(col-sm-10){
                                Div(col-sm-10 text-center){case}
                                Div(col-sm-2){result}
                            }
                        }
                        ForList(src){
                            If(#result#=="false"){
                                SetVar(hl, text-danger)
                            }.Else{
                                SetVar(hl, text-success)
                            }
                            Div(form-group row #hl#){
                                Div(col-sm-2 text-center){}
                                Div(col-sm-10){
                                    Div(col-sm-10){
                                        #name#
                                    }
                                    Div(col-sm-2){#result#}
                                }
                            }
                        }
                    }
                    
                    
                    
                    Div(h3){Page operation tests, DateTime(#now#)}
                    Div(form-group row){
                        Div(col-sm-2 text-center){details}
                        Div(col-sm-10){
                            Div(col-sm-10 text-center){case}
                            Div(col-sm-2){result}
                        }
                    }
                    Div(form-group row){
                        Div(col-sm-2 text-muted text-center){
                            If(){
                                SetVar(t1_false, text-danger)
                            }.Else{
                                SetVar(t1_true, text-success)
                            }
                        }
                        Div(col-sm-10 #t1_true# #t1_false#){
                            Div(col-sm-10){"normal If"}
                            Div(col-sm-2){
                                If(GetVar(t1_false)){false}.Else{true}
                            }
                        }
                    }
                    Div(form-group row){
                        Div(col-sm-2 text-muted text-center){
                            SetVar("Condition1", 1).("Condition2", 0.3)
                            If(And(GetVar("Condition2") == 0.3, And(GetVar("Condition1") == 1, Or(GetVar("Condition2") == 0, GetVar("Condition1") == 0)))){
                                SetVar(t2_false, text-danger)
                            }.Else{
                                SetVar(t2_true, text-success)
                            }
                        }
                        Div(col-sm-10 #t2_true# #t2_false#){
                            Div(col-sm-10){"complex If, And, Or with GetVars"}
                            Div(col-sm-2){
                                If(GetVar(t2_false)){false}.Else{true}
                            }
                        }
                    }
                    Div(form-group row){
                        Div(col-sm-2 text-muted text-center){
                            SetVar("Condition1", 1).("Condition2", 0.3)
                            If(And(0.3 == 0.3, And(1 == 1, Or(0.3 == 0, 1 == 0)))){
                                SetVar(t3_false, text-danger)
                            }.Else{
                                SetVar(t3_true, text-success)
                            }
                        }
                        Div(col-sm-10 #t3_true# #t3_false#){
                            Div(col-sm-10){"complex If, And, Or with values"}
                            Div(col-sm-2){
                                If(GetVar(t3_false)){false}.Else{true}
                            }
                        }
                    }
                    Div(form-group row){
                        Div(col-sm-2 text-muted text-center){
                            SetVar("Condition3", 1)
                            If(#Condition3# == 2){
                                1 SetVar(t4_false, text-danger)
                            }.ElseIf(#Condition3# == 1){
                                SetVar("Condition3", 2)
                                2 SetVar(t4_true, text-success)
                            }.ElseIf(#Condition3# == 2){
                                3 SetVar(t4_false, text-danger)
                            }.Else{
                                else SetVar(t4_false, text-danger)
                            }
                        }
                        Div(col-sm-10 #t4_true# #t4_false#){
                            Div(col-sm-10){"If: reset condition"}
                            Div(col-sm-2){
                                If(GetVar(t4_false)){false}.Else{true}
                            }
                        }
                    }
                    Div(form-group row){
                        Div(col-sm-2 text-muted text-center){
                            SetVar("Condition4", 1)
                            If(GetVar(Condition4) == 2){
                                1 SetVar(t5_false, text-danger)
                            }.ElseIf(GetVar(Condition4) == 1){
                                SetVar("Condition4", 2)
                                2 SetVar(t5_true, text-success)
                            }.ElseIf(GetVar(Condition4) == 2){
                                3 SetVar(t5_false, text-danger)
                            }.Else{
                                else SetVar(t5_false, text-danger)
                            }
                        }
                        Div(col-sm-10 #t5_true# #t5_false#){
                            Div(col-sm-10){"If: reset condition with GetVar"}
                            Div(col-sm-2){
                                If(GetVar(t5_false)){false}.Else{true}
                            }
                        }
                    }
                    Div(form-group row){
                        Div(col-sm-2 text-muted text-center){
                            SetVar(coltype, GetColumnType(members, member_name))
                            SetVar(colnone, GetColumnType(none, none))
                            SetVar(colempty, GetColumnType())
                            If(Or(#coltype#!="varchar",#colnone#>0,#colempty#>0)){
                                SetVar(t6_false, text-danger)
                            }.Else{
                                SetVar(t6_true, text-success)
                            }
                        }
                        Div(col-sm-10 #t6_true# #t6_false#){
                            Div(col-sm-10){"GetColumnType"}
                            Div(col-sm-2){
                                If(GetVar(t6_false)){false}.Else{true}
                            }
                        }
                    }
                    Div(form-group row){
                        Div(col-sm-2 text-muted text-center){
                            DBFind(parameters, src_par).Columns("id").Order(id).Where("id >= 1 and id <= 3").Count(count)
                            If(#count#==3){
                                SetVar(t7_true, text-success)
                            }.Else{
                                SetVar(t7_false, text-danger)
                            }
                        }
                        Div(col-sm-10 #t7_true# #t7_false#){
                            Div(col-sm-10){ DBFind: Count }
                            Div(col-sm-2){
                                If(GetVar(t7_false)){false}.Else{true}
                            }
                        }
                    }
                    Div(form-group row){
                        Div(col-sm-2 text-muted text-center){
                            SetVar(where)
                            DBFind(contracts, src).Columns(id).Order(id).Limit(3).Custom(a){SetVar(where, #where# #id#)}
                            If(#where#=="1 2 3"){
                                SetVar(t8_true, text-success)
                            }.Else{
                                SetVar(t8_false, text-danger)
                            }
                        }
                        Div(col-sm-10 #t8_true# #t8_false#){
                            Div(col-sm-10){"DBFind: as ForList"}
                            Div(col-sm-2){
                                If(GetVar(t8_false)){false}.Else{true}
                            }
                        }
                    }
                    Div(form-group row){
                        Div(col-sm-2 text-muted text-center){
                            DBFind(contracts, src).Order(id).Where("id=2").Vars(t9_vars)
                            If(#t9_vars_id#==2){
                                SetVar(t9_true, text-success)
                            }.Else{
                                SetVar(t9_false, text-danger)
                            }
                        }
                        Div(col-sm-10 #t9_true# #t9_false#){
                            Div(col-sm-10){"DBFind: Vars"}
                            Div(col-sm-2){
                                If(GetVar(t9_false)){false}.Else{true}
                            }
                        }
                    }
                    Div(form-group row){
                        Div(col-sm-2 text-muted text-center){
                            If(#isMobile#==0){
                                Desktop
                                SetVar(t10_true, text-success)
                            }.Else{
                                If(#isMobile#==1){
                                    Mobile
                                    SetVar(t10_true, text-success)
                                }.Else{
                                    SetVar(t10_false, text-danger)
                                }
                            }
                        }
                        Div(col-sm-10 #t10_true# #t10_false#){
                            Div(col-sm-10){"isMobile"}
                            Div(col-sm-2){
                                If(GetVar(t10_false)){false}.Else{true}
                            }
                        }
                    }
                    Div(form-group row){
                        Div(col-sm-2 text-muted text-center){
                            Range(t11_my,0,5)
                            SetVar(t11,"")
                            ForList(t11_my){SetVar(t11,#t11# #t11_my_index#=#id#)}
                            If(#t11#=="1=0 2=1 3=2 4=3 5=4"){
                                SetVar(t11_true, text-success)
                            }.Else{
                                SetVar(t11_false, text-danger)
                            }
                        }
                        Div(col-sm-10 #t11_true# #t11_false#){
                            Div(col-sm-10){"Range: default values"}
                            Div(col-sm-2){
                                If(GetVar(t11_false)){false}.Else{true}
                            }
                        }
                    }
                    Div(form-group row){
                        Div(col-sm-2 text-muted text-center){
                            Range(t12_none,20,0)
                            SetVar(t12,"")
                            ForList(t12_none){t12,#t12# #none_index#=#id#}
                            If(#t12#==""){
                                SetVar(t12_true, text-success)
                            }.Else{
                                SetVar(t12_false, text-danger)
                            }
                        }
                        Div(col-sm-10 #t12_true# #t12_false#){
                            Div(col-sm-10){"Range: none with desc without negative step"}
                            Div(col-sm-2){
                                If(GetVar(t12_false)){false}.Else{true}
                            }
                        }
                    }
                    Div(form-group row){
                        Div(col-sm-2 text-muted text-center){
                            SetVar(t13,"").(from, 5).(to, -4).(step,-2)
                            Range(Source: neg, From: #from#, To: #to#, Step: #step#)
                            ForList(neg){SetVar(t13,#t13# #neg_index#=#id#)}
                            If(#t13#=="1=5 2=3 3=1 4=-1 5=-3"){
                                SetVar(t13_true, text-success)
                            }.Else{
                                SetVar(t13_false, text-danger)
                            }
                        }
                        Div(col-sm-10 #t13_true# #t13_false#){
                            Div(col-sm-10){"Range: interpolation, desc"}
                            Div(col-sm-2){
                                If(GetVar(t13_false)){false}.Else{true}
                            }
                        }
                    }
                    Div(form-group row){
                        Div(col-sm-2 text-muted text-center){
                            SetVar(t14,"")
                            Range(t14_zero,0,5,0)
                            ForList(t14_zero){SetVar(t14,#t14# #zero_index#=#id#)}
                            If(#t14#==""){
                                SetVar(t14_true, text-success)
                            }.Else{
                                SetVar(t14_false, text-danger)
                            }
                        }
                        Div(col-sm-10 #t14_true# #t14_false#){
                            Div(col-sm-10){"Range: step zero"}
                            Div(col-sm-2){
                                If(GetVar(t14_false)){false}.Else{true}
                            }
                        }
                    }
                    Div(form-group row){
                        Div(col-sm-2 text-muted text-center){
                            SetVar(t15,"")
                            JsonToSource(t15_none, ["q","p"])
                            ForList(t15_none){SetVar(t15,#t15# #key#:#value#)}
                            If(#t15#==""){
                                SetVar(t15_true, text-success)
                            }.Else{
                                SetVar(t15_false, text-danger)
                            }
                        }
                        Div(col-sm-10 #t15_true# #t15_false#){
                            Div(col-sm-10){"JsonToSource: bad object"}
                            Div(col-sm-2){
                                If(GetVar(t15_false)){false}.Else{true}
                            }
                        }
                    }
                    Div(form-group row){
                        Div(col-sm-2 text-muted text-center){
                            SetVar(t17,"").(t17_obj,{"p1":"v1", "p2":"v2"})
                            JsonToSource(t17_pv, #t17_obj#)
                            ForList(t17_pv){SetVar(t17,#t17# #key#:#value#)}
                            If(#t17#=="p1:v1 p2:v2"){
                                SetVar(t17_true, text-success)
                            }.Else{
                                SetVar(t17_false, text-danger)
                            }
                        }
                        Div(col-sm-10 #t17_true# #t17_false#){
                            Div(col-sm-10){"JsonToSource: set from interpolation"}
                            Div(col-sm-2){
                                If(GetVar(t17_false)){false}.Else{true}
                            }
                        }
                    }
                    Div(form-group row){
                        Div(col-sm-2 text-muted text-center){
                            SetVar(t18,"")
                            JsonToSource(t18_dat, {"param":"va lue", "obj": {"sub":"one"}, "arr":["one"], "empty": null})
                            ForList(t18_dat){SetVar(t18,#t18# #key#:#value#)}
                            If(#t18#=="arr:[one] empty: obj:map[sub:one] param:va lue"){
                                SetVar(t18_true, text-success)
                            }.Else{
                                SetVar(t18_false, text-danger)
                            }
                        }
                        Div(col-sm-10 #t18_true# #t18_false#){
                            Div(col-sm-10){"JsonToSource: plane"}
                            Div(col-sm-2){
                                If(GetVar(t18_false)){false}.Else{true}
                            }
                        }
                    }
                    Div(form-group row){
                        Div(col-sm-2 text-muted text-center){
                            SetVar(t19, 0).(t19, "#t19#7").(t19_where, "#t19_w# 1#t19#")
                            If(#t19_where#=="#t19_w# 107"){
                                SetVar(t19_true, text-success)
                            }.Else{
                                SetVar(t19_false, text-danger)
                            }
                        }
                        Div(col-sm-10 #t19_true# #t19_false#){
                            Div(col-sm-10){"SetVar: interpolations"}
                            Div(col-sm-2){
                                If(GetVar(t19_false)){false}.Else{true}
                            }
                        }
                    }
                    Div(form-group row){
                        Div(col-sm-2 text-muted text-center){
                            SetVar(t20, 1)
                            If(#t20# < -1){
                                SetVar(t20_false, text-danger)
                            }.Else{
                                SetVar(t20_true, text-success)
                            }
                        }
                        Div(col-sm-10 #t20_true# #t20_false#){
                            Div(col-sm-10){"If: interpolation in condition"}
                            Div(col-sm-2){
                                If(GetVar(t20_false)){false}.Else{true}
                            }
                        }
                    }
                    Div(form-group row){
                        Div(col-sm-2 text-muted text-center){
                            SetVar(t21, 1)
                            If(GetVar(t21) < -1){
                                SetVar(t21_false, text-danger)
                            }.Else{
                                SetVar(t21_true, text-success)
                            }
                        }
                        Div(col-sm-10 #t21_true# #t21_false#){
                            Div(col-sm-10){"If: compare GetVar condition"}
                            Div(col-sm-2){
                                If(GetVar(t21_false)){false}.Else{true}
                            }
                        }
                    }
                    Div(form-group row){
                        Div(col-sm-2 text-muted text-center){
                            SetVar(t22, 1)
                            SetVar(t22_test, GetVar(t22))
                            If(#t22_test# < -1){
                                SetVar(t22_false, text-danger)
                            }.Else{
                                SetVar(t22_true, text-success)
                            }
                        }
                        Div(col-sm-10 #t22_true# #t22_false#){
                            Div(col-sm-10){"If: compare interpolation condition"}
                            Div(col-sm-2){
                                If(GetVar(t22_false)){false}.Else{true}
                            }
                        }
                    }
                    Div(form-group row){
                        Div(col-sm-2 text-muted text-center){
                            If(){
                                SetVar(t23_false, text-danger)
                            }.Else{
                                SetVar(t23_true, text-success)
                            }
                        }
                        Div(col-sm-10 #t23_true# #t23_false#){
                            Div(col-sm-10){"If: initialization of variables in the false branches"}
                            Div(col-sm-2){
                                If(GetVar(t23_false)){false}.Else{true}
                            }
                        }
                    }
                    Div(form-group row){
                        Div(col-sm-2 text-muted text-center){
                            SetVar(t24,Calculate(Exp: 342278783438/0, Type: money)Calculate(Exp: 5.2/0, Type: float)Calculate(Exp: 7/0))
                            If(#t24#=="dividing by zerodividing by zerodividing by zero"){
                                SetVar(t24_true, text-success)
                            }.Else{
                                SetVar(t24_false, text-danger)
                            }
                        }
                        Div(col-sm-10 #t24_true# #t24_false#){
                            Div(col-sm-10){"Calculate: dividing by zero"}
                            Div(col-sm-2){
                                If(GetVar(t24_false)){false}.Else{true}
                            }
                        }
                    }
                    Div(form-group row){
                        Div(col-sm-2 text-muted text-center){
                            SetVar(t25_val, 2200000034343443343430000).(t25_zero, 0)
                            If("753013346318631859.1075080680647-468"==Calculate(Exp: (342278783438+5000)*(#t25_val#-932780000), Type: money, Prec:18).(Exp: (2+50)*(#t25_zero#-9), Type: money)){
                                SetVar(t25_true, text-success)
                            }.Else{
                                SetVar(t25_false, text-danger)
                            }
                        }
                        Div(col-sm-10 #t25_true# #t25_false#){
                            Div(col-sm-10){"Calculate"}
                            Div(col-sm-2){
                                If(GetVar(t25_false)){false}.Else{true}
                            }
                        }
                    }
                    Div(form-group row){
                        Div(col-sm-2 text-muted text-center){
                            SetVar(t26_val, 100)
                            SetVar(t26_res, `Calculate(10000-(34+5)*#t26_val#)=Calculate("((10+#t26_val#-45)*3.0-10)/4.5 + #t26_val#", Prec: 4)`)
                            If("6100=141.1111"==#t26_res#){
                                SetVar(t26_true, text-success)
                            }.Else{
                                SetVar(t26_false, text-danger)
                            }
                        }
                        Div(col-sm-10 #t26_true# #t26_false#){
                            Div(col-sm-10){"Calculate2"}
                            Div(col-sm-2){
                                If(GetVar(t26_false)){false}.Else{true}
                            }
                        }
                    }
                    Div(form-group row){
                        Div(col-sm-2 text-muted text-center){
                            SetVar(t27_number, EcosysParam(Name: tests_parameters, Index: 2))
                            #t27_number#
                            If(#t27_number#=="test2"){
                                SetVar(t27_true, text-success)
                            }.Else{
                                SetVar(t27_false, text-danger)
                            }
                        }
                        Div(col-sm-10 #t27_true# #t27_false#){
                            Div(col-sm-10){"Get EcosysParam by number index"}
                            Div(col-sm-2){
                                If(GetVar(t27_false)){false}.Else{true}
                            }
                        }
                    }
                    Div(form-group row){
                        Div(col-sm-2 text-muted text-center){
                            SetVar(t28_type, 2)
                            SetVar(t28_interpolate, EcosysParam(Name: tests_parameters, Index: #t28_type#))
                            #t28_interpolate#
                            If(#t28_interpolate#=="test2"){
                                SetVar(t28_true, text-success)
                            }.Else{
                                SetVar(t28_false, text-danger)
                            }
                        }
                        Div(col-sm-10 #t28_true# #t28_false#){
                            Div(col-sm-10){"Get EcosysParam by interpolation index"}
                            Div(col-sm-2){
                                If(GetVar(t28_false)){false}.Else{true}
                            }
                        }
                    }
                    Div(form-group row){
                        Div(col-sm-2 text-muted text-center){
                            SetVar(t29_type, 2)
                            SetVar(t29_getvar, EcosysParam(Name: tests_parameters, Index: GetVar(t29_type)))
                            EcosysParam(Name: tests_parameters, Index: GetVar(t29_type))
                            #t29_getvar#
                            If(#t29_getvar#=="test2"){
                                SetVar(t29_true, text-success)
                            }.Else{
                                SetVar(t29_false, text-danger)
                            }
                        }
                        Div(col-sm-10 #t29_true# #t29_false#){
                            Div(col-sm-10){"Get EcosysParam by GetVar index"}
                            Div(col-sm-2){
                                If(GetVar(t29_false)){false}.Else{true}
                            }
                        }
                    }
                    Div(form-group row){
                        Div(col-sm-2 text-muted text-center){
                            EcosysParam(Name: tests_parameters, Source: t30_src)
                            ForList(t30_src){
                                If(#name#=="test1"){
                                    SetVar(t30, "ok")
                                }
                            }
                            If(#t30#=="ok"){
                                SetVar(t30_true, text-success)
                            }.Else{
                                SetVar(t30_false, text-danger)
                            }
                        }
                        Div(col-sm-10 #t30_true# #t30_false#){
                            Div(col-sm-10){"Get EcosysParam as ForList source"}
                            Div(col-sm-2){
                                If(GetVar(t30_false)){false}.Else{true}
                            }
                        }
                    }
                    
                }
            }
        }
    }
}
