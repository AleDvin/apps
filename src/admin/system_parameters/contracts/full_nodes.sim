contract full_nodes {
    data {
        Value string
    }

    conditions {
        if Size($Value) == 0 {
            warning "Value was not received"
        }

        var fullNodes keys array lenFullNodes lenKeys int
        if !HasPrefix($Value, "[") {
            warning "Wrong array structure"
        }
        fullNodes = JSONDecode($Value)

        lenFullNodes = Len(fullNodes)
        if lenFullNodes == 0 {
            warning "Empty array"
        }
        keys[0] = "public_key"
        keys[1] = "tcp_address"
        keys[2] = "api_address"
        keys[3] = "key_id"
        lenKeys = Len(keys)
        var i int
        while i < lenFullNodes {
            var node map errs array k int
            node = fullNodes[i]
            while k < lenKeys {
                if !node[keys[k]] {
                    errs = Append(errs, keys[k])
                }else{
                    if Size(node[keys[k]]) < 2 {
                        errs = Append(errs, keys[k])
                    }
                }
                k=k+1
            }
            if Len(errs) > 0{
                warning Sprintf("node%v: %v invalid", i, Join(errs, ", "))
            }
            i = i + 1
        }
    }
}