contract NewLang {
    data {
        ApplicationId int "optional"
        Name string
        Trans string "optional"
        Value array "optional"
        IdLanguage array "optional"
    }

    conditions {
        if $ApplicationId == 0 {
            warning "Application id cannot equal 0"
        }

        if DBFind("languages").Columns("id").Where("name = ?", $Name).One("id") {
            warning Sprintf( "Language resource %s already exists", $Name)
        }
	
		var j int
		while j < Len($IdLanguage) {
			if $IdLanguage[j] == "" {
				info("Locale empty")
			}
			if $Value[j] == "" {
				info("Value empty")
			}
			j = j + 1
		}
        EvalCondition("parameters", "changing_language", "value")
    }

    action {
        var i,len int
        var res,langarr string
        len = Len($IdLanguage)
        while i < len {
            if i + 1 == len {
                res = res + Sprintf(`%q: %q`,$IdLanguage[i],$Value[i])
            } else {
                res = res + Sprintf(`%q: %q, `,$IdLanguage[i],$Value[i])
            }
            i = i + 1
        }
        if len > 0 {
            langarr = Sprintf("{"+"%v"+"}", res)
            $Trans = langarr
            $Id = DBInsert("languages", "name,res,app_id", $Name, $Trans, $ApplicationId)
        } else {
            $Id = DBInsert("languages", "name,res,app_id", $Name, $Trans, $ApplicationId)
        }
    }
}