DBFind(sections).WhereId(#id#).Vars(section)

DBFind(Name: roles, Source: src_roles).Where(id NOT IN (#section_roles_access#))
DBFind(Name: roles, Source: src_roles_visible).Where(id IN (#section_roles_access#))

Div(content-wrapper){
	SetTitle("Edit section")
	Div(Class: breadcrumb){
		LinkPage("Sections", section_list)
		Span(/).Style(margin-right: 10px; margin-left: 10px;)
		Span(Class: text-muted, Body: #section_title#)
	}
	
	Form(){
		Div(form-group){
			Label("Title")
			Input(Name: title, Value: #section_title#)
		}
		Div(form-group){
			Data(src_status, "name,value",
				Hidden section,0
				Regular section,1
				Main section,2
			)
			Label("Status")
			Select(Name: status, Value: #section_status#, Source: src_status, NameColumn: "name", ValueColumn: "value")
			Span(Body: "Section with ""Main section"" status must be only one", Class: m0 text-muted)
		}
		Div(form-group){
			Label("Link")
			Input(Name: urlname, Value: #section_urlname#)
		}
		Div(form-group){
			Label("Main page")
			Input(Name: page, Value: #section_page#)
		}
		Div(form-group){
			Label("Visible for roles")
			ForList(src_roles_visible){
				Div(clearfix){
					Input(Name: roles_access_ids, Type: hidden, Value: #id#)
					Input(Name: roles_access_vals, Type: checkbox, Value: "true", Class: pull-left).Style(margin-top:1px)
					Span(Body: #role_name#, Class: pull-left)
				}
			}
			ForList(src_roles){
				Div(clearfix){
					Input(Name: roles_access_ids, Type: hidden, Value: #id#)
					Input(Name: roles_access_vals, Type: checkbox, Value: "false", Class: pull-left).Style(margin-top:1px)
					Span(Body: #role_name#, Class: pull-left)
				}
			}
		}
		Div(form-group){
			Button(Class: btn btn-primary, Body: "Save", Contract: SectionEdit, Page: section_list, Params: "id=#section_id#")
		}
	}
}