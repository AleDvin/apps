
DBFind(applications,src_app).Columns("name,id").Where("name='Basic application'").Vars(application)
SetTitle("List of votings")

If(GetVar(isSearch) == 1){
    SetVar(Name: v_Where, Value: "voting->name='#v_Search#' and deleted=0")
}.Else{
    SetVar(Name: v_Where, Value: "deleted=0")
    SetVar(Name: v_Search, Value: "")
}

DBFind(votings,src_voting).Columns("id,voting->name,voting->type,voting->type_decision,voting->type_participants,flags->success,flags->decision,progress->percent_success,creator->member_id,creator->member_name,date_started,date_ended,deleted").Custom(custom_id){
    Span(Class: h5, Body: #id#)

    DBFind(votings).Columns("date_started").Where("id=#id# and date_started > now()").Vars(started)
    DBFind(votings).Columns("date_ended").Where("id=#id# and date_ended > now()").Vars(ended)

    If(#started_id#>0){
        SetVar(vCmpStartDate,1)
    }.Else{
        SetVar(vCmpStartDate,-1)
    }
    If(#ended_id#>0){
        SetVar(vCmpEndDate,1)
    }.Else{
        SetVar(vCmpEndDate,-1)
    }
}.Custom(custom_name){
    LinkPage(Page: voting_view, PageParams: "vID=#id#"){
        Span(Class: h5 text-bold, Body: #voting.name#)
    }
}.Custom(custom_subject){
    If(Or(#vCmpStartDate#<=0,#voting.type#==2)){
        Span(Class: h6, Body: AppParam(App:#application_id#, Name: type_voting_decisions, Index: #voting.type_decision#))
    }.Else{
        If(#voting.type_decision# == 1){
            LinkPage(Page: voting_decision_candidates, PageParams: "vID=#id#"){
                Span(Class: h6 text-bold, Body: AppParam(App:#application_id#, Name: type_voting_decisions, Index: #voting.type_decision#))
            }
        }
        If(#voting.type_decision# == 2){
            LinkPage(Page: voting_decision_election, PageParams: "vID=#id#"){
                Span(Class: h6 text-bold, Body: AppParam(App:#application_id#, Name: type_voting_decisions, Index: #voting.type_decision#))
            }
        }
        If(#voting.type_decision# == 3){
            LinkPage(Page: voting_decision_document, PageParams: "vID=#id#"){
                Span(Class: h6 text-bold, Body: AppParam(App:#application_id#, Name: type_voting_decisions, Index: #voting.type_decision#))
            }
        }
        If(#voting.type_decision# == 4){
            LinkPage(Page: voting_decision_formal, PageParams: "vID=#id#"){
                Span(Class: h6 text-bold, Body: AppParam(App:#application_id#, Name: type_voting_decisions, Index: #voting.type_decision#))
            }
        }
        If(#voting.type_decision# == 5){
            LinkPage(Page: voting_decision_contract, PageParams: "vID=#id#"){
                Span(Class: h6 text-bold, Body: AppParam(App:#application_id#, Name: type_voting_decisions, Index: #voting.type_decision#))
            }
        }
    }
}.Custom(custom_participants){
    If(Or(#vCmpStartDate#<=0,#voting.type#==2)){
        Span(Class: h6, Body: AppParam(App:#application_id#, Name: type_voting_participants, Index: #voting.type_participants#))
    }.Else{
        LinkPage(Page: voting_invite, PageParams: "vID=#id#"){
            Span(Class: h6 text-bold, Body: AppParam(App:#application_id#, Name: type_voting_participants, Index: #voting.type_participants#))
        }
    }
}.Custom(custom_creator){
    LinkPage(Class: text-primary h5 text-bold, Page: profile_view, PageParams: "v_member_id=#creator.member_id#"){
        Span(Body: #creator.member_name#)
    }
}.Custom(custom_date){
    If(#vCmpStartDate# < 0){
        Div(Class: text-muted, Body: DateTime(DateTime: #date_started#, Format: "DD.MM.YYYY HH:MI"))
    }.Else{
        Div(Class: text-bold, Body: DateTime(DateTime: #date_started#, Format: "DD.MM.YYYY HH:MI"))
    }
    If(#vCmpEndDate# < 0){
        Div(Class: text-muted, Body: DateTime(DateTime: #date_ended#, Format: "DD.MM.YYYY HH:MI"))
    }.Else{
        Div(Class: text-bold, Body: DateTime(DateTime: #date_ended#, Format: "DD.MM.YYYY HH:MI"))
    }
}.Custom(custom_type){
    Span(Class: h6, Body: AppParam(App:#application_id#, Name: type_voting, Index: #voting.type#))
}.Custom(custom_progress){
    Div(Class: text-center h5 text-bold, Body: #progress.percent_success# %)
}.Custom(custom_decision){
    If(#flags.decision# == 0){
        If(And(#vCmpEndDate#<0,#creator.member_id#==#key_id#)){
            Div(Class: text-center, Body: Button(Body: LangRes(decision), Class: btn btn-primary, Contract: voting_CheckDecision, Params: "votingID=#id#", Page: voting_list))
        }.Else{
            Div(Class: text-muted text-center, Body: LangRes(no))
        }
    }
    If(#flags.decision# == -2){
        Div(Class: text-muted text-center, Body: LangRes(not_enough_votes))
    }
    If(#flags.decision# == 1){
        Div(Class: text-success text-center, Body: LangRes(accepted))
    }
    If(#flags.decision# == -1){
        Div(Class: text-danger text-center, Body: LangRes(rejected))
    }
}.Custom(custom_status){
    Div(text-center){
        If(#flags.success# == 1){
            Span(Class: text-success, Body: LangRes(success))
        }.Else{
            If(#vCmpEndDate# < 0){
                Span(Class: text-muted, Body: LangRes(finished))
            }.Else{
                If(#vCmpStartDate# < 0){
                    Button(Class: btn btn-link, Page: voting_view, PageParams: "vID=#id#"){
                        Span(Class: h4, Body: Em(Class: fa icon-eye))
                    }
                }.Else{
                    Span(Class: text-warning, Body: LangRes(waiting))
                }
            }
        }
    }
}.Custom(actions){
    Div(text-right){
        If(#vCmpStartDate# > 0){
            Button(Body: Em(Class: fa fa-trash), Class: btn btn-default, Contract: voting_Delete, Params: "votingID=#id#", Page: voting_list).Alert(Text: $want_delete_voting$, ConfirmButton: $yes$, CancelButton: $no$, Icon: question)
        }
    }
}.Where(#v_Where#).Order(id desc)
If(comment=="create voting work good"){
    AddToolButton(Title: $create$, Page: voting_create, Icon: icon-plus)
}
Div(content-wrapper){
    Form(panel panel-primary){
        Div(panel-body){
            Div(row){
                Div(col-md-12){
                    Div(input-group){
                        Div(input-group-addon){
                            LangRes(name)
                        }
                        Input(Name: Search, Value: #v_Search#)
                        Div(input-group-btn){
                            Button(Body: Em(Class: fa fa-search), Class: btn btn-default, Page: voting_list, PageParams: "isSearch=1,v_Search=Val(Search)")
                        }
                    }
                }
                Div(col-md-12){
                    Div(table-responsive){
                        Table(src_voting, "$id$=custom_id,$name$=custom_name,$type$=custom_type,$subject_voting$=custom_subject,$participants$=custom_participants,$date_start$/$date_end$=custom_date,$creator$=custom_creator,$progress$=custom_progress,$decision$=custom_decision,$status$=custom_status,=actions")
                    }
                }
            }
            If(GetVar(isSearch) == 1){
                Div(row){
                    Div(col-md-12 mt-lg){
                        Div(text-center){
                            Button(Body: $view_all$, Class: btn btn-default, Page: voting_list, PageParams: "isSearch=0")
                        }
                    }
                }
            }
        }
    }
}