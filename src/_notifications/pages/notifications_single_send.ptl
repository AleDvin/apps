Div(content-wrapper){
    DBFind(applications,src_app).Columns("name,id").Where("name='Basic application'").Vars(app)
    DBFind(members,members).Ecosystem(1).Columns("id,member_name").Custom(name){#member_name#}
    DBFind(ecosystems,ecosystems).Ecosystem(1).Columns("id,name")
    AppParam(App:#app_id#, Name: notification_sender, Source: senders)
    AppParam(App:#app_id#, Name: notification_icon, Source: icons)
    SetVar(params_map,`{"param_int":"10","param_str":"my_string"}`)
    Data(section0,"Name,Type,Res,Req,Src,Val"){
        eco,select,ecosystem,,ecosystems,#ecosystem_id#
    }
    Data(section1,"Name,Type,Res,Req,Src,Val"){
        member_id,select,recipient,*,members,
    }
    Data(section2,"Name,Type,Res,Req,Src,Val"){
        sender,select,sender,*,senders,
    }
    Data(section3,"Name,Type,Res,Req,Src,Val"){
        icon_name,name_select,icon,,icons,
        text_header,validated_input,header,*,,"Header text"
        text_body,input,body_text,*,,"Body text"
    }
    Data(section4,"Name,Type,Res,Req,Src,Val"){
        page_name,validated_input,page_name,*,,"notifications_testpage"
        params_map,input,params,,,#params_map#
    }

    Data(sections, "Section"){
        section0
        section1
        section2
        section3
        section4
    }

    SetTitle($single_notifics$)
    Div(breadcrumb){
        LinkPage($single_notifics$, notifications_single)
        Span(/).Style(margin-right: 10px; margin-left: 10px;)
        Span(Class: text-muted, Body: $send$)
    }
    Div(container){
        Div(row){
            Div(col-md-8 col-md-offset-2){
                Form(panel panel-primary){
                    Div(panel-heading){LangRes(single_notifics)}
                    Div(panel-body){
                        ForList(sections){
                            Div(list-group-item){
                                ForList(#Section#){
                                    Div(row mt-sm){
                                        Div(col-md-3 text-right text-nowrap){
                                            Label(For:#Name#){LangRes(#Res#)}
                                            If(#Req#==*){
                                                Span(*,text-danger)
                                            }
                                        }
                                        Div(col-md-9 text-left){
                                            If(#Type#==select){
                                                Select(Name: #Name#, Source: #Src#, NameColumn: name, ValueColumn: id, Value:#Val#)
                                            }.ElseIf(#Type#==name_select){
                                                Select(Name: #Name#, Source: #Src#, NameColumn: name, ValueColumn: name)
                                            }.ElseIf(#Type#==validated_input){
                                                Input(Name: #Name#, Value: #Val#).Validate(minLength:3, maxLength:255)
                                                InputErr(Name: #Name#, minLength: "Too short", maxLength: "Too long")
                                            }.ElseIf(#Type#==input){
                                                Input(Name: #Name#, Value: #Val#)
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    Div(panel-footer text-right){
                        Button(Body: LangRes(back), Class: btn btn-default pull-left, Page: notifications_single)
                        Button(Body: LangRes(send), Class: btn btn-primary, Page: notifications_single, Contract: notifications_Send)
                    }
                }
            }
        }
    }
}