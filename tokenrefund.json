{
    "blocks": [],
    "contracts": [
        {
            "Name": "tokenrefund_Start",
            "Value": "contract tokenrefund_Start{\n    data{\n        SufferingAccount string\n        SuspectAccount string\n        Amount int\n        Note string\n        DateStart string \"date\"\n        DateEnd string \"date\"\n        DatetimeNow string \"date\"\n        TimeNow string \"date\"\n    }\n    \n    conditions{\n        var allowed map\n        allowed = DBFind(\"roles_assign\").Where(\"role_name='Validator' and role_type=3 and delete=0 and member_id=?\", $key_id)\n        if !allowed{\n            warning \"You can not to run this\"\n        }\n        \n        var template_id int\n        template_id = DBFind(\"laws\").Where(\"name='tokenrefund'\").One(\"voting_template_id\")\n        if template_id == nil{\n            info \"Template not found\"\n        }\n        \n        $template = DBFind(\"voting_templates\").Where(\"id=?\", template_id).Row()\n        $votersRoleName = $template[\"voters\"]\n        $votingName = $template[\"title\"]\n        $typeParticipants = 3 // участников добавим по роли\n        $typeDecision = 5 // запуск контракта\n        $typeVoting = 2 // системное голосование\n        $volume = Int($template[\"volume\"])\n        $quorum = Int($template[\"quorum\"])\n        $contractAccept = $template[\"contract_accept\"]\n        $contractReject = $template[\"contract_reject\"]\n        \n        $desc = Sprintf(\"%v [#%v]\", $votingName, $TemplateId)\n        \n        \n        $isCreated = DBFind(\"voting_instances\").Where(\"name=? and description=? and delete=0\", $votingName, $desc).Row()\n        if $isCreated{\n            // info \"Voting already created\" // раскомментировать на проде\n        }\n        \n        $defaultParams = Sprintf(\"VotingTemplateId->%v;KeyId->%v\", $TemplateId, $key_id)\n    }\n    \n    action{\n        $voting_id = 0 // должно установиться в voting_CreateNew\n        voting_CreateNew(\"voting_name,type_voting,description,type_participants,type_decision,volume,quorum,now_date,start_time,end_time,start_date,end_date\", $votingName, $typeVoting, $desc, $typeParticipants, $typeDecision, $volume, $quorum, $DatetimeNow, $TimeNow, $TimeNow, $DateStart, $DateEnd)\n        if $voting_id == 0 {\n            $voting_id = DBFind(\"voting_instances\").Where(\"voting_name=? and start_date=?\", $votingName, $DateStart).One(\"id\")\n            $voting_id = Int($voting_id)\n        }\n        voting_SubjectContract(\"votingID,contract_reject,contract_accept,contract_reject_params,contract_accept_params\", $voting_id, $contractAccept, $contractReject, $defaultParams, $defaultParams)\n        \n        var roleId int\n        roleId = DBFind(\"roles_list\").Where(\"role_name=? and delete=0\", $votersRoleName).One(\"id\")\n        voting_Invite(\"votingID,var_id\", $voting_id, roleId)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        }
    ],
    "data": [
        {
            "Table": "voting_templates",
            "Columns": [
                "voters",
                "title",
                "volume",
                "quorum",
                "contract_accept",
                "contract_reject"
            ],
            "Data": [
                [
                    "Investor with voting rights",
                    "Token Refund",
                    "70",
                    "51",
                    "tokenrefund_Accept",
                    "tokenrefund_Reject"
                ]
            ]
        }
    ],
    "languages": [
        {
            "Name": "description",
            "Conditions": "",
            "Trans": "{\"en\": \"Description\", \"ru\": \"Описание\"}"
        },
        {
            "Name": "request_refund",
            "Conditions": "",
            "Trans": "{\"en\": \"To request a refund\", \"ru\": \"Запросить возврат средств\"}"
        },
        {
            "Name": "start_refund",
            "Conditions": "",
            "Trans": "{\"en\": \"To start the refund\", \"ru\": \"Начать возврат средств\"}"
        },
        {
            "Name": "tokenrefund_start",
            "Conditions": "",
            "Trans": "{\"en\": \"Closed\", \"ru\": \"Закрыто\"}"
        },
        {
            "Name": "tokenrefund_status0",
            "Conditions": "",
            "Trans": "{\"en\": \"Blocked accounts\", \"ru\": \"Заблокированы аккаунты\"}"
        },
        {
            "Name": "tokenrefund_status1",
            "Conditions": "",
            "Trans": "{\"en\": \"Discussion\", \"ru\": \"Обсуждение\"}"
        },
        {
            "Name": "tokenrefund_status2",
            "Conditions": "",
            "Trans": "{\"en\": \"Voting\", \"ru\": \"Голосование\"}"
        },
        {
            "Name": "tokenrefund_status3",
            "Conditions": "",
            "Trans": "{\"en\": \"Closed\", \"ru\": \"Закрыто\"}"
        }
    ],
    "menus": [
        {
            "Name": "default_menu",
            "Value": "MenuItem(Title:$tokenrefund_list$, Page:tokenrefund_list, Icon:\"icon-credit-card\")",
            "Conditions": "ContractAccess(\"@1EditMenu\")"
        }
    ],
    "pages": [
        {
            "Name": "tokenrefund_list",
            "Value": "Div(content-wrapper){\n    SetTitle($tokenrefund_list$)\n    \n    DBFind(Name: tokenrefund, Source: src).Order(id desc).Custom(_status){\n        If(#status#>0){\n            EcosysParam(Name: tokenrefund_status, Index: #status#)\n        }.Else{\n            $tokenrefund_status0$\n        }\n    }.Custom(_blocked){\n        DateTime(Format: YYYY-MM-DD HH:MI:SS, DateTime: #blocked_at#)\n    }.Custom(_closed){\n        DateTime(Format: YYYY-MM-DD HH:MI:SS, DateTime: #closed_at#)\n    }\n    \n    Div(panel panel-primary){\n        Div(list-group-item){\n            Table(Source: src, Columns: \"$accounts$=accounts,$amount$=amount,$description$=note,$validator_id$=validator_id,$blocked$=_blocked,$voting_id$=voting_id,$result$=result,$status$=status,$closed$=_closed\")\n        }\n        \n        Div(panel-footer clearfix){\n            Form(pull-right){\n                Button(Body: $request_refund$, Class: btn btn-primary, Page: tokenrefund_start)\n            }\n        }\n    }\n}\n\n",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Menu": "default_menu"
        },
        {
            "Name": "tokenrefund_start",
            "Value": "Data(Source: inputs, Columns:\"name,type,res\"){\n    Amount,number,amount\n    SufferingAccount,text,tokenrefund_suffering\n    SuspectAccount,text,tokenrefund_suspect\n    Note,textarea,description\n}\nDiv(content-wrapper){\n    SetTitle($tokenrefund_start$)\n    Div(row){\n        Div(col-sm-8 col-sm-offset-2 col-lg-6 col-lg-offset-3){\n            Form(panel panel-primary){\n                Div(panel-heading, Body: $new_voting_value$)\n                Div(panel-body){\n                    ForList(Source: inputs){\n                        Div(row form-group){\n                            Div(col-sm-4){LangRes(#res#)}\n                            Div(col-sm-8){\n                                Input(Name: #name#, Type: #type#)\n                            }\n                        }\n                    }\n                }\n                Div(panel-footer text-right){\n                    Input(Name: DateStart, Type: hidden, Value: Now(\"YYYY-MM-DD\", +1 day))\n                    Input(Name: DateEnd, Type: hidden, Value: Now(\"YYYY-MM-DD\", +2 day))\n                    Input(Name: DatetimeNow, Type: hidden, Value: Now(\"YYYY-MM-DD HH:MI\"))\n                    Input(Name: TimeNow, Type: hidden, Value: Now(\"HH:MI\"))\n                    Button(Body: $start_refund$, Contract: tokenrefund_Start, Page: tokenrefund_list, Class: btn btn-primary)\n                }\n            }\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Menu": "default_menu"
        }
    ],
    "parameters": [
        {
            "Name": "tokenrefund_status",
            "Value": "tokenrefund_status1,tokenrefund_status2,tokenrefund_status3",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "tokenrefund_voting_template_id",
            "Value": "0",
            "Conditions": "ContractConditions(\"MainCondition\")"
        }
    ],
    "tables": [
        {
            "Name": "laws",
            "Columns": "[\n    {\n        \"name\": \"name\",\n        \"type\": \"varchar\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"page\",\n        \"type\": \"varchar\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"voting_template_id\",\n        \"type\": \"number\",\n        \"conditions\": \"true\"\n    }\n]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"
        },
        {
            "Name": "tokenrefund",
            "Columns": "[\n    {\n        \"name\": \"accounts\",\n        \"type\": \"text\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"amount\",\n        \"type\": \"money\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"note\",\n        \"type\": \"text\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"validator_id\",\n        \"type\": \"number\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"blocked_at\",\n        \"type\": \"datetime\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"voting_id\",\n        \"type\": \"number\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"result\",\n        \"type\": \"number\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"status\",\n        \"type\": \"number\",\n        \"conditions\": \"true\"\n    },\n    {\n        \"name\": \"closed_at\",\n        \"type\": \"datetime\",\n        \"conditions\": \"true\"\n    }\n]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}"
        }
    ]
}